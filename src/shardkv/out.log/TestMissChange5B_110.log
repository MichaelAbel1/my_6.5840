Test (5B): servers miss configuration changes...
2025/01/04 13:03:15 {Node 0}{Group 100} started
2025/01/04 13:03:15 {Node 1}{Group 100} started
2025/01/04 13:03:15 {Node 2}{Group 100} started
2025/01/04 13:03:15 {Node 0}{Group 101} started
2025/01/04 13:03:15 {Node 1}{Group 101} started
2025/01/04 13:03:15 {Node 2}{Group 101} started
2025/01/04 13:03:15 {Node 0}{Group 102} started
2025/01/04 13:03:15 {Node 1}{Group 102} started
2025/01/04 13:03:15 {Node 2}{Group 102} started
2025/01/04 13:03:16 {Node 1}{Group 102} fetches latest configuration {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} when currentConfigNum is 0
2025/01/04 13:03:16 {Node 1}{Group 100} fetches latest configuration {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} when currentConfigNum is 0
2025/01/04 13:03:16 {Node 1}{Group 101} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 101} Execute Command Command{commandType: EmptyShards, Data: <nil>} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:16 {Node 2}{Group 101} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:03:16 {Node 0}{Group 101} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:03:16 {Node 2}{Group 102} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:03:16 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:03:16 {Node 2}{Group 102} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:03:16 {Node 1}{Group 102} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:03:16 {Node 0}{Group 102} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} Execute Command Command{commandType: EmptyShards, Data: <nil>} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:16 {Node 0}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:03:16 {Node 0}{Group 102} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:03:16 {Node 1}{Group 102} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:03:16 {Node 1}{Group 102} Execute Command Command{commandType: EmptyShards, Data: <nil>} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:16 {Node 1}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:16 {Node 0}{Group 100} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:03:16 {Node 1}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:03:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:03:16 {Node 2}{Group 100} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:03:16 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:03:16 {Node 0}{Group 100} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:03:16 {Node 1}{Group 101} fetches latest configuration {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} when currentConfigNum is 0
2025/01/04 13:03:16 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 101} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:03:16 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:16 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:03:16 {Node 2}{Group 101} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:03:16 {Node 0}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:03:16 {Node 0}{Group 101} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:03:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 f1BMOGTnADM8t-tG3ZAA Put 3923545586566670955 0}} 3 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {0 f1BMOGTnADM8t-tG3ZAA Put 3923545586566670955 0}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 f1BMOGTnADM8t-tG3ZAA Put 3923545586566670955 0}} 3 1 false [] 0 0}
2025/01/04 13:03:16 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 f1BMOGTnADM8t-tG3ZAA Put 3923545586566670955 0}} 3 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 7ljwhWOfFjmFZ6DPj5Xn Put 3923545586566670955 1}} 4 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {1 7ljwhWOfFjmFZ6DPj5Xn Put 3923545586566670955 1}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 7ljwhWOfFjmFZ6DPj5Xn Put 3923545586566670955 1}} 4 1 false [] 0 0}
2025/01/04 13:03:16 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 7ljwhWOfFjmFZ6DPj5Xn Put 3923545586566670955 1}} 4 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 EDBSQhSO_BnrP0XYsITX Put 3923545586566670955 2}} 5 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {2 EDBSQhSO_BnrP0XYsITX Put 3923545586566670955 2}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 EDBSQhSO_BnrP0XYsITX Put 3923545586566670955 2}} 5 1 false [] 0 0}
2025/01/04 13:03:16 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 EDBSQhSO_BnrP0XYsITX Put 3923545586566670955 2}} 5 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 pJbFp-bDUEInODCgZcUq Put 3923545586566670955 3}} 6 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {3 pJbFp-bDUEInODCgZcUq Put 3923545586566670955 3}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 pJbFp-bDUEInODCgZcUq Put 3923545586566670955 3}} 6 1 false [] 0 0}
2025/01/04 13:03:16 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 pJbFp-bDUEInODCgZcUq Put 3923545586566670955 3}} 6 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4 DaCwySSM93Q5qAX8Tger Put 3923545586566670955 4}} 7 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {4 DaCwySSM93Q5qAX8Tger Put 3923545586566670955 4}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:16 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4 DaCwySSM93Q5qAX8Tger Put 3923545586566670955 4}} 7 1 false [] 0 0}
2025/01/04 13:03:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4 DaCwySSM93Q5qAX8Tger Put 3923545586566670955 4}} 7 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5 SN5TUzqZX1XYJtEJtnlw Put 3923545586566670955 5}} 8 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {5 SN5TUzqZX1XYJtEJtnlw Put 3923545586566670955 5}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:16 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5 SN5TUzqZX1XYJtEJtnlw Put 3923545586566670955 5}} 8 1 false [] 0 0}
2025/01/04 13:03:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5 SN5TUzqZX1XYJtEJtnlw Put 3923545586566670955 5}} 8 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6 ABp-lbMdtKVKMbHG4sjc Put 3923545586566670955 6}} 9 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {6 ABp-lbMdtKVKMbHG4sjc Put 3923545586566670955 6}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6 ABp-lbMdtKVKMbHG4sjc Put 3923545586566670955 6}} 9 1 false [] 0 0}
2025/01/04 13:03:16 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6 ABp-lbMdtKVKMbHG4sjc Put 3923545586566670955 6}} 9 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 ANrNFhGq1mDy5eI_9JEq Put 3923545586566670955 7}} 10 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {7 ANrNFhGq1mDy5eI_9JEq Put 3923545586566670955 7}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:16 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 ANrNFhGq1mDy5eI_9JEq Put 3923545586566670955 7}} 10 1 false [] 0 0}
2025/01/04 13:03:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 ANrNFhGq1mDy5eI_9JEq Put 3923545586566670955 7}} 10 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8 aL-Mn7EUyI-CNc4dL30O Put 3923545586566670955 8}} 11 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {8 aL-Mn7EUyI-CNc4dL30O Put 3923545586566670955 8}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8 aL-Mn7EUyI-CNc4dL30O Put 3923545586566670955 8}} 11 1 false [] 0 0}
2025/01/04 13:03:16 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8 aL-Mn7EUyI-CNc4dL30O Put 3923545586566670955 8}} 11 1 false [] 0 0}
2025/01/04 13:03:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 91cAuHYZdwDYbf4XKfSY Put 3923545586566670955 9}} 12 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 91cAuHYZdwDYbf4XKfSY Put 3923545586566670955 9}} 12 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {9 91cAuHYZdwDYbf4XKfSY Put 3923545586566670955 9}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:16 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 91cAuHYZdwDYbf4XKfSY Put 3923545586566670955 9}} 12 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 3923545586566670955 10}} 13 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {0  Get 3923545586566670955 10}} with CommandReply CommandReply{Err: OK, Value: f1BMOGTnADM8t-tG3ZAA}
2025/01/04 13:03:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 3923545586566670955 10}} 13 1 false [] 0 0}
2025/01/04 13:03:16 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 3923545586566670955 10}} 13 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 3923545586566670955 11}} 14 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {1  Get 3923545586566670955 11}} with CommandReply CommandReply{Err: OK, Value: 7ljwhWOfFjmFZ6DPj5Xn}
2025/01/04 13:03:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 3923545586566670955 11}} 14 1 false [] 0 0}
2025/01/04 13:03:16 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 3923545586566670955 11}} 14 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 3923545586566670955 12}} 15 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {2  Get 3923545586566670955 12}} with CommandReply CommandReply{Err: OK, Value: EDBSQhSO_BnrP0XYsITX}
2025/01/04 13:03:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 3923545586566670955 12}} 15 1 false [] 0 0}
2025/01/04 13:03:16 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 3923545586566670955 12}} 15 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3  Get 3923545586566670955 13}} 16 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {3  Get 3923545586566670955 13}} with CommandReply CommandReply{Err: OK, Value: pJbFp-bDUEInODCgZcUq}
2025/01/04 13:03:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3  Get 3923545586566670955 13}} 16 1 false [] 0 0}
2025/01/04 13:03:16 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3  Get 3923545586566670955 13}} 16 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4  Get 3923545586566670955 14}} 17 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {4  Get 3923545586566670955 14}} with CommandReply CommandReply{Err: OK, Value: DaCwySSM93Q5qAX8Tger}
2025/01/04 13:03:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4  Get 3923545586566670955 14}} 17 1 false [] 0 0}
2025/01/04 13:03:16 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4  Get 3923545586566670955 14}} 17 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5  Get 3923545586566670955 15}} 18 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {5  Get 3923545586566670955 15}} with CommandReply CommandReply{Err: OK, Value: SN5TUzqZX1XYJtEJtnlw}
2025/01/04 13:03:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5  Get 3923545586566670955 15}} 18 1 false [] 0 0}
2025/01/04 13:03:16 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5  Get 3923545586566670955 15}} 18 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6  Get 3923545586566670955 16}} 19 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {6  Get 3923545586566670955 16}} with CommandReply CommandReply{Err: OK, Value: ABp-lbMdtKVKMbHG4sjc}
2025/01/04 13:03:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6  Get 3923545586566670955 16}} 19 1 false [] 0 0}
2025/01/04 13:03:16 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6  Get 3923545586566670955 16}} 19 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7  Get 3923545586566670955 17}} 20 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {7  Get 3923545586566670955 17}} with CommandReply CommandReply{Err: OK, Value: ANrNFhGq1mDy5eI_9JEq}
2025/01/04 13:03:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7  Get 3923545586566670955 17}} 20 1 false [] 0 0}
2025/01/04 13:03:16 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7  Get 3923545586566670955 17}} 20 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8  Get 3923545586566670955 18}} 21 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {8  Get 3923545586566670955 18}} with CommandReply CommandReply{Err: OK, Value: aL-Mn7EUyI-CNc4dL30O}
2025/01/04 13:03:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8  Get 3923545586566670955 18}} 21 1 false [] 0 0}
2025/01/04 13:03:16 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8  Get 3923545586566670955 18}} 21 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9  Get 3923545586566670955 19}} 22 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {9  Get 3923545586566670955 19}} with CommandReply CommandReply{Err: OK, Value: 91cAuHYZdwDYbf4XKfSY}
2025/01/04 13:03:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9  Get 3923545586566670955 19}} 22 1 false [] 0 0}
2025/01/04 13:03:16 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9  Get 3923545586566670955 19}} 22 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 101} fetches latest configuration {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} when currentConfigNum is 1
2025/01/04 13:03:16 {Node 1}{Group 100} fetches latest configuration {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} when currentConfigNum is 1
2025/01/04 13:03:16 {Node 1}{Group 102} fetches latest configuration {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} when currentConfigNum is 1
2025/01/04 13:03:16 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 102} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:03:16 {Node 1}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:16 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:03:16 {Node 2}{Group 102} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:03:16 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 101} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:03:16 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:16 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:03:16 {Node 2}{Group 101} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:03:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 23 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 100} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:03:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 23 1 false [] 0 0}
2025/01/04 13:03:16 {Node 2}{Group 100} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:03:16 {Node 1}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:16 {Node 1}{Group 101} starts a PullTask to get shards [1 0 2 3 4] from group 100 when config is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:03:16 {Node 1}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 2, ShardIDs: [1 0 2 3 4]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:EDBSQhSO_BnrP0XYsITX] 1:map[3:pJbFp-bDUEInODCgZcUq] 2:map[4:DaCwySSM93Q5qAX8Tger] 3:map[5:SN5TUzqZX1XYJtEJtnlw] 4:map[6:ABp-lbMdtKVKMbHG4sjc]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:03:16 {Node 1}{Group 101} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:EDBSQhSO_BnrP0XYsITX] 1:map[3:pJbFp-bDUEInODCgZcUq] 2:map[4:DaCwySSM93Q5qAX8Tger] 3:map[5:SN5TUzqZX1XYJtEJtnlw] 4:map[6:ABp-lbMdtKVKMbHG4sjc]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 2
2025/01/04 13:03:16 {Node 1}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 2 map[0:map[2:EDBSQhSO_BnrP0XYsITX] 1:map[3:pJbFp-bDUEInODCgZcUq] 2:map[4:DaCwySSM93Q5qAX8Tger] 3:map[5:SN5TUzqZX1XYJtEJtnlw] 4:map[6:ABp-lbMdtKVKMbHG4sjc]] map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 4 1 false [] 0 0}
2025/01/04 13:03:16 {Node 1}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:EDBSQhSO_BnrP0XYsITX] 1:map[3:pJbFp-bDUEInODCgZcUq] 2:map[4:DaCwySSM93Q5qAX8Tger] 3:map[5:SN5TUzqZX1XYJtEJtnlw] 4:map[6:ABp-lbMdtKVKMbHG4sjc]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:03:16 {Node 1}{Group 101} Execute Command Command{commandType: InsertShards, Data: {OK 2 map[0:map[2:EDBSQhSO_BnrP0XYsITX] 1:map[3:pJbFp-bDUEInODCgZcUq] 2:map[4:DaCwySSM93Q5qAX8Tger] 3:map[5:SN5TUzqZX1XYJtEJtnlw] 4:map[6:ABp-lbMdtKVKMbHG4sjc]] map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:03:16 {Node 2}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 2 map[0:map[2:EDBSQhSO_BnrP0XYsITX] 1:map[3:pJbFp-bDUEInODCgZcUq] 2:map[4:DaCwySSM93Q5qAX8Tger] 3:map[5:SN5TUzqZX1XYJtEJtnlw] 4:map[6:ABp-lbMdtKVKMbHG4sjc]] map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 4 1 false [] 0 0}
2025/01/04 13:03:16 {Node 2}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:EDBSQhSO_BnrP0XYsITX] 1:map[3:pJbFp-bDUEInODCgZcUq] 2:map[4:DaCwySSM93Q5qAX8Tger] 3:map[5:SN5TUzqZX1XYJtEJtnlw] 4:map[6:ABp-lbMdtKVKMbHG4sjc]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:03:17 {Node 1}{Group 101} starts a GCTask to delete shards [1 0 2 3 4] from group 100 when config is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} fetches latest configuration {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 2
2025/01/04 13:03:17 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 4 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 102} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:17 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 4 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 102} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc000193110 1:0xc000193120 2:0xc000193130 3:0xc000193140 4:0xc000193150 5:0xc000193160 6:0xc000193170 7:0xc000193180 8:0xc000193190 9:0xc0001931a0] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc000192580 1:0xc000192590 2:0xc0001925a0 3:0xc0001925b0 4:0xc0001925c0 5:0xc0001925d0 6:0xc0001925e0 7:0xc0001925f0 8:0xc000192600 9:0xc000192610] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} starts a PullTask to get shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} starts a PullTask to get shards [6 5] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [1 0 2 3 4]}} 24 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 100}'s shards status are map[0:0xc000192580 1:0xc000192590 2:0xc0001925a0 3:0xc0001925b0 4:0xc0001925c0 5:0xc0001925d0 6:0xc0001925e0 7:0xc0001925f0 8:0xc000192600 9:0xc000192610] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [1 0 2 3 4]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100}'s shards status are map[0:0xc0005119a0 1:0xc000511990 2:0xc0005119b0 3:0xc0005119c0 4:0xc0005119d0 5:0xc0001925d0 6:0xc0001925e0 7:0xc0001925f0 8:0xc000192600 9:0xc000192610] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [1 0 2 3 4]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 3923545586566670955 20}} 25 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {0  Get 3923545586566670955 20}} with CommandReply CommandReply{Err: OK, Value: f1BMOGTnADM8t-tG3ZAA}
2025/01/04 13:03:17 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [1 0 2 3 4]}} 24 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 100}'s shards status are map[0:0xc000192970 1:0xc000192980 2:0xc000192990 3:0xc0001929a0 4:0xc0001929b0 5:0xc0001929c0 6:0xc0001929d0 7:0xc0001929e0 8:0xc0001929f0 9:0xc000192a00] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [1 0 2 3 4]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {2 [1 0 2 3 4]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:17 {Node 2}{Group 100}'s shards status are map[0:0xc00026cc50 1:0xc00026cc40 2:0xc00026cc60 3:0xc00026cc70 4:0xc00026cc80 5:0xc0001929c0 6:0xc0001929d0 7:0xc0001929e0 8:0xc0001929f0 9:0xc000192a00] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [1 0 2 3 4]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} processes GCTaskRequest ShardOperationArgs{ConfigNum: 2, ShardIDs: [1 0 2 3 4]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:03:17 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 3923545586566670955 20}} 25 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 101} deletes shards [1 0 2 3 4] in remote group successfully when currentConfigNum is 2
2025/01/04 13:03:17 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [1 0 2 3 4]}} 5 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 101}'s shards status are map[0:0xc000193110 1:0xc000193120 2:0xc000193130 3:0xc000193140 4:0xc000193150 5:0xc000193160 6:0xc000193170 7:0xc000193180 8:0xc000193190 9:0xc0001931a0] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [1 0 2 3 4]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:03:17 {Node 1}{Group 101}'s shards status are map[0:0xc000193110 1:0xc000193120 2:0xc000193130 3:0xc000193140 4:0xc000193150 5:0xc000193160 6:0xc000193170 7:0xc000193180 8:0xc000193190 9:0xc0001931a0] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [1 0 2 3 4]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:03:17 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [1 0 2 3 4]}} 5 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 101}'s shards status are map[0:0xc0001934e0 1:0xc0001934f0 2:0xc000193500 3:0xc000193510 4:0xc000193520 5:0xc000193530 6:0xc000193540 7:0xc000193550 8:0xc000193560 9:0xc000193570] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [1 0 2 3 4]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:03:17 {Node 2}{Group 101}'s shards status are map[0:0xc0001934e0 1:0xc0001934f0 2:0xc000193500 3:0xc000193510 4:0xc000193520 5:0xc000193530 6:0xc000193540 7:0xc000193550 8:0xc000193560 9:0xc000193570] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [1 0 2 3 4]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:03:17 {Node 1}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {2 [1 0 2 3 4]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:17 {Node 1}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:03:17 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc000193c80 1:0xc000193c90 2:0xc000193ca0 3:0xc000193cb0 4:0xc000193cc0 5:0xc000193cd0 6:0xc000193ce0 7:0xc000193cf0 8:0xc000193d00 9:0xc000193d10] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [6 5]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:03:17 {Node 1}{Group 101} fetches latest configuration {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 2
2025/01/04 13:03:17 {Node 1}{Group 100} fetches latest configuration {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 2
2025/01/04 13:03:17 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 6 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 101} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:17 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 6 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 101} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 26 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 100} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 bhjXldJ_BedBKWHU6dQh Append 3923545586566670955 21}} 27 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {0 bhjXldJ_BedBKWHU6dQh Append 3923545586566670955 21}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:17 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 26 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 100} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 bhjXldJ_BedBKWHU6dQh Append 3923545586566670955 21}} 27 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:17 {Node 1}{Group 102} starts a PullTask to get shards [5 6] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} starts a PullTask to get shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:ANrNFhGq1mDy5eI_9JEq] 6:map[8:aL-Mn7EUyI-CNc4dL30O]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 21, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:03:17 {Node 1}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:ANrNFhGq1mDy5eI_9JEq] 6:map[8:aL-Mn7EUyI-CNc4dL30O]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 21, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 3
2025/01/04 13:03:17 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc000193c80 1:0xc000193c90 2:0xc000193ca0 3:0xc000193cb0 4:0xc000193cc0 5:0xc000193cd0 6:0xc000193ce0 7:0xc000193cf0 8:0xc000193d00 9:0xc000193d10] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 3923545586566670955 22}} 28 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {1  Get 3923545586566670955 22}} with CommandReply CommandReply{Err: OK, Value: 7ljwhWOfFjmFZ6DPj5Xn}
2025/01/04 13:03:17 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[5:map[7:ANrNFhGq1mDy5eI_9JEq] 6:map[8:aL-Mn7EUyI-CNc4dL30O]] map[3923545586566670955:OperationContext{MaxAppliedCommandId: 21, LastReply: CommandReply{Err: OK, Value: }}]}} 5 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:ANrNFhGq1mDy5eI_9JEq] 6:map[8:aL-Mn7EUyI-CNc4dL30O]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 21, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 3 map[5:map[7:ANrNFhGq1mDy5eI_9JEq] 6:map[8:aL-Mn7EUyI-CNc4dL30O]] map[3923545586566670955:OperationContext{MaxAppliedCommandId: 21, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:03:17 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 3923545586566670955 22}} 28 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[5:map[7:ANrNFhGq1mDy5eI_9JEq] 6:map[8:aL-Mn7EUyI-CNc4dL30O]] map[3923545586566670955:OperationContext{MaxAppliedCommandId: 21, LastReply: CommandReply{Err: OK, Value: }}]}} 5 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:ANrNFhGq1mDy5eI_9JEq] 6:map[8:aL-Mn7EUyI-CNc4dL30O]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 21, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:EDBSQhSO_BnrP0XYsITX]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:03:17 {Node 1}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:EDBSQhSO_BnrP0XYsITX]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 3
2025/01/04 13:03:17 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[0:map[2:EDBSQhSO_BnrP0XYsITX]] map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 6 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:EDBSQhSO_BnrP0XYsITX]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[0:map[2:EDBSQhSO_BnrP0XYsITX]] map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 6 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:EDBSQhSO_BnrP0XYsITX]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 3 map[0:map[2:EDBSQhSO_BnrP0XYsITX]] map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:03:17 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc000193110 1:0xc000193120 2:0xc000193130 3:0xc000193140 4:0xc000193150 5:0xc000193160 6:0xc000193170 7:0xc000193180 8:0xc000193190 9:0xc0001931a0] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0005119a0 1:0xc000511990 2:0xc0005119b0 3:0xc0005119c0 4:0xc0005119d0 5:0xc0001925d0 6:0xc0001925e0 7:0xc0001925f0 8:0xc000192600 9:0xc000192610] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} starts a GCTask to delete shards [5 6] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} starts a GCTask to delete shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 7 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 101}'s shards status are map[0:0xc000193110 1:0xc000193120 2:0xc000193130 3:0xc000193140 4:0xc000193150 5:0xc000193160 6:0xc000193170 7:0xc000193180 8:0xc000193190 9:0xc0001931a0] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 101}'s shards status are map[0:0xc00058ccd0 1:0xc000193120 2:0xc000193130 3:0xc000193140 4:0xc000193150 5:0xc000193160 6:0xc000193170 7:0xc000193180 8:0xc000193190 9:0xc0001931a0] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {3 [0]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:17 {Node 1}{Group 101} processes GCTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:03:17 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 7 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 102} deletes shards [0] in remote group successfully when currentConfigNum is 3
2025/01/04 13:03:17 {Node 2}{Group 101}'s shards status are map[0:0xc0001934e0 1:0xc0001934f0 2:0xc000193500 3:0xc000193510 4:0xc000193520 5:0xc000193530 6:0xc000193540 7:0xc000193550 8:0xc000193560 9:0xc000193570] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 2}{Group 101}'s shards status are map[0:0xc00042cd00 1:0xc0001934f0 2:0xc000193500 3:0xc000193510 4:0xc000193520 5:0xc000193530 6:0xc000193540 7:0xc000193550 8:0xc000193560 9:0xc000193570] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 yusGS5wQVAEhrVTLk7dn Append 3923545586566670955 23}} 29 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {1 yusGS5wQVAEhrVTLk7dn Append 3923545586566670955 23}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:17 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 yusGS5wQVAEhrVTLk7dn Append 3923545586566670955 23}} 29 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc000193c80 1:0xc000193c90 2:0xc000193ca0 3:0xc000193cb0 4:0xc000193cc0 5:0xc000193cd0 6:0xc000193ce0 7:0xc000193cf0 8:0xc000193d00 9:0xc000193d10] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 7 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 102}'s shards status are map[0:0xc000193c80 1:0xc000193c90 2:0xc000193ca0 3:0xc000193cb0 4:0xc000193cc0 5:0xc000193cd0 6:0xc000193ce0 7:0xc000193cf0 8:0xc000193d00 9:0xc000193d10] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102}'s shards status are map[0:0xc000193c80 1:0xc000193c90 2:0xc000193ca0 3:0xc000193cb0 4:0xc000193cc0 5:0xc000193cd0 6:0xc000193ce0 7:0xc000193cf0 8:0xc000193d00 9:0xc000193d10] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {3 [0]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:17 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 7 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 102}'s shards status are map[0:0xc0001d60f0 1:0xc0001d6100 2:0xc0001d6110 3:0xc0001d6120 4:0xc0001d6130 5:0xc0001d6140 6:0xc0001d6150 7:0xc0001d6160 8:0xc0001d6170 9:0xc0001d6180] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 2}{Group 102}'s shards status are map[0:0xc0001d60f0 1:0xc0001d6100 2:0xc0001d6110 3:0xc0001d6120 4:0xc0001d6130 5:0xc0001d6140 6:0xc0001d6150 7:0xc0001d6160 8:0xc0001d6170 9:0xc0001d6180] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 30 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 100}'s shards status are map[0:0xc0005119a0 1:0xc000511990 2:0xc0005119b0 3:0xc0005119c0 4:0xc0005119d0 5:0xc0001925d0 6:0xc0001925e0 7:0xc0001925f0 8:0xc000192600 9:0xc000192610] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100}'s shards status are map[0:0xc0005119a0 1:0xc000511990 2:0xc0005119b0 3:0xc0005119c0 4:0xc0005119d0 5:0xc00016a360 6:0xc00016a370 7:0xc0001925f0 8:0xc000192600 9:0xc000192610] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {3 [5 6]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:17 {Node 1}{Group 100} processes GCTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:03:17 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 30 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 100}'s shards status are map[0:0xc00026cc50 1:0xc00026cc40 2:0xc00026cc60 3:0xc00026cc70 4:0xc00026cc80 5:0xc0001929c0 6:0xc0001929d0 7:0xc0001929e0 8:0xc0001929f0 9:0xc000192a00] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 2}{Group 100}'s shards status are map[0:0xc00026cc50 1:0xc00026cc40 2:0xc00026cc60 3:0xc00026cc70 4:0xc00026cc80 5:0xc00058df60 6:0xc00058df70 7:0xc0001929e0 8:0xc0001929f0 9:0xc000192a00] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} deletes shards [5 6] in remote group successfully when currentConfigNum is 3
2025/01/04 13:03:17 {Node 1}{Group 101} fetches latest configuration {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 3
2025/01/04 13:03:17 {Node 1}{Group 100} fetches latest configuration {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 3
2025/01/04 13:03:17 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 8 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 102}'s shards status are map[0:0xc000193c80 1:0xc000193c90 2:0xc000193ca0 3:0xc000193cb0 4:0xc000193cc0 5:0xc000193cd0 6:0xc000193ce0 7:0xc000193cf0 8:0xc000193d00 9:0xc000193d10] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102}'s shards status are map[0:0xc000193c80 1:0xc000193c90 2:0xc000193ca0 3:0xc000193cb0 4:0xc000193cc0 5:0xc000193cd0 6:0xc000193ce0 7:0xc000193cf0 8:0xc000193d00 9:0xc000193d10] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {3 [5 6]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:17 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 8 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 102}'s shards status are map[0:0xc0001d60f0 1:0xc0001d6100 2:0xc0001d6110 3:0xc0001d6120 4:0xc0001d6130 5:0xc0001d6140 6:0xc0001d6150 7:0xc0001d6160 8:0xc0001d6170 9:0xc0001d6180] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 2}{Group 102}'s shards status are map[0:0xc0001d60f0 1:0xc0001d6100 2:0xc0001d6110 3:0xc0001d6120 4:0xc0001d6130 5:0xc0001d6140 6:0xc0001d6150 7:0xc0001d6160 8:0xc0001d6170 9:0xc0001d6180] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 31 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 100} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:17 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 8 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 101} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:17 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 31 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 8 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 101} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 2}{Group 100} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} fetches latest configuration {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 3
2025/01/04 13:03:17 {Node 1}{Group 100} starts a PullTask to get shards [3 1] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 9 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 102} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:17 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 9 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 102} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} starts a PullTask to get shards [4 2] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:pJbFp-bDUEInODCgZcUq] 3:map[5:SN5TUzqZX1XYJtEJtnlw]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:03:17 {Node 1}{Group 100} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:pJbFp-bDUEInODCgZcUq] 3:map[5:SN5TUzqZX1XYJtEJtnlw]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 4
2025/01/04 13:03:17 {Node 1}{Group 100} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[1:map[3:pJbFp-bDUEInODCgZcUq] 3:map[5:SN5TUzqZX1XYJtEJtnlw]] map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 32 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 100} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:pJbFp-bDUEInODCgZcUq] 3:map[5:SN5TUzqZX1XYJtEJtnlw]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} Execute Command Command{commandType: InsertShards, Data: {OK 4 map[1:map[3:pJbFp-bDUEInODCgZcUq] 3:map[5:SN5TUzqZX1XYJtEJtnlw]] map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:03:17 {Node 2}{Group 100} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[1:map[3:pJbFp-bDUEInODCgZcUq] 3:map[5:SN5TUzqZX1XYJtEJtnlw]] map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 32 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 100} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:pJbFp-bDUEInODCgZcUq] 3:map[5:SN5TUzqZX1XYJtEJtnlw]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc00058ccd0 1:0xc000193120 2:0xc000193130 3:0xc000193140 4:0xc000193150 5:0xc000193160 6:0xc000193170 7:0xc000193180 8:0xc000193190 9:0xc0001931a0] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0005119a0 1:0xc000511990 2:0xc0005119b0 3:0xc0005119c0 4:0xc0005119d0 5:0xc00016a360 6:0xc00016a370 7:0xc0001925f0 8:0xc000192600 9:0xc000192610] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} starts a GCTask to delete shards [1 3] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [4 2]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:DaCwySSM93Q5qAX8Tger] 4:map[6:ABp-lbMdtKVKMbHG4sjc]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:03:17 {Node 1}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:DaCwySSM93Q5qAX8Tger] 4:map[6:ABp-lbMdtKVKMbHG4sjc]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 4
2025/01/04 13:03:17 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc000193c80 1:0xc000193c90 2:0xc000193ca0 3:0xc000193cb0 4:0xc000193cc0 5:0xc000193cd0 6:0xc000193ce0 7:0xc000193cf0 8:0xc000193d00 9:0xc000193d10] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[2:map[4:DaCwySSM93Q5qAX8Tger] 4:map[6:ABp-lbMdtKVKMbHG4sjc]] map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 10 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:DaCwySSM93Q5qAX8Tger] 4:map[6:ABp-lbMdtKVKMbHG4sjc]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 4 map[2:map[4:DaCwySSM93Q5qAX8Tger] 4:map[6:ABp-lbMdtKVKMbHG4sjc]] map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:03:17 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[2:map[4:DaCwySSM93Q5qAX8Tger] 4:map[6:ABp-lbMdtKVKMbHG4sjc]] map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 10 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:DaCwySSM93Q5qAX8Tger] 4:map[6:ABp-lbMdtKVKMbHG4sjc]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0005119a0 1:0xc000511990 2:0xc0005119b0 3:0xc0005119c0 4:0xc0005119d0 5:0xc00016a360 6:0xc00016a370 7:0xc0001925f0 8:0xc000192600 9:0xc000192610] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc00058ccd0 1:0xc000193120 2:0xc000193130 3:0xc000193140 4:0xc000193150 5:0xc000193160 6:0xc000193170 7:0xc000193180 8:0xc000193190 9:0xc0001931a0] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} starts a GCTask to delete shards [2 4] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2  Get 3923545586566670955 24}} 11 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {2  Get 3923545586566670955 24}} with CommandReply CommandReply{Err: OK, Value: EDBSQhSO_BnrP0XYsITX}
2025/01/04 13:03:17 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2  Get 3923545586566670955 24}} 11 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [1 3]}} 9 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 101}'s shards status are map[0:0xc00058ccd0 1:0xc000193120 2:0xc000193130 3:0xc000193140 4:0xc000193150 5:0xc000193160 6:0xc000193170 7:0xc000193180 8:0xc000193190 9:0xc0001931a0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 101}'s shards status are map[0:0xc00058ccd0 1:0xc00002c0e0 2:0xc000193130 3:0xc00002c0f0 4:0xc000193150 5:0xc000193160 6:0xc000193170 7:0xc000193180 8:0xc000193190 9:0xc0001931a0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {4 [1 3]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:17 {Node 1}{Group 101} processes GCTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:03:17 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [1 3]}} 9 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 101}'s shards status are map[0:0xc00042cd00 1:0xc0001934f0 2:0xc000193500 3:0xc000193510 4:0xc000193520 5:0xc000193530 6:0xc000193540 7:0xc000193550 8:0xc000193560 9:0xc000193570] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 2}{Group 101}'s shards status are map[0:0xc00042cd00 1:0xc00042d790 2:0xc000193500 3:0xc00042d7a0 4:0xc000193520 5:0xc000193530 6:0xc000193540 7:0xc000193550 8:0xc000193560 9:0xc000193570] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} deletes shards [1 3] in remote group successfully when currentConfigNum is 4
2025/01/04 13:03:17 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [1 3]}} 33 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 100}'s shards status are map[0:0xc0005119a0 1:0xc000511990 2:0xc0005119b0 3:0xc0005119c0 4:0xc0005119d0 5:0xc00016a360 6:0xc00016a370 7:0xc0001925f0 8:0xc000192600 9:0xc000192610] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100}'s shards status are map[0:0xc0005119a0 1:0xc000511990 2:0xc0005119b0 3:0xc0005119c0 4:0xc0005119d0 5:0xc00016a360 6:0xc00016a370 7:0xc0001925f0 8:0xc000192600 9:0xc000192610] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {4 [1 3]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:17 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [1 3]}} 33 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 100}'s shards status are map[0:0xc00026cc50 1:0xc00026cc40 2:0xc00026cc60 3:0xc00026cc70 4:0xc00026cc80 5:0xc00058df60 6:0xc00058df70 7:0xc0001929e0 8:0xc0001929f0 9:0xc000192a00] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 2}{Group 100}'s shards status are map[0:0xc00026cc50 1:0xc00026cc40 2:0xc00026cc60 3:0xc00026cc70 4:0xc00026cc80 5:0xc00058df60 6:0xc00058df70 7:0xc0001929e0 8:0xc0001929f0 9:0xc000192a00] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 10 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 101}'s shards status are map[0:0xc00058ccd0 1:0xc00002c0e0 2:0xc000193130 3:0xc00002c0f0 4:0xc000193150 5:0xc000193160 6:0xc000193170 7:0xc000193180 8:0xc000193190 9:0xc0001931a0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 101}'s shards status are map[0:0xc00058ccd0 1:0xc00002c0e0 2:0xc0003c1790 3:0xc00002c0f0 4:0xc0003c17a0 5:0xc000193160 6:0xc000193170 7:0xc000193180 8:0xc000193190 9:0xc0001931a0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {4 [2 4]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:17 {Node 1}{Group 101} processes GCTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:03:17 {Node 1}{Group 102} deletes shards [2 4] in remote group successfully when currentConfigNum is 4
2025/01/04 13:03:17 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 10 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 101}'s shards status are map[0:0xc00042cd00 1:0xc00042d790 2:0xc000193500 3:0xc00042d7a0 4:0xc000193520 5:0xc000193530 6:0xc000193540 7:0xc000193550 8:0xc000193560 9:0xc000193570] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 2}{Group 101}'s shards status are map[0:0xc00042cd00 1:0xc00042d790 2:0xc0003c1bf0 3:0xc00042d7a0 4:0xc0003c1c00 5:0xc000193530 6:0xc000193540 7:0xc000193550 8:0xc000193560 9:0xc000193570] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc000193c80 1:0xc000193c90 2:0xc000193ca0 3:0xc000193cb0 4:0xc000193cc0 5:0xc000193cd0 6:0xc000193ce0 7:0xc000193cf0 8:0xc000193d00 9:0xc000193d10] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 8a55gj4l-LeHpJcojVgL Append 3923545586566670955 25}} 12 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 13 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {2 8a55gj4l-LeHpJcojVgL Append 3923545586566670955 25}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:17 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 8a55gj4l-LeHpJcojVgL Append 3923545586566670955 25}} 12 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 13 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 102}'s shards status are map[0:0xc0001d60f0 1:0xc0001d6100 2:0xc0001d6110 3:0xc0001d6120 4:0xc0001d6130 5:0xc0001d6140 6:0xc0001d6150 7:0xc0001d6160 8:0xc0001d6170 9:0xc0001d6180] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 2}{Group 102}'s shards status are map[0:0xc0001d60f0 1:0xc0001d6100 2:0xc0001d6110 3:0xc0001d6120 4:0xc0001d6130 5:0xc0001d6140 6:0xc0001d6150 7:0xc0001d6160 8:0xc0001d6170 9:0xc0001d6180] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102}'s shards status are map[0:0xc000193c80 1:0xc000193c90 2:0xc000193ca0 3:0xc000193cb0 4:0xc000193cc0 5:0xc000193cd0 6:0xc000193ce0 7:0xc000193cf0 8:0xc000193d00 9:0xc000193d10] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102}'s shards status are map[0:0xc000193c80 1:0xc000193c90 2:0xc000193ca0 3:0xc000193cb0 4:0xc000193cc0 5:0xc000193cd0 6:0xc000193ce0 7:0xc000193cf0 8:0xc000193d00 9:0xc000193d10] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {4 [2 4]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:17 {Node 1}{Group 101} fetches latest configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 4
2025/01/04 13:03:17 {Node 1}{Group 100} fetches latest configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 4
2025/01/04 13:03:17 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 34 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 100} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:17 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 34 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 100} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 11 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 101} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:17 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 11 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 101} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} fetches latest configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 4
2025/01/04 13:03:17 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 14 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 102} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 14 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 102} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:17 {Node 1}{Group 102} starts a PullTask to get shards [1 8 3 7 9] from group 100 when config is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0005119a0 1:0xc000511990 2:0xc0005119b0 3:0xc0005119c0 4:0xc0005119d0 5:0xc00016a360 6:0xc00016a370 7:0xc0001925f0 8:0xc000192600 9:0xc000192610] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 5, ShardIDs: [1 8 3 7 9]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:pJbFp-bDUEInODCgZcUq] 3:map[5:SN5TUzqZX1XYJtEJtnlw] 7:map[9:91cAuHYZdwDYbf4XKfSY] 8:map[0:f1BMOGTnADM8t-tG3ZAAbhjXldJ_BedBKWHU6dQh] 9:map[1:7ljwhWOfFjmFZ6DPj5XnyusGS5wQVAEhrVTLk7dn]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:03:17 {Node 1}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:pJbFp-bDUEInODCgZcUq] 3:map[5:SN5TUzqZX1XYJtEJtnlw] 7:map[9:91cAuHYZdwDYbf4XKfSY] 8:map[0:f1BMOGTnADM8t-tG3ZAAbhjXldJ_BedBKWHU6dQh] 9:map[1:7ljwhWOfFjmFZ6DPj5XnyusGS5wQVAEhrVTLk7dn]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 5
2025/01/04 13:03:17 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 5 map[1:map[3:pJbFp-bDUEInODCgZcUq] 3:map[5:SN5TUzqZX1XYJtEJtnlw] 7:map[9:91cAuHYZdwDYbf4XKfSY] 8:map[0:f1BMOGTnADM8t-tG3ZAAbhjXldJ_BedBKWHU6dQh] 9:map[1:7ljwhWOfFjmFZ6DPj5XnyusGS5wQVAEhrVTLk7dn]] map[3923545586566670955:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} 15 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:pJbFp-bDUEInODCgZcUq] 3:map[5:SN5TUzqZX1XYJtEJtnlw] 7:map[9:91cAuHYZdwDYbf4XKfSY] 8:map[0:f1BMOGTnADM8t-tG3ZAAbhjXldJ_BedBKWHU6dQh] 9:map[1:7ljwhWOfFjmFZ6DPj5XnyusGS5wQVAEhrVTLk7dn]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 5 map[1:map[3:pJbFp-bDUEInODCgZcUq] 3:map[5:SN5TUzqZX1XYJtEJtnlw] 7:map[9:91cAuHYZdwDYbf4XKfSY] 8:map[0:f1BMOGTnADM8t-tG3ZAAbhjXldJ_BedBKWHU6dQh] 9:map[1:7ljwhWOfFjmFZ6DPj5XnyusGS5wQVAEhrVTLk7dn]] map[3923545586566670955:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:03:17 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 5 map[1:map[3:pJbFp-bDUEInODCgZcUq] 3:map[5:SN5TUzqZX1XYJtEJtnlw] 7:map[9:91cAuHYZdwDYbf4XKfSY] 8:map[0:f1BMOGTnADM8t-tG3ZAAbhjXldJ_BedBKWHU6dQh] 9:map[1:7ljwhWOfFjmFZ6DPj5XnyusGS5wQVAEhrVTLk7dn]] map[3923545586566670955:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} 15 1 false [] 0 0}
2025/01/04 13:03:17 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:pJbFp-bDUEInODCgZcUq] 3:map[5:SN5TUzqZX1XYJtEJtnlw] 7:map[9:91cAuHYZdwDYbf4XKfSY] 8:map[0:f1BMOGTnADM8t-tG3ZAAbhjXldJ_BedBKWHU6dQh] 9:map[1:7ljwhWOfFjmFZ6DPj5XnyusGS5wQVAEhrVTLk7dn]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc000193c80 1:0xc000193c90 2:0xc000193ca0 3:0xc000193cb0 4:0xc000193cc0 5:0xc000193cd0 6:0xc000193ce0 7:0xc000193cf0 8:0xc000193d00 9:0xc000193d10] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} starts a GCTask to delete shards [7 9 3 8 1] from group 100 when config is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0005119a0 1:0xc000511990 2:0xc0005119b0 3:0xc0005119c0 4:0xc0005119d0 5:0xc00016a360 6:0xc00016a370 7:0xc0001925f0 8:0xc000192600 9:0xc000192610] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:17 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3  Get 3923545586566670955 26}} 16 1 false [] 0 0}
2025/01/04 13:03:17 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {3  Get 3923545586566670955 26}} with CommandReply CommandReply{Err: OK, Value: pJbFp-bDUEInODCgZcUq}
2025/01/04 13:03:17 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3  Get 3923545586566670955 26}} 16 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [7 9 3 8 1]}} 35 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 100}'s shards status are map[0:0xc0005119a0 1:0xc000511990 2:0xc0005119b0 3:0xc0005119c0 4:0xc0005119d0 5:0xc00016a360 6:0xc00016a370 7:0xc0001925f0 8:0xc000192600 9:0xc000192610] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [7 9 3 8 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:18 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [7 9 3 8 1]}} 35 1 false [] 0 0}
2025/01/04 13:03:18 {Node 2}{Group 100}'s shards status are map[0:0xc00026cc50 1:0xc00026cc40 2:0xc00026cc60 3:0xc00026cc70 4:0xc00026cc80 5:0xc00058df60 6:0xc00058df70 7:0xc0001929e0 8:0xc0001929f0 9:0xc000192a00] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [7 9 3 8 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:18 {Node 2}{Group 100}'s shards status are map[0:0xc00026cc50 1:0xc000510670 2:0xc00026cc60 3:0xc000510650 4:0xc00026cc80 5:0xc00058df60 6:0xc00058df70 7:0xc000510630 8:0xc000510660 9:0xc000510640] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [7 9 3 8 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:18 {Node 1}{Group 100}'s shards status are map[0:0xc0005119a0 1:0xc000244080 2:0xc0005119b0 3:0xc000244060 4:0xc0005119d0 5:0xc00016a360 6:0xc00016a370 7:0xc000244040 8:0xc000244070 9:0xc000244050] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [7 9 3 8 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:18 {Node 1}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {5 [7 9 3 8 1]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:18 {Node 1}{Group 100} processes GCTaskRequest ShardOperationArgs{ConfigNum: 5, ShardIDs: [7 9 3 8 1]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:03:18 {Node 1}{Group 102} deletes shards [7 9 3 8 1] in remote group successfully when currentConfigNum is 5
2025/01/04 13:03:18 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc000193c80 1:0xc000193c90 2:0xc000193ca0 3:0xc000193cb0 4:0xc000193cc0 5:0xc000193cd0 6:0xc000193ce0 7:0xc000193cf0 8:0xc000193d00 9:0xc000193d10] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:18 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [7 9 3 8 1]}} 17 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102}'s shards status are map[0:0xc000193c80 1:0xc000193c90 2:0xc000193ca0 3:0xc000193cb0 4:0xc000193cc0 5:0xc000193cd0 6:0xc000193ce0 7:0xc000193cf0 8:0xc000193d00 9:0xc000193d10] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [7 9 3 8 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:18 {Node 1}{Group 102}'s shards status are map[0:0xc000193c80 1:0xc000193c90 2:0xc000193ca0 3:0xc000193cb0 4:0xc000193cc0 5:0xc000193cd0 6:0xc000193ce0 7:0xc000193cf0 8:0xc000193d00 9:0xc000193d10] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [7 9 3 8 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:18 {Node 1}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {5 [7 9 3 8 1]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:18 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [7 9 3 8 1]}} 17 1 false [] 0 0}
2025/01/04 13:03:18 {Node 2}{Group 102}'s shards status are map[0:0xc0001d60f0 1:0xc0001d6100 2:0xc0001d6110 3:0xc0001d6120 4:0xc0001d6130 5:0xc0001d6140 6:0xc0001d6150 7:0xc0001d6160 8:0xc0001d6170 9:0xc0001d6180] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [7 9 3 8 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:18 {Node 2}{Group 102}'s shards status are map[0:0xc0001d60f0 1:0xc0001d6100 2:0xc0001d6110 3:0xc0001d6120 4:0xc0001d6130 5:0xc0001d6140 6:0xc0001d6150 7:0xc0001d6160 8:0xc0001d6170 9:0xc0001d6180] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [7 9 3 8 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:18 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3 zUJK9I7Nfl9nN3CkuTV8 Append 3923545586566670955 27}} 18 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {3 zUJK9I7Nfl9nN3CkuTV8 Append 3923545586566670955 27}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:18 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3 zUJK9I7Nfl9nN3CkuTV8 Append 3923545586566670955 27}} 18 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4  Get 3923545586566670955 28}} 19 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {4  Get 3923545586566670955 28}} with CommandReply CommandReply{Err: OK, Value: DaCwySSM93Q5qAX8Tger}
2025/01/04 13:03:18 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4  Get 3923545586566670955 28}} 19 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4 DC0L1wdQ7qTaNiqKcJU8 Append 3923545586566670955 29}} 20 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {4 DC0L1wdQ7qTaNiqKcJU8 Append 3923545586566670955 29}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:18 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4 DC0L1wdQ7qTaNiqKcJU8 Append 3923545586566670955 29}} 20 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5  Get 3923545586566670955 30}} 21 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {5  Get 3923545586566670955 30}} with CommandReply CommandReply{Err: OK, Value: SN5TUzqZX1XYJtEJtnlw}
2025/01/04 13:03:18 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5  Get 3923545586566670955 30}} 21 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5 lmPX568bFCZrlvFYuRWU Append 3923545586566670955 31}} 22 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {5 lmPX568bFCZrlvFYuRWU Append 3923545586566670955 31}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:18 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5 lmPX568bFCZrlvFYuRWU Append 3923545586566670955 31}} 22 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6  Get 3923545586566670955 32}} 23 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {6  Get 3923545586566670955 32}} with CommandReply CommandReply{Err: OK, Value: ABp-lbMdtKVKMbHG4sjc}
2025/01/04 13:03:18 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6  Get 3923545586566670955 32}} 23 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6 AcFwz7V8T51RFJ2S6IjH Append 3923545586566670955 33}} 24 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {6 AcFwz7V8T51RFJ2S6IjH Append 3923545586566670955 33}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:18 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6 AcFwz7V8T51RFJ2S6IjH Append 3923545586566670955 33}} 24 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 3923545586566670955 34}} 25 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {7  Get 3923545586566670955 34}} with CommandReply CommandReply{Err: OK, Value: ANrNFhGq1mDy5eI_9JEq}
2025/01/04 13:03:18 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 3923545586566670955 34}} 25 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 Ht9Lk4D8z72uphHstYF0 Append 3923545586566670955 35}} 26 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {7 Ht9Lk4D8z72uphHstYF0 Append 3923545586566670955 35}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:18 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 Ht9Lk4D8z72uphHstYF0 Append 3923545586566670955 35}} 26 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 3923545586566670955 36}} 27 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {8  Get 3923545586566670955 36}} with CommandReply CommandReply{Err: OK, Value: aL-Mn7EUyI-CNc4dL30O}
2025/01/04 13:03:18 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 3923545586566670955 36}} 27 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 7NSNOl2kI2WHReW62Dcd Append 3923545586566670955 37}} 28 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {8 7NSNOl2kI2WHReW62Dcd Append 3923545586566670955 37}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:18 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 7NSNOl2kI2WHReW62Dcd Append 3923545586566670955 37}} 28 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 3923545586566670955 38}} 29 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {9  Get 3923545586566670955 38}} with CommandReply CommandReply{Err: OK, Value: 91cAuHYZdwDYbf4XKfSY}
2025/01/04 13:03:18 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 3923545586566670955 38}} 29 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 gWxhiFWgNrfWzHV0wK2b Append 3923545586566670955 39}} 30 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {9 gWxhiFWgNrfWzHV0wK2b Append 3923545586566670955 39}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:18 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 gWxhiFWgNrfWzHV0wK2b Append 3923545586566670955 39}} 30 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 100} fetches latest configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 5
2025/01/04 13:03:18 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 36 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 100} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:18 {Node 1}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:18 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 36 1 false [] 0 0}
2025/01/04 13:03:18 {Node 2}{Group 100} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:18 {Node 1}{Group 102} fetches latest configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 5
2025/01/04 13:03:18 {Node 1}{Group 101} fetches latest configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 5
2025/01/04 13:03:18 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 31 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:18 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 3923545586566670955 40}} 32 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {0  Get 3923545586566670955 40}} with CommandReply CommandReply{Err: OK, Value: f1BMOGTnADM8t-tG3ZAAbhjXldJ_BedBKWHU6dQh}
2025/01/04 13:03:18 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 12 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 101} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:18 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:18 {Node 1}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:18 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 12 1 false [] 0 0}
2025/01/04 13:03:18 {Node 2}{Group 101} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:18 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 31 1 false [] 0 0}
2025/01/04 13:03:18 {Node 2}{Group 102} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:18 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 3923545586566670955 40}} 32 1 false [] 0 0}
2025/01/04 13:03:18 {Node 1}{Group 101} starts a PullTask to get shards [1 0 2 3 4] from group 102 when config is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:19 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 WD7QFhvIfFYnAO-Ez0AT Append 3923545586566670955 41}} 33 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {0 WD7QFhvIfFYnAO-Ez0AT Append 3923545586566670955 41}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:19 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc00058ccd0 1:0xc00002c0e0 2:0xc0003c1790 3:0xc00002c0f0 4:0xc0003c17a0 5:0xc000193160 6:0xc000193170 7:0xc000193180 8:0xc000193190 9:0xc0001931a0] when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:19 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 WD7QFhvIfFYnAO-Ez0AT Append 3923545586566670955 41}} 33 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc000193c80 1:0xc000193c90 2:0xc000193ca0 3:0xc000193cb0 4:0xc000193cc0 5:0xc000193cd0 6:0xc000193ce0 7:0xc000193cf0 8:0xc000193d00 9:0xc000193d10] when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:19 {Node 1}{Group 102} processes PullTaskRequest ShardOperationArgs{ConfigNum: 6, ShardIDs: [1 0 2 3 4]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:EDBSQhSO_BnrP0XYsITX8a55gj4l-LeHpJcojVgL] 1:map[3:pJbFp-bDUEInODCgZcUqzUJK9I7Nfl9nN3CkuTV8] 2:map[4:DaCwySSM93Q5qAX8TgerDC0L1wdQ7qTaNiqKcJU8] 3:map[5:SN5TUzqZX1XYJtEJtnlwlmPX568bFCZrlvFYuRWU] 4:map[6:ABp-lbMdtKVKMbHG4sjcAcFwz7V8T51RFJ2S6IjH]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:03:19 {Node 1}{Group 101} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:EDBSQhSO_BnrP0XYsITX8a55gj4l-LeHpJcojVgL] 1:map[3:pJbFp-bDUEInODCgZcUqzUJK9I7Nfl9nN3CkuTV8] 2:map[4:DaCwySSM93Q5qAX8TgerDC0L1wdQ7qTaNiqKcJU8] 3:map[5:SN5TUzqZX1XYJtEJtnlwlmPX568bFCZrlvFYuRWU] 4:map[6:ABp-lbMdtKVKMbHG4sjcAcFwz7V8T51RFJ2S6IjH]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 6
2025/01/04 13:03:19 {Node 1}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 6 map[0:map[2:EDBSQhSO_BnrP0XYsITX8a55gj4l-LeHpJcojVgL] 1:map[3:pJbFp-bDUEInODCgZcUqzUJK9I7Nfl9nN3CkuTV8] 2:map[4:DaCwySSM93Q5qAX8TgerDC0L1wdQ7qTaNiqKcJU8] 3:map[5:SN5TUzqZX1XYJtEJtnlwlmPX568bFCZrlvFYuRWU] 4:map[6:ABp-lbMdtKVKMbHG4sjcAcFwz7V8T51RFJ2S6IjH]] map[3923545586566670955:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]}} 13 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:EDBSQhSO_BnrP0XYsITX8a55gj4l-LeHpJcojVgL] 1:map[3:pJbFp-bDUEInODCgZcUqzUJK9I7Nfl9nN3CkuTV8] 2:map[4:DaCwySSM93Q5qAX8TgerDC0L1wdQ7qTaNiqKcJU8] 3:map[5:SN5TUzqZX1XYJtEJtnlwlmPX568bFCZrlvFYuRWU] 4:map[6:ABp-lbMdtKVKMbHG4sjcAcFwz7V8T51RFJ2S6IjH]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:19 {Node 1}{Group 101} Execute Command Command{commandType: InsertShards, Data: {OK 6 map[0:map[2:EDBSQhSO_BnrP0XYsITX8a55gj4l-LeHpJcojVgL] 1:map[3:pJbFp-bDUEInODCgZcUqzUJK9I7Nfl9nN3CkuTV8] 2:map[4:DaCwySSM93Q5qAX8TgerDC0L1wdQ7qTaNiqKcJU8] 3:map[5:SN5TUzqZX1XYJtEJtnlwlmPX568bFCZrlvFYuRWU] 4:map[6:ABp-lbMdtKVKMbHG4sjcAcFwz7V8T51RFJ2S6IjH]] map[3923545586566670955:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:03:19 {Node 2}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 6 map[0:map[2:EDBSQhSO_BnrP0XYsITX8a55gj4l-LeHpJcojVgL] 1:map[3:pJbFp-bDUEInODCgZcUqzUJK9I7Nfl9nN3CkuTV8] 2:map[4:DaCwySSM93Q5qAX8TgerDC0L1wdQ7qTaNiqKcJU8] 3:map[5:SN5TUzqZX1XYJtEJtnlwlmPX568bFCZrlvFYuRWU] 4:map[6:ABp-lbMdtKVKMbHG4sjcAcFwz7V8T51RFJ2S6IjH]] map[3923545586566670955:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]}} 13 1 false [] 0 0}
2025/01/04 13:03:19 {Node 2}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:EDBSQhSO_BnrP0XYsITX8a55gj4l-LeHpJcojVgL] 1:map[3:pJbFp-bDUEInODCgZcUqzUJK9I7Nfl9nN3CkuTV8] 2:map[4:DaCwySSM93Q5qAX8TgerDC0L1wdQ7qTaNiqKcJU8] 3:map[5:SN5TUzqZX1XYJtEJtnlwlmPX568bFCZrlvFYuRWU] 4:map[6:ABp-lbMdtKVKMbHG4sjcAcFwz7V8T51RFJ2S6IjH]], LastOperations: map[3923545586566670955:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:19 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1  Get 3923545586566670955 42}} 34 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {1  Get 3923545586566670955 42}} with CommandReply CommandReply{Err: OK, Value: 7ljwhWOfFjmFZ6DPj5XnyusGS5wQVAEhrVTLk7dn}
2025/01/04 13:03:19 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1  Get 3923545586566670955 42}} 34 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 101} starts a GCTask to delete shards [1 3 4 0 2] from group 102 when config is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:19 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [1 3 4 0 2]}} 35 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 102}'s shards status are map[0:0xc000193c80 1:0xc000193c90 2:0xc000193ca0 3:0xc000193cb0 4:0xc000193cc0 5:0xc000193cd0 6:0xc000193ce0 7:0xc000193cf0 8:0xc000193d00 9:0xc000193d10] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [1 3 4 0 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:19 {Node 1}{Group 102}'s shards status are map[0:0xc0003c1c90 1:0xc0003c1c60 2:0xc0003c1ca0 3:0xc0003c1c70 4:0xc0003c1c80 5:0xc000193cd0 6:0xc000193ce0 7:0xc000193cf0 8:0xc000193d00 9:0xc000193d10] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [1 3 4 0 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:19 {Node 1}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {6 [1 3 4 0 2]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:19 {Node 1}{Group 102} processes GCTaskRequest ShardOperationArgs{ConfigNum: 6, ShardIDs: [1 3 4 0 2]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:03:19 {Node 1}{Group 101} deletes shards [1 3 4 0 2] in remote group successfully when currentConfigNum is 6
2025/01/04 13:03:19 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [1 3 4 0 2]}} 35 1 false [] 0 0}
2025/01/04 13:03:19 {Node 2}{Group 102}'s shards status are map[0:0xc0001d60f0 1:0xc0001d6100 2:0xc0001d6110 3:0xc0001d6120 4:0xc0001d6130 5:0xc0001d6140 6:0xc0001d6150 7:0xc0001d6160 8:0xc0001d6170 9:0xc0001d6180] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [1 3 4 0 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:19 {Node 2}{Group 102}'s shards status are map[0:0xc000244130 1:0xc000244100 2:0xc000244140 3:0xc000244110 4:0xc000244120 5:0xc0001d6140 6:0xc0001d6150 7:0xc0001d6160 8:0xc0001d6170 9:0xc0001d6180] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [1 3 4 0 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:19 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc00058ccd0 1:0xc00002c0e0 2:0xc0003c1790 3:0xc00002c0f0 4:0xc0003c17a0 5:0xc000193160 6:0xc000193170 7:0xc000193180 8:0xc000193190 9:0xc0001931a0] when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:19 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [1 3 4 0 2]}} 14 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 101}'s shards status are map[0:0xc00058ccd0 1:0xc00002c0e0 2:0xc0003c1790 3:0xc00002c0f0 4:0xc0003c17a0 5:0xc000193160 6:0xc000193170 7:0xc000193180 8:0xc000193190 9:0xc0001931a0] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [1 3 4 0 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:19 {Node 1}{Group 101}'s shards status are map[0:0xc00058ccd0 1:0xc00002c0e0 2:0xc0003c1790 3:0xc00002c0f0 4:0xc0003c17a0 5:0xc000193160 6:0xc000193170 7:0xc000193180 8:0xc000193190 9:0xc0001931a0] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [1 3 4 0 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:19 {Node 1}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {6 [1 3 4 0 2]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:19 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [1 3 4 0 2]}} 14 1 false [] 0 0}
2025/01/04 13:03:19 {Node 2}{Group 101}'s shards status are map[0:0xc00042cd00 1:0xc00042d790 2:0xc0003c1bf0 3:0xc00042d7a0 4:0xc0003c1c00 5:0xc000193530 6:0xc000193540 7:0xc000193550 8:0xc000193560 9:0xc000193570] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [1 3 4 0 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:19 {Node 2}{Group 101}'s shards status are map[0:0xc00042cd00 1:0xc00042d790 2:0xc0003c1bf0 3:0xc00042d7a0 4:0xc0003c1c00 5:0xc000193530 6:0xc000193540 7:0xc000193550 8:0xc000193560 9:0xc000193570] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [1 3 4 0 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:03:19 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1 rW6CIKoIewQQO4boDrji Append 3923545586566670955 43}} 36 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {1 rW6CIKoIewQQO4boDrji Append 3923545586566670955 43}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:19 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1 rW6CIKoIewQQO4boDrji Append 3923545586566670955 43}} 36 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2  Get 3923545586566670955 44}} 15 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {2  Get 3923545586566670955 44}} with CommandReply CommandReply{Err: OK, Value: EDBSQhSO_BnrP0XYsITX8a55gj4l-LeHpJcojVgL}
2025/01/04 13:03:19 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2  Get 3923545586566670955 44}} 15 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2 Zgxn3HO4Hv_tCdAFiC1r Append 3923545586566670955 45}} 16 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {2 Zgxn3HO4Hv_tCdAFiC1r Append 3923545586566670955 45}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:19 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2 Zgxn3HO4Hv_tCdAFiC1r Append 3923545586566670955 45}} 16 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3  Get 3923545586566670955 46}} 17 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {3  Get 3923545586566670955 46}} with CommandReply CommandReply{Err: OK, Value: pJbFp-bDUEInODCgZcUqzUJK9I7Nfl9nN3CkuTV8}
2025/01/04 13:03:19 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3  Get 3923545586566670955 46}} 17 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3 DoRfROClWkCjzjR3e_Oe Append 3923545586566670955 47}} 18 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {3 DoRfROClWkCjzjR3e_Oe Append 3923545586566670955 47}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:19 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3 DoRfROClWkCjzjR3e_Oe Append 3923545586566670955 47}} 18 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 3923545586566670955 48}} 19 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {4  Get 3923545586566670955 48}} with CommandReply CommandReply{Err: OK, Value: DaCwySSM93Q5qAX8TgerDC0L1wdQ7qTaNiqKcJU8}
2025/01/04 13:03:19 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 3923545586566670955 48}} 19 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4 DsPo99I50MsCNFVs62ky Append 3923545586566670955 49}} 20 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {4 DsPo99I50MsCNFVs62ky Append 3923545586566670955 49}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:19 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4 DsPo99I50MsCNFVs62ky Append 3923545586566670955 49}} 20 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5  Get 3923545586566670955 50}} 21 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {5  Get 3923545586566670955 50}} with CommandReply CommandReply{Err: OK, Value: SN5TUzqZX1XYJtEJtnlwlmPX568bFCZrlvFYuRWU}
2025/01/04 13:03:19 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5  Get 3923545586566670955 50}} 21 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 r8y3WAFH5MPJRut3C6Ea Append 3923545586566670955 51}} 22 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {5 r8y3WAFH5MPJRut3C6Ea Append 3923545586566670955 51}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:19 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 r8y3WAFH5MPJRut3C6Ea Append 3923545586566670955 51}} 22 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 3923545586566670955 52}} 23 1 false [] 0 0}
2025/01/04 13:03:19 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {6  Get 3923545586566670955 52}} with CommandReply CommandReply{Err: OK, Value: ABp-lbMdtKVKMbHG4sjcAcFwz7V8T51RFJ2S6IjH}
2025/01/04 13:03:19 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 3923545586566670955 52}} 23 1 false [] 0 0}
2025/01/04 13:03:20 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 3Xe6BWFEyhk38V7yZDcV Append 3923545586566670955 53}} 24 1 false [] 0 0}
2025/01/04 13:03:20 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {6 3Xe6BWFEyhk38V7yZDcV Append 3923545586566670955 53}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:20 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 3Xe6BWFEyhk38V7yZDcV Append 3923545586566670955 53}} 24 1 false [] 0 0}
2025/01/04 13:03:20 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 3923545586566670955 54}} 37 1 false [] 0 0}
2025/01/04 13:03:20 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {7  Get 3923545586566670955 54}} with CommandReply CommandReply{Err: OK, Value: ANrNFhGq1mDy5eI_9JEqHt9Lk4D8z72uphHstYF0}
2025/01/04 13:03:20 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 3923545586566670955 54}} 37 1 false [] 0 0}
2025/01/04 13:03:20 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 76G_NY4sP7wqHQO3xKUi Append 3923545586566670955 55}} 38 1 false [] 0 0}
2025/01/04 13:03:20 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {7 76G_NY4sP7wqHQO3xKUi Append 3923545586566670955 55}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:20 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 76G_NY4sP7wqHQO3xKUi Append 3923545586566670955 55}} 38 1 false [] 0 0}
2025/01/04 13:03:20 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 3923545586566670955 56}} 39 1 false [] 0 0}
2025/01/04 13:03:20 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {8  Get 3923545586566670955 56}} with CommandReply CommandReply{Err: OK, Value: aL-Mn7EUyI-CNc4dL30O7NSNOl2kI2WHReW62Dcd}
2025/01/04 13:03:20 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 3923545586566670955 56}} 39 1 false [] 0 0}
2025/01/04 13:03:20 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 PQDWG8n30gmxkN4dOfIp Append 3923545586566670955 57}} 40 1 false [] 0 0}
2025/01/04 13:03:20 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {8 PQDWG8n30gmxkN4dOfIp Append 3923545586566670955 57}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:20 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 PQDWG8n30gmxkN4dOfIp Append 3923545586566670955 57}} 40 1 false [] 0 0}
2025/01/04 13:03:20 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 3923545586566670955 58}} 41 1 false [] 0 0}
2025/01/04 13:03:20 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {9  Get 3923545586566670955 58}} with CommandReply CommandReply{Err: OK, Value: 91cAuHYZdwDYbf4XKfSYgWxhiFWgNrfWzHV0wK2b}
2025/01/04 13:03:20 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 3923545586566670955 58}} 41 1 false [] 0 0}
2025/01/04 13:03:20 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 J8cOwqscP_7a_wXrya_5 Append 3923545586566670955 59}} 42 1 false [] 0 0}
2025/01/04 13:03:20 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {9 J8cOwqscP_7a_wXrya_5 Append 3923545586566670955 59}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:20 {Node 0}{Group 100} started
2025/01/04 13:03:20 {Node 0}{Group 101} started
2025/01/04 13:03:20 {Node 0}{Group 102} started
2025/01/04 13:03:20 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 J8cOwqscP_7a_wXrya_5 Append 3923545586566670955 59}} 42 1 false [] 0 0}
2025/01/04 13:03:20 {Node 0}{Group 102} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 71 255 138 1 10 1 10 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 1 1 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 113 255 138 1 12 1 10 255 202 255 202 255 202 255 202 255 202 255 204 255 204 255 204 255 204 255 204 1 2 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 0 15 255 165 4 1 2 255 166 0 1 4 1 255 162 0 0 31 255 161 3 1 2 255 162 0 1 2 1 2 75 86 1 255 164 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 163 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 164 0 1 12 1 12 0 0 254 1 83 255 166 0 10 10 1 1 1 55 60 65 78 114 78 70 104 71 113 49 109 68 121 53 101 73 95 57 74 69 113 72 116 57 76 107 52 68 56 122 55 50 117 112 104 72 115 116 89 70 48 55 54 71 95 78 89 52 115 80 55 119 113 72 81 79 51 120 75 85 105 0 14 1 1 1 57 40 57 49 99 65 117 72 89 90 100 119 68 89 98 102 52 88 75 102 83 89 103 87 120 104 105 70 87 103 78 114 102 87 122 72 86 48 119 75 50 98 0 18 1 1 1 49 60 55 108 106 119 104 87 79 102 70 106 109 70 90 54 68 80 106 53 88 110 121 117 115 71 83 53 119 81 86 65 69 104 114 86 84 76 107 55 100 110 114 87 54 67 73 75 111 73 101 119 81 81 79 52 98 111 68 114 106 105 0 6 1 0 0 8 1 0 0 4 1 0 0 12 1 1 1 56 60 97 76 45 77 110 55 69 85 121 73 45 67 78 99 52 100 76 51 48 79 55 78 83 78 79 108 50 107 73 50 87 72 82 101 87 54 50 68 99 100 80 81 68 87 71 56 110 51 48 103 109 120 107 78 52 100 79 102 73 112 0 16 1 1 1 48 60 102 49 66 77 79 71 84 110 65 68 77 56 116 45 116 71 51 90 65 65 98 104 106 88 108 100 74 95 66 101 100 66 75 87 72 85 54 100 81 104 87 68 55 81 70 104 118 73 102 70 89 110 65 79 45 69 122 48 65 84 0 0 1 0 0 2 1 0 0 15 255 169 4 1 2 255 170 0 1 4 1 255 168 0 0 51 255 167 3 1 2 255 168 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 160 0 0 0 44 255 159 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 160 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 22 255 170 0 1 248 108 230 119 216 166 183 84 214 1 114 1 1 2 79 75 0 0] 1 41}
2025/01/04 13:03:20 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 J8cOwqscP_7a_wXrya_5 Append 3923545586566670955 59}} 42 1 false [] 0 0}
2025/01/04 13:03:20 {Node 0}{Group 100} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 255 155 255 138 1 6 1 10 255 204 255 202 255 202 255 202 255 202 255 204 255 204 255 200 255 200 255 200 1 3 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 113 255 138 1 8 1 10 255 204 255 200 255 204 255 200 255 204 255 204 255 204 255 200 255 200 255 200 1 2 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 0 15 255 165 4 1 2 255 166 0 1 4 1 255 162 0 0 31 255 161 3 1 2 255 162 0 1 2 1 2 75 86 1 255 164 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 163 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 164 0 1 12 1 12 0 0 255 203 255 166 0 10 6 1 1 1 53 20 83 78 53 84 85 122 113 90 88 49 88 89 74 116 69 74 116 110 108 119 1 3 0 10 1 0 0 12 1 0 0 14 1 1 1 57 20 57 49 99 65 117 72 89 90 100 119 68 89 98 102 52 88 75 102 83 89 0 16 1 1 1 48 40 102 49 66 77 79 71 84 110 65 68 77 56 116 45 116 71 51 90 65 65 98 104 106 88 108 100 74 95 66 101 100 66 75 87 72 85 54 100 81 104 0 18 1 1 1 49 40 55 108 106 119 104 87 79 102 70 106 109 70 90 54 68 80 106 53 88 110 121 117 115 71 83 53 119 81 86 65 69 104 114 86 84 76 107 55 100 110 0 0 1 0 0 4 1 0 0 8 1 0 0 2 1 1 1 51 20 112 74 98 70 112 45 98 68 85 69 73 110 79 68 67 103 90 99 85 113 1 3 0 15 255 169 4 1 2 255 170 0 1 4 1 255 168 0 0 51 255 167 3 1 2 255 168 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 160 0 0 0 44 255 159 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 160 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 22 255 170 0 1 248 108 230 119 216 166 183 84 214 1 46 1 1 2 79 75 0 0] 1 32}
2025/01/04 13:03:20 {Node 0}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [1 3]}} 33 1 false [] 0 0}
2025/01/04 13:03:20 {Node 0}{Group 100} discards outdated shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:03:20 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 34 1 false [] 0 0}
2025/01/04 13:03:20 {Node 0}{Group 100} discards outdated configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:03:20 {Node 0}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [7 9 3 8 1]}} 35 1 false [] 0 0}
2025/01/04 13:03:20 {Node 0}{Group 100} discards outdated shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [7 9 3 8 1]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:03:20 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 36 1 false [] 0 0}
2025/01/04 13:03:20 {Node 0}{Group 100} discards outdated configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:03:20 {Node 0}{Group 101} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 71 255 138 1 10 1 10 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 1 1 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 113 255 138 1 12 1 10 255 202 255 202 255 202 255 202 255 202 255 204 255 204 255 204 255 204 255 204 1 2 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 0 15 255 165 4 1 2 255 166 0 1 4 1 255 162 0 0 31 255 161 3 1 2 255 162 0 1 2 1 2 75 86 1 255 164 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 163 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 164 0 1 12 1 12 0 0 254 1 63 255 166 0 10 14 1 0 0 18 1 0 0 0 1 1 1 50 60 69 68 66 83 81 104 83 79 95 66 110 114 80 48 88 89 115 73 84 88 56 97 53 53 103 106 52 108 45 76 101 72 112 74 99 111 106 86 103 76 90 103 120 110 51 72 79 52 72 118 95 116 67 100 65 70 105 67 49 114 0 4 1 1 1 52 60 68 97 67 119 121 83 83 77 57 51 81 53 113 65 88 56 84 103 101 114 68 67 48 76 49 119 100 81 55 113 84 97 78 105 113 75 99 74 85 56 68 115 80 111 57 57 73 53 48 77 115 67 78 70 86 115 54 50 107 121 0 6 1 1 1 53 40 83 78 53 84 85 122 113 90 88 49 88 89 74 116 69 74 116 110 108 119 108 109 80 88 53 54 56 98 70 67 90 114 108 118 70 89 117 82 87 85 0 8 1 1 1 54 40 65 66 112 45 108 98 77 100 116 75 86 75 77 98 72 71 52 115 106 99 65 99 70 119 122 55 86 56 84 53 49 82 70 74 50 83 54 73 106 72 0 12 1 0 0 2 1 1 1 51 60 112 74 98 70 112 45 98 68 85 69 73 110 79 68 67 103 90 99 85 113 122 85 74 75 57 73 55 78 102 108 57 110 78 51 67 107 117 84 86 56 68 111 82 102 82 79 67 108 87 107 67 106 122 106 82 51 101 95 79 101 0 10 1 0 0 16 1 0 0 15 255 169 4 1 2 255 170 0 1 4 1 255 168 0 0 51 255 167 3 1 2 255 168 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 160 0 0 0 44 255 159 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 160 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 22 255 170 0 1 248 108 230 119 216 166 183 84 214 1 98 1 1 2 79 75 0 0] 1 21}
2025/01/04 13:03:20 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 r8y3WAFH5MPJRut3C6Ea Append 3923545586566670955 51}} 22 1 false [] 0 0}
2025/01/04 13:03:20 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 3923545586566670955 52}} 23 1 false [] 0 0}
2025/01/04 13:03:20 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 3Xe6BWFEyhk38V7yZDcV Append 3923545586566670955 53}} 24 1 false [] 0 0}
panic: test timed out after 30s
	running tests:
		TestMissChange5B (30s)

goroutine 17764 [running]:
testing.(*M).startAlarm.func1()
	/usr/local/go/src/testing/testing.go:2373 +0x385
created by time.goFunc
	/usr/local/go/src/time/sleep.go:215 +0x2d

goroutine 1 [chan receive]:
testing.(*T).Run(0xc000116b60, {0x692c32?, 0x0?}, 0x6aa390)
	/usr/local/go/src/testing/testing.go:1751 +0x3ab
testing.runTests.func1(0xc000116b60)
	/usr/local/go/src/testing/testing.go:2168 +0x37
testing.tRunner(0xc000116b60, 0xc000147c70)
	/usr/local/go/src/testing/testing.go:1690 +0xf4
testing.runTests(0xc00010e3f0, {0x87a3c0, 0xe, 0xe}, {0x471ad0?, 0x47173a?, 0x87f260?})
	/usr/local/go/src/testing/testing.go:2166 +0x43d
testing.(*M).Run(0xc00011c0a0)
	/usr/local/go/src/testing/testing.go:2034 +0x64a
main.main()
	_testmain.go:71 +0x9b

goroutine 18 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00014d600, {0x69423c?, 0xc000311720?}, {0x638000, 0xc000311720}, {0x64d140, 0xc00048c1c0})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/shardctrler.(*Clerk).Command(0xc0001cd080, 0xc000311720)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:73 +0xc5
6.5840/shardctrler.(*Clerk).Query(...)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:60
6.5840/shardkv.(*Clerk).Command(0xc00019a510, 0xc000496c80)
	/home/ubuntu/my_6.5840/src/shardkv/client.go:108 +0x146
6.5840/shardkv.(*Clerk).Get(...)
	/home/ubuntu/my_6.5840/src/shardkv/client.go:73
6.5840/shardkv.check(0xc000116d00, 0xc00019a510, {0x69a869, 0x1}, {0xc000025900, 0x3c})
	/home/ubuntu/my_6.5840/src/shardkv/test_test.go:17 +0x95
6.5840/shardkv.TestMissChange5B(0xc000116d00)
	/home/ubuntu/my_6.5840/src/shardkv/test_test.go:351 +0x7b5
testing.tRunner(0xc000116d00, 0x6aa390)
	/usr/local/go/src/testing/testing.go:1690 +0xf4
created by testing.(*T).Run in goroutine 1
	/usr/local/go/src/testing/testing.go:1743 +0x390

goroutine 19 [select]:
6.5840/labrpc.MakeNetwork.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:160 +0xea
created by 6.5840/labrpc.MakeNetwork in goroutine 18
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:158 +0x196

goroutine 20 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00014e240)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 21 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0xc00003ef08?, 0xe0?, 0x475285?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc00014e240)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(0xc00014e240?)
	/usr/local/go/src/sync/mutex.go:92 +0x32
sync.(*Cond).Wait(0xc000574e90?)
	/usr/local/go/src/sync/cond.go:72 +0x97
6.5840/raft.(*Raft).applyLog(0xc00014e240)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 22 [chan receive]:
6.5840/shardctrler.(*ShardCtrler).applier(0xc0001242a0)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:70 +0x87
created by 6.5840/shardctrler.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:62 +0x28a

goroutine 23 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00014e360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 24 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0xc00003a508?, 0xe0?, 0x475285?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc00014e360)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(0xc000123b90?)
	/usr/local/go/src/sync/mutex.go:92 +0x32
sync.(*Cond).Wait(0xc00014e360?)
	/usr/local/go/src/sync/cond.go:72 +0x97
6.5840/raft.(*Raft).applyLog(0xc00014e360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 25 [chan receive]:
6.5840/shardctrler.(*ShardCtrler).applier(0xc000124720)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:70 +0x87
created by 6.5840/shardctrler.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:62 +0x28a

goroutine 26 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00014e480)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 27 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000123d50, 0x1c6)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000106e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00014e480)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 28 [chan receive]:
6.5840/shardctrler.(*ShardCtrler).applier(0xc000124960)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:70 +0x87
created by 6.5840/shardctrler.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:62 +0x28a

goroutine 4947 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0003e38c0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 30 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0001900d0, 0x16)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00018de90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00014e5a0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 31 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc000196000)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 4945 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00040a9a0, 0xc0002457f0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 36 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00014e900)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 37 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000190290, 0x22)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000189690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00014e900)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 38 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc000196160)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 39 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00014c860, {0x69423c?, 0xc000296000?}, {0x638000, 0xc000296000}, {0x64d140, 0xc000140070})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/shardctrler.(*Clerk).Command(0xc0001a4180, 0xc000296000)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:73 +0xc5
6.5840/shardctrler.(*Clerk).Query(...)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:60
6.5840/shardkv.(*ShardKV).configurationAction(0xc000196160)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:341 +0x245
6.5840/shardkv.(*ShardKV).Monitor(0xc000196160, 0xc000192630, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:383 +0x5f
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 40 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000196160, 0xc000192640, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 41 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000196160, 0xc000192650, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 42 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000196160, 0xc000192660, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 43 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00014eb40)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 44 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000190450, 0x22)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0001aee90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00014eb40)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 45 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0001962c0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 46 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001962c0, 0xc000192a20, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 47 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001962c0, 0xc000192a30, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 48 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001962c0, 0xc000192a40, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 49 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001962c0, 0xc000192a50, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 51 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000190610, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0001aa690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00014ed80)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 52 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc000196420)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 57 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00014f0e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 58 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0001907d0, 0x18)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0001ade90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00014f0e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 59 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc000196580)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 60 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00014cda0, {0x69423c?, 0xc000296280?}, {0x638000, 0xc000296280}, {0x64d140, 0xc000141500})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/shardctrler.(*Clerk).Command(0xc0001a52f0, 0xc000296280)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:73 +0xc5
6.5840/shardctrler.(*Clerk).Query(...)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:60
6.5840/shardkv.(*ShardKV).configurationAction(0xc000196580)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:341 +0x245
6.5840/shardkv.(*ShardKV).Monitor(0xc000196580, 0xc0001931c0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:383 +0x5f
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 61 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000196580, 0xc0001931d0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 62 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000196580, 0xc0001931e0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 63 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000196580, 0xc0001931f0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 64 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00014f440)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 65 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000190990, 0x18)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0001bb690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00014f440)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 66 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0001966e0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 67 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001966e0, 0xc000193590, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 68 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001966e0, 0xc0001935a0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 69 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001966e0, 0xc0001935b0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 70 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001966e0, 0xc0001935c0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 72 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000190b50, 0x1)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000514f00?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00014f680)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 73 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc000196840)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 78 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00014f8c0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 79 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000190d10, 0x27)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0001d4690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00014f8c0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 80 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0001969a0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 81 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00014d2e0, {0x69423c?, 0xc000311950?}, {0x638000, 0xc000311950}, {0x64d140, 0xc00048cb60})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/shardctrler.(*Clerk).Command(0xc0001cc4e0, 0xc000311950)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:73 +0xc5
6.5840/shardctrler.(*Clerk).Query(...)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:60
6.5840/shardkv.(*ShardKV).configurationAction(0xc0001969a0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:341 +0x245
6.5840/shardkv.(*ShardKV).Monitor(0xc0001969a0, 0xc000193d30, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:383 +0x5f
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 82 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001969a0, 0xc000193d40, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 83 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001969a0, 0xc000193d50, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 84 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001969a0, 0xc000193d60, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 85 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00014fb00)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 86 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000190ed0, 0x27)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0001cfe90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00014fb00)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 87 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc000196b00)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 88 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000196b00, 0xc0001d61a0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 89 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000196b00, 0xc0001d61b0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 90 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000196b00, 0xc0001d61c0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 91 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000196b00, 0xc0001d61d0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 4877 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000ec850, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00038bc30?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0003e2360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 17763 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0x0?, 0x0?, 0x0?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc00014e360)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).AppendEntries(0xc00014e360, 0xc0004d4440, 0xc0004043c0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1052 +0x54
reflect.Value.call({0xc000152500?, 0xc0001047c0?, 0xc0002f1b18?}, {0x68fc67, 0x4}, {0xc0002f1d20, 0x3, 0xc0002f1b48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc000152500?, 0xc0001047c0?, 0xc00040e000?}, {0xc0002f1d20?, 0x8?, 0x41b537?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000123c40, {0x693bc4, 0xd}, {{0x63de40, 0xc000103200}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0002d8000, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc00010e9d8, {{0x63de40, 0xc000103200}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0002d8000, 0x1dc, 0x200}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 17762
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 17747 [select]:
6.5840/labrpc.(*Network).processReq(0xc000152320, {{0x63de40, 0xc0001923f0}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc000194000, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 19
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 4879 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00040a9a0, 0xc0002457d0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 17702 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0x5f6fc5?, 0x0?, 0x63e000?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc00014e240)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).Start(0xc00014e240, {0x657600, 0xc000296370})
	/home/ubuntu/my_6.5840/src/raft/raft.go:411 +0x79
6.5840/shardctrler.(*ShardCtrler).Command(0xc0001242a0, 0xc000296370, 0xc000141030)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:149 +0x10b
reflect.Value.call({0xc0001523c0?, 0xc000104510?, 0xc00020bb18?}, {0x68fc67, 0x4}, {0xc00020bd20, 0x3, 0xc00020bb48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc0001523c0?, 0xc000104510?, 0xc000368048?}, {0xc00020bd20?, 0x68a260?, 0xc00018ac38?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000123700, {0x694248, 0x7}, {{0x63de40, 0xc000193af0}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000b22a0, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc00010e990, {{0x63de40, 0xc000193af0}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000b22a0, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 17701
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 4876 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0003e2360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 17701 [select]:
6.5840/labrpc.(*Network).processReq(0xc000152320, {{0x63de40, 0xc000193af0}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000b22a0, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 19
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 4949 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc00040ab00)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 4946 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00040a9a0, 0xc000245800, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 4948 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000496050, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0003053f0?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0003e38c0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 4950 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00040ab00, 0xc000245e50, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 4878 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc00040a9a0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 4953 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00040ab00, 0xc000245e80, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 4880 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00040a9a0, 0xc0002457e0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 17692 [select]:
6.5840/labrpc.(*Network).processReq(0xc000152320, {{0x63de40, 0xc0001d6270}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000b21c0, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 19
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 4951 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00040ab00, 0xc000245e60, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 4954 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0003e3d40)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 4952 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00040ab00, 0xc000245e70, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 4955 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000496690, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000537690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0003e3d40)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 18
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 4956 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc00040ac60)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 4957 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00040ac60, 0xc0005104f0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 4958 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00040ac60, 0xc000510500, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 4959 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00040ac60, 0xc000510510, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 4960 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00040ac60, 0xc000510520, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 18
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 17693 [runnable]:
encoding/gob.encInt(0xc0001c3c98?, 0xc0000f82c0?, {0x63e080?, 0xc0002b4168?, 0x182?})
	/usr/local/go/src/encoding/gob/encode.go:187 +0xef
encoding/gob.(*Encoder).encodeStruct(0xc00011c140, 0xc00040c000, 0xc00010f368, {0x67e140?, 0xc0002b4140?, 0x638000?})
	/usr/local/go/src/encoding/gob/encode.go:328 +0x2be
encoding/gob.encOpFor.func4(0x67e140?, 0xc0000f8280, {0x67e140?, 0xc0002b4140?, 0xc0003fabc0?})
	/usr/local/go/src/encoding/gob/encode.go:546 +0x6e
encoding/gob.(*Encoder).encodeStruct(0xc00011c140, 0xc00040c000, 0xc0002843d8, {0x657600?, 0xc0002b4140?, 0x407b0b?})
	/usr/local/go/src/encoding/gob/encode.go:328 +0x2be
encoding/gob.(*Encoder).encode(0xc00011c140, 0xc00040c000, {0x657600?, 0xc0002b4140?, 0xc000123680?}, 0xc000123680)
	/usr/local/go/src/encoding/gob/encode.go:666 +0x1a5
encoding/gob.(*Encoder).encodeInterface(0xc00011c140, 0xc00011c178, {0x649ba0?, 0xc0000c84b8?, 0x5f0274?})
	/usr/local/go/src/encoding/gob/encode.go:419 +0x86b
encoding/gob.encOpFor.func5(0x66a4c0?, 0xc0000f8180, {0x649ba0?, 0xc0000c84b8?, 0x6f8478?})
	/usr/local/go/src/encoding/gob/encode.go:554 +0xcf
encoding/gob.(*Encoder).encodeStruct(0xc00011c140, 0xc00011c178, 0xc0003221e0, {0x66a4c0?, 0xc0000c84a8?, 0x96?})
	/usr/local/go/src/encoding/gob/encode.go:328 +0x2be
encoding/gob.encOpFor.func4(0x63c640?, 0xc0000f8140, {0x66a4c0?, 0xc0000c84a8?, 0x0?})
	/usr/local/go/src/encoding/gob/encode.go:546 +0x6e
encoding/gob.(*Encoder).encodeArray(0xc0000f80c0?, 0xc000412540?, {0x63c640?, 0xc000506000?, 0x1000046d537?}, 0xc00042c280, 0x0, 0x33c, 0x0)
	/usr/local/go/src/encoding/gob/encode.go:351 +0x4ba
encoding/gob.encOpFor.func1(0x63c640?, 0xc0000f80c0, {0x63c640?, 0xc000506000?, 0xc0001cd380?})
	/usr/local/go/src/encoding/gob/encode.go:516 +0x139
encoding/gob.(*Encoder).encodeSingle(0xc00041e540?, 0x0?, 0x6f8478?, {0x63c640?, 0xc000506000?, 0x407b0b?})
	/usr/local/go/src/encoding/gob/encode.go:301 +0x1f1
encoding/gob.(*Encoder).encode(0xc00011c140, 0xc00011c178, {0x63c640?, 0xc000506000?, 0xc00041e540?}, 0xc00041e540)
	/usr/local/go/src/encoding/gob/encode.go:668 +0x1c8
encoding/gob.(*Encoder).EncodeValue(0xc00011c140, {0x63c640?, 0xc000506000?, 0x63c640?})
	/usr/local/go/src/encoding/gob/encoder.go:251 +0x405
encoding/gob.(*Encoder).Encode(0x63c640?, {0x63c640?, 0xc000506000?})
	/usr/local/go/src/encoding/gob/encoder.go:176 +0x74
6.5840/labgob.(*LabEncoder).Encode(0xc000368040, {0x63c640, 0xc000506000})
	/home/ubuntu/my_6.5840/src/labgob/labgob.go:34 +0x3f
6.5840/raft.(*Raft).persist(0xc00014e240)
	/home/ubuntu/my_6.5840/src/raft/raft.go:170 +0xce
6.5840/raft.(*Raft).Start(0xc00014e240, {0x657600, 0xc000249630})
	/home/ubuntu/my_6.5840/src/raft/raft.go:420 +0x1c5
6.5840/shardctrler.(*ShardCtrler).Command(0xc0001242a0, 0xc000249630, 0xc00028a000)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:149 +0x10b
reflect.Value.call({0xc0001523c0?, 0xc000104510?, 0xc0003fbb18?}, {0x68fc67, 0x4}, {0xc0003fbd20, 0x3, 0xc0003fbb48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc0001523c0?, 0xc000104510?, 0xc00005c610?}, {0xc0003fbd20?, 0x68a260?, 0xc00053d438?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000123700, {0x694248, 0x7}, {{0x63de40, 0xc0001d6270}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000b21c0, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc00010e990, {{0x63de40, 0xc0001d6270}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000b21c0, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 17692
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 17761 [select]:
6.5840/shardctrler.(*ShardCtrler).Command(0xc0001242a0, 0xc000296320, 0xc000141ce0)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:158 +0x21c
reflect.Value.call({0xc0001523c0?, 0xc000104510?, 0xc00020bb18?}, {0x68fc67, 0x4}, {0xc00020bd20, 0x3, 0xc00020bb48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc0001523c0?, 0xc000104510?, 0xc0000ee308?}, {0xc00020bd20?, 0x68a260?, 0xc00057f438?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000123700, {0x694248, 0x7}, {{0x63de40, 0xc000192f80}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0001940e0, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc00010e990, {{0x63de40, 0xc000192f80}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0001940e0, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 17744
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 17703 [runnable]:
encoding/gob.encOpFor.func4(0x63c640?, 0xc0000f8a00, {0x66a4c0?, 0xc00068b5e8?, 0x0?})
	/usr/local/go/src/encoding/gob/encode.go:542 +0x30
encoding/gob.(*Encoder).encodeArray(0xc0000f8980?, 0xc000412540?, {0x63c640?, 0xc000506270?, 0x1000046d537?}, 0xc00042c280, 0x0, 0x33b, 0x0)
	/usr/local/go/src/encoding/gob/encode.go:351 +0x4ba
encoding/gob.encOpFor.func1(0x63c640?, 0xc0000f8980, {0x63c640?, 0xc000506270?, 0xc0001cd380?})
	/usr/local/go/src/encoding/gob/encode.go:516 +0x139
encoding/gob.(*Encoder).encodeSingle(0xc00041e540?, 0x0?, 0x6f8478?, {0x63c640?, 0xc000506270?, 0x407b0b?})
	/usr/local/go/src/encoding/gob/encode.go:301 +0x1f1
encoding/gob.(*Encoder).encode(0xc00011c280, 0xc00011c2b8, {0x63c640?, 0xc000506270?, 0xc00041e540?}, 0xc00041e540)
	/usr/local/go/src/encoding/gob/encode.go:668 +0x1c8
encoding/gob.(*Encoder).EncodeValue(0xc00011c280, {0x63c640?, 0xc000506270?, 0x63c640?})
	/usr/local/go/src/encoding/gob/encoder.go:251 +0x405
encoding/gob.(*Encoder).Encode(0x63c640?, {0x63c640?, 0xc000506270?})
	/usr/local/go/src/encoding/gob/encoder.go:176 +0x74
6.5840/labgob.(*LabEncoder).Encode(0xc000368228, {0x63c640, 0xc000506270})
	/home/ubuntu/my_6.5840/src/labgob/labgob.go:34 +0x3f
6.5840/raft.(*Raft).persist(0xc00014e360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:170 +0xce
6.5840/raft.(*Raft).AppendEntries(0xc00014e360, 0xc0000f8640, 0xc0000264e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1105 +0x4c5
reflect.Value.call({0xc000152500?, 0xc0001047c0?, 0xc0002f5b18?}, {0x68fc67, 0x4}, {0xc0002f5d20, 0x3, 0xc0002f5b48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc000152500?, 0xc0001047c0?, 0xc000368058?}, {0xc0002f5d20?, 0x68a260?, 0xc00018ac38?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000123c40, {0x693bc4, 0xd}, {{0x63de40, 0xc000103200}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0003a4c00, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc00010e9d8, {{0x63de40, 0xc000103200}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0003a4c00, 0x1dc, 0x200}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 17694
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 17688 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00014c0a0, {0x693bbf?, 0xc0001dff48?}, {0x638280, 0xc00042f080}, {0x63c540, 0xc00005c740})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/raft.(*Raft).sendAppendEntries(...)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1026
6.5840/raft.(*Raft).sendEntries(0xc00014e240, 0x1, 0xc00042f080)
	/home/ubuntu/my_6.5840/src/raft/raft.go:721 +0xc8
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 17685
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 17762 [select]:
6.5840/labrpc.(*Network).processReq(0xc000152320, {{0x63de40, 0xc000103200}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0002d8000, 0x1dc, 0x200}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 19
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 17684 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00014c0a0, {0x693bbf?, 0x0?}, {0x638280, 0xc00042e000}, {0x63c540, 0xc00005c730})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/raft.(*Raft).sendAppendEntries(...)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1026
6.5840/raft.(*Raft).sendEntries(0xc00014e240, 0x1, 0xc00042e000)
	/home/ubuntu/my_6.5840/src/raft/raft.go:721 +0xc8
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 20
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 17694 [select]:
6.5840/labrpc.(*Network).processReq(0xc000152320, {{0x63de40, 0xc000103200}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0003a4c00, 0x1dc, 0x200}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 19
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 17748 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0x5f6fc5?, 0x0?, 0x63e000?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc00014e240)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).Start(0xc00014e240, {0x657600, 0xc0002963c0})
	/home/ubuntu/my_6.5840/src/raft/raft.go:411 +0x79
6.5840/shardctrler.(*ShardCtrler).Command(0xc0001242a0, 0xc0002963c0, 0xc0001410a0)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:149 +0x10b
reflect.Value.call({0xc0001523c0?, 0xc000104510?, 0xc0003ffb18?}, {0x68fc67, 0x4}, {0xc0003ffd20, 0x3, 0xc0003ffb48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc0001523c0?, 0xc000104510?, 0xc0000ee008?}, {0xc0003ffd20?, 0x68a260?, 0xc0001e0438?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000123700, {0x694248, 0x7}, {{0x63de40, 0xc0001923f0}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc000194000, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc00010e990, {{0x63de40, 0xc0001923f0}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc000194000, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 17747
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 17744 [select]:
6.5840/labrpc.(*Network).processReq(0xc000152320, {{0x63de40, 0xc000192f80}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0001940e0, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 19
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58
exit status 2
FAIL	6.5840/shardkv	30.151s
