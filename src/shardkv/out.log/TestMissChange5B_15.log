Test (5B): servers miss configuration changes...
2025/01/04 13:00:36 {Node 0}{Group 100} started
2025/01/04 13:00:36 {Node 1}{Group 100} started
2025/01/04 13:00:36 {Node 2}{Group 100} started
2025/01/04 13:00:36 {Node 0}{Group 101} started
2025/01/04 13:00:36 {Node 1}{Group 101} started
2025/01/04 13:00:36 {Node 2}{Group 101} started
2025/01/04 13:00:36 {Node 0}{Group 102} started
2025/01/04 13:00:36 {Node 1}{Group 102} started
2025/01/04 13:00:36 {Node 2}{Group 102} started
2025/01/04 13:00:36 {Node 1}{Group 102} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 102} Execute Command Command{commandType: EmptyShards, Data: <nil>} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:36 {Node 2}{Group 102} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 100} fetches latest configuration {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} when currentConfigNum is 0
2025/01/04 13:00:36 {Node 2}{Group 101} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:00:36 {Node 2}{Group 101} Execute Command Command{commandType: EmptyShards, Data: <nil>} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:36 {Node 0}{Group 102} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 101} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:00:36 {Node 0}{Group 101} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 102} fetches latest configuration {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} when currentConfigNum is 0
2025/01/04 13:00:36 {Node 1}{Group 100} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 100} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:00:36 {Node 1}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:36 {Node 1}{Group 100} Execute Command Command{commandType: EmptyShards, Data: <nil>} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:36 {Node 2}{Group 100} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:00:36 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:00:36 {Node 2}{Group 100} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:00:36 {Node 0}{Group 100} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:00:36 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:00:36 {Node 0}{Group 100} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:00:36 {Node 2}{Group 101} fetches latest configuration {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} when currentConfigNum is 0
2025/01/04 13:00:36 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 102} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:00:36 {Node 1}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:36 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:00:36 {Node 2}{Group 102} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:00:36 {Node 0}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:00:36 {Node 0}{Group 102} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:00:36 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 101} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:00:36 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:00:36 {Node 2}{Group 101} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:00:36 {Node 2}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:36 {Node 0}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:00:36 {Node 0}{Group 101} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:00:36 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 htpa-lhTvqxLKJZE0dll Put 938487803632438324 0}} 3 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {0 htpa-lhTvqxLKJZE0dll Put 938487803632438324 0}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:36 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 htpa-lhTvqxLKJZE0dll Put 938487803632438324 0}} 3 1 false [] 0 0}
2025/01/04 13:00:36 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 htpa-lhTvqxLKJZE0dll Put 938487803632438324 0}} 3 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 wqHWbmnUmui1yA4itkL2 Put 938487803632438324 1}} 4 1 false [] 0 0}
2025/01/04 13:00:36 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 wqHWbmnUmui1yA4itkL2 Put 938487803632438324 1}} 4 1 false [] 0 0}
2025/01/04 13:00:36 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 wqHWbmnUmui1yA4itkL2 Put 938487803632438324 1}} 4 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {1 wqHWbmnUmui1yA4itkL2 Put 938487803632438324 1}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:36 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 JUXLKk3BOuMoNbAkQ2ZF Put 938487803632438324 2}} 5 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {2 JUXLKk3BOuMoNbAkQ2ZF Put 938487803632438324 2}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:36 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 JUXLKk3BOuMoNbAkQ2ZF Put 938487803632438324 2}} 5 1 false [] 0 0}
2025/01/04 13:00:36 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 JUXLKk3BOuMoNbAkQ2ZF Put 938487803632438324 2}} 5 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 dvBkqjIinHA8vlaPNC1z Put 938487803632438324 3}} 6 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {3 dvBkqjIinHA8vlaPNC1z Put 938487803632438324 3}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:36 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 dvBkqjIinHA8vlaPNC1z Put 938487803632438324 3}} 6 1 false [] 0 0}
2025/01/04 13:00:36 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 dvBkqjIinHA8vlaPNC1z Put 938487803632438324 3}} 6 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4 _hkoikZ_Bq1_Fku53MJG Put 938487803632438324 4}} 7 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {4 _hkoikZ_Bq1_Fku53MJG Put 938487803632438324 4}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:36 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4 _hkoikZ_Bq1_Fku53MJG Put 938487803632438324 4}} 7 1 false [] 0 0}
2025/01/04 13:00:36 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4 _hkoikZ_Bq1_Fku53MJG Put 938487803632438324 4}} 7 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5 na9VNUsw4Wxr-KaL86RE Put 938487803632438324 5}} 8 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {5 na9VNUsw4Wxr-KaL86RE Put 938487803632438324 5}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:36 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5 na9VNUsw4Wxr-KaL86RE Put 938487803632438324 5}} 8 1 false [] 0 0}
2025/01/04 13:00:36 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5 na9VNUsw4Wxr-KaL86RE Put 938487803632438324 5}} 8 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6 -x-wca4aWAAG7KArRf-W Put 938487803632438324 6}} 9 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {6 -x-wca4aWAAG7KArRf-W Put 938487803632438324 6}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:36 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6 -x-wca4aWAAG7KArRf-W Put 938487803632438324 6}} 9 1 false [] 0 0}
2025/01/04 13:00:36 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6 -x-wca4aWAAG7KArRf-W Put 938487803632438324 6}} 9 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 GCDmFy1_xGkSRUaQdxWk Put 938487803632438324 7}} 10 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {7 GCDmFy1_xGkSRUaQdxWk Put 938487803632438324 7}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:36 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 GCDmFy1_xGkSRUaQdxWk Put 938487803632438324 7}} 10 1 false [] 0 0}
2025/01/04 13:00:36 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 GCDmFy1_xGkSRUaQdxWk Put 938487803632438324 7}} 10 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8 _on9Br71TdxVg4731NvE Put 938487803632438324 8}} 11 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {8 _on9Br71TdxVg4731NvE Put 938487803632438324 8}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:36 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8 _on9Br71TdxVg4731NvE Put 938487803632438324 8}} 11 1 false [] 0 0}
2025/01/04 13:00:36 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8 _on9Br71TdxVg4731NvE Put 938487803632438324 8}} 11 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 Hryra8dP9rT_qgveY4sN Put 938487803632438324 9}} 12 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {9 Hryra8dP9rT_qgveY4sN Put 938487803632438324 9}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:36 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 Hryra8dP9rT_qgveY4sN Put 938487803632438324 9}} 12 1 false [] 0 0}
2025/01/04 13:00:36 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 Hryra8dP9rT_qgveY4sN Put 938487803632438324 9}} 12 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 938487803632438324 10}} 13 1 false [] 0 0}
2025/01/04 13:00:36 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {0  Get 938487803632438324 10}} with CommandReply CommandReply{Err: OK, Value: htpa-lhTvqxLKJZE0dll}
2025/01/04 13:00:36 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 938487803632438324 10}} 13 1 false [] 0 0}
2025/01/04 13:00:36 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 938487803632438324 10}} 13 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 938487803632438324 11}} 14 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {1  Get 938487803632438324 11}} with CommandReply CommandReply{Err: OK, Value: wqHWbmnUmui1yA4itkL2}
2025/01/04 13:00:37 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 938487803632438324 11}} 14 1 false [] 0 0}
2025/01/04 13:00:37 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 938487803632438324 11}} 14 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 938487803632438324 12}} 15 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {2  Get 938487803632438324 12}} with CommandReply CommandReply{Err: OK, Value: JUXLKk3BOuMoNbAkQ2ZF}
2025/01/04 13:00:37 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 938487803632438324 12}} 15 1 false [] 0 0}
2025/01/04 13:00:37 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 938487803632438324 12}} 15 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3  Get 938487803632438324 13}} 16 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {3  Get 938487803632438324 13}} with CommandReply CommandReply{Err: OK, Value: dvBkqjIinHA8vlaPNC1z}
2025/01/04 13:00:37 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3  Get 938487803632438324 13}} 16 1 false [] 0 0}
2025/01/04 13:00:37 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3  Get 938487803632438324 13}} 16 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4  Get 938487803632438324 14}} 17 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {4  Get 938487803632438324 14}} with CommandReply CommandReply{Err: OK, Value: _hkoikZ_Bq1_Fku53MJG}
2025/01/04 13:00:37 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4  Get 938487803632438324 14}} 17 1 false [] 0 0}
2025/01/04 13:00:37 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4  Get 938487803632438324 14}} 17 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5  Get 938487803632438324 15}} 18 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {5  Get 938487803632438324 15}} with CommandReply CommandReply{Err: OK, Value: na9VNUsw4Wxr-KaL86RE}
2025/01/04 13:00:37 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5  Get 938487803632438324 15}} 18 1 false [] 0 0}
2025/01/04 13:00:37 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5  Get 938487803632438324 15}} 18 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6  Get 938487803632438324 16}} 19 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {6  Get 938487803632438324 16}} with CommandReply CommandReply{Err: OK, Value: -x-wca4aWAAG7KArRf-W}
2025/01/04 13:00:37 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6  Get 938487803632438324 16}} 19 1 false [] 0 0}
2025/01/04 13:00:37 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6  Get 938487803632438324 16}} 19 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7  Get 938487803632438324 17}} 20 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {7  Get 938487803632438324 17}} with CommandReply CommandReply{Err: OK, Value: GCDmFy1_xGkSRUaQdxWk}
2025/01/04 13:00:37 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7  Get 938487803632438324 17}} 20 1 false [] 0 0}
2025/01/04 13:00:37 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7  Get 938487803632438324 17}} 20 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8  Get 938487803632438324 18}} 21 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {8  Get 938487803632438324 18}} with CommandReply CommandReply{Err: OK, Value: _on9Br71TdxVg4731NvE}
2025/01/04 13:00:37 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8  Get 938487803632438324 18}} 21 1 false [] 0 0}
2025/01/04 13:00:37 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8  Get 938487803632438324 18}} 21 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9  Get 938487803632438324 19}} 22 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {9  Get 938487803632438324 19}} with CommandReply CommandReply{Err: OK, Value: Hryra8dP9rT_qgveY4sN}
2025/01/04 13:00:37 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9  Get 938487803632438324 19}} 22 1 false [] 0 0}
2025/01/04 13:00:37 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9  Get 938487803632438324 19}} 22 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} fetches latest configuration {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} when currentConfigNum is 1
2025/01/04 13:00:37 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 23 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:37 {Node 1}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:37 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 23 1 false [] 0 0}
2025/01/04 13:00:37 {Node 2}{Group 100} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:37 {Node 2}{Group 101} fetches latest configuration {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} when currentConfigNum is 1
2025/01/04 13:00:37 {Node 1}{Group 102} fetches latest configuration {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} when currentConfigNum is 1
2025/01/04 13:00:37 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 102} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:37 {Node 1}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:37 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:00:37 {Node 2}{Group 101} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:37 {Node 2}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:37 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 101} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:37 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:00:37 {Node 2}{Group 102} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:37 {Node 2}{Group 101} starts a PullTask to get shards [0 3 1 2 4] from group 100 when config is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:37 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 938487803632438324 20}} 24 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {0  Get 938487803632438324 20}} with CommandReply CommandReply{Err: OK, Value: htpa-lhTvqxLKJZE0dll}
2025/01/04 13:00:37 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 938487803632438324 20}} 24 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0000ea5c0 1:0xc0000ea5d0 2:0xc0000ea5e0 3:0xc0000ea5f0 4:0xc0000ea600 5:0xc0000ea610 6:0xc0000ea620 7:0xc0000ea630 8:0xc0000ea640 9:0xc0000ea650] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:37 {Node 1}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 2, ShardIDs: [0 3 1 2 4]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:JUXLKk3BOuMoNbAkQ2ZF] 1:map[3:dvBkqjIinHA8vlaPNC1z] 2:map[4:_hkoikZ_Bq1_Fku53MJG] 3:map[5:na9VNUsw4Wxr-KaL86RE] 4:map[6:-x-wca4aWAAG7KArRf-W]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:00:37 {Node 2}{Group 101} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:JUXLKk3BOuMoNbAkQ2ZF] 1:map[3:dvBkqjIinHA8vlaPNC1z] 2:map[4:_hkoikZ_Bq1_Fku53MJG] 3:map[5:na9VNUsw4Wxr-KaL86RE] 4:map[6:-x-wca4aWAAG7KArRf-W]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 2
2025/01/04 13:00:37 {Node 2}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 2 map[0:map[2:JUXLKk3BOuMoNbAkQ2ZF] 1:map[3:dvBkqjIinHA8vlaPNC1z] 2:map[4:_hkoikZ_Bq1_Fku53MJG] 3:map[5:na9VNUsw4Wxr-KaL86RE] 4:map[6:-x-wca4aWAAG7KArRf-W]] map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 4 1 false [] 0 0}
2025/01/04 13:00:37 {Node 2}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:JUXLKk3BOuMoNbAkQ2ZF] 1:map[3:dvBkqjIinHA8vlaPNC1z] 2:map[4:_hkoikZ_Bq1_Fku53MJG] 3:map[5:na9VNUsw4Wxr-KaL86RE] 4:map[6:-x-wca4aWAAG7KArRf-W]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:37 {Node 1}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 2 map[0:map[2:JUXLKk3BOuMoNbAkQ2ZF] 1:map[3:dvBkqjIinHA8vlaPNC1z] 2:map[4:_hkoikZ_Bq1_Fku53MJG] 3:map[5:na9VNUsw4Wxr-KaL86RE] 4:map[6:-x-wca4aWAAG7KArRf-W]] map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 4 1 false [] 0 0}
2025/01/04 13:00:37 {Node 2}{Group 101} Execute Command Command{commandType: InsertShards, Data: {OK 2 map[0:map[2:JUXLKk3BOuMoNbAkQ2ZF] 1:map[3:dvBkqjIinHA8vlaPNC1z] 2:map[4:_hkoikZ_Bq1_Fku53MJG] 3:map[5:na9VNUsw4Wxr-KaL86RE] 4:map[6:-x-wca4aWAAG7KArRf-W]] map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:00:37 {Node 1}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:JUXLKk3BOuMoNbAkQ2ZF] 1:map[3:dvBkqjIinHA8vlaPNC1z] 2:map[4:_hkoikZ_Bq1_Fku53MJG] 3:map[5:na9VNUsw4Wxr-KaL86RE] 4:map[6:-x-wca4aWAAG7KArRf-W]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:37 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 4s-h0q8RLEin6T-AurvM Append 938487803632438324 21}} 25 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {0 4s-h0q8RLEin6T-AurvM Append 938487803632438324 21}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:37 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 4s-h0q8RLEin6T-AurvM Append 938487803632438324 21}} 25 1 false [] 0 0}
2025/01/04 13:00:37 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0000eb520 1:0xc0000eb530 2:0xc0000eb540 3:0xc0000eb550 4:0xc0000eb560 5:0xc0000eb570 6:0xc0000eb580 7:0xc0000eb590 8:0xc0000eb5a0 9:0xc0000eb5b0] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:37 {Node 2}{Group 101} starts a GCTask to delete shards [4 1 2 0 3] from group 100 when config is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:37 {Node 1}{Group 102} fetches latest configuration {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 2
2025/01/04 13:00:37 {Node 1}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0000ea5c0 1:0xc0000ea5d0 2:0xc0000ea5e0 3:0xc0000ea5f0 4:0xc0000ea600 5:0xc0000ea610 6:0xc0000ea620 7:0xc0000ea630 8:0xc0000ea640 9:0xc0000ea650] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:37 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 4 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 102} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 4 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:37 {Node 2}{Group 102} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 938487803632438324 22}} 26 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [4 1 2 0 3]}} 27 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100}'s shards status are map[0:0xc0000ea5c0 1:0xc0000ea5d0 2:0xc0000ea5e0 3:0xc0000ea5f0 4:0xc0000ea600 5:0xc0000ea610 6:0xc0000ea620 7:0xc0000ea630 8:0xc0000ea640 9:0xc0000ea650] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [4 1 2 0 3]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:37 {Node 1}{Group 100}'s shards status are map[0:0xc000272840 1:0xc000272820 2:0xc000272830 3:0xc000272850 4:0xc000272810 5:0xc0000ea610 6:0xc0000ea620 7:0xc0000ea630 8:0xc0000ea640 9:0xc0000ea650] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [4 1 2 0 3]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:37 {Node 1}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {2 [4 1 2 0 3]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:37 {Node 1}{Group 100} processes GCTaskRequest ShardOperationArgs{ConfigNum: 2, ShardIDs: [4 1 2 0 3]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:00:37 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 938487803632438324 22}} 26 1 false [] 0 0}
2025/01/04 13:00:37 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [4 1 2 0 3]}} 27 1 false [] 0 0}
2025/01/04 13:00:37 {Node 2}{Group 100}'s shards status are map[0:0xc0000ea9b0 1:0xc0000ea9c0 2:0xc0000ea9d0 3:0xc0000ea9e0 4:0xc0000ea9f0 5:0xc0000eaa00 6:0xc0000eaa10 7:0xc0000eaa20 8:0xc0000eaa30 9:0xc0000eaa40] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [4 1 2 0 3]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:37 {Node 2}{Group 100}'s shards status are map[0:0xc000288000 1:0xc0002c7f60 2:0xc0002c7f70 3:0xc000288010 4:0xc0002c7f50 5:0xc0000eaa00 6:0xc0000eaa10 7:0xc0000eaa20 8:0xc0000eaa30 9:0xc0000eaa40] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [4 1 2 0 3]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:37 {Node 2}{Group 101} deletes shards [4 1 2 0 3] in remote group successfully when currentConfigNum is 2
2025/01/04 13:00:37 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {1  Get 938487803632438324 22}} with CommandReply CommandReply{Err: OK, Value: wqHWbmnUmui1yA4itkL2}
2025/01/04 13:00:37 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [4 1 2 0 3]}} 5 1 false [] 0 0}
2025/01/04 13:00:37 {Node 2}{Group 101}'s shards status are map[0:0xc0000eb520 1:0xc0000eb530 2:0xc0000eb540 3:0xc0000eb550 4:0xc0000eb560 5:0xc0000eb570 6:0xc0000eb580 7:0xc0000eb590 8:0xc0000eb5a0 9:0xc0000eb5b0] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [4 1 2 0 3]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:37 {Node 2}{Group 101}'s shards status are map[0:0xc0000eb520 1:0xc0000eb530 2:0xc0000eb540 3:0xc0000eb550 4:0xc0000eb560 5:0xc0000eb570 6:0xc0000eb580 7:0xc0000eb590 8:0xc0000eb5a0 9:0xc0000eb5b0] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [4 1 2 0 3]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:37 {Node 2}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {2 [4 1 2 0 3]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:37 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [4 1 2 0 3]}} 5 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 101}'s shards status are map[0:0xc0000eb150 1:0xc0000eb160 2:0xc0000eb170 3:0xc0000eb180 4:0xc0000eb190 5:0xc0000eb1a0 6:0xc0000eb1b0 7:0xc0000eb1c0 8:0xc0000eb1d0 9:0xc0000eb1e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [4 1 2 0 3]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:37 {Node 1}{Group 101}'s shards status are map[0:0xc0000eb150 1:0xc0000eb160 2:0xc0000eb170 3:0xc0000eb180 4:0xc0000eb190 5:0xc0000eb1a0 6:0xc0000eb1b0 7:0xc0000eb1c0 8:0xc0000eb1d0 9:0xc0000eb1e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [4 1 2 0 3]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:37 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 FhgrCQ9CJLDJeqR8BPuE Append 938487803632438324 23}} 28 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {1 FhgrCQ9CJLDJeqR8BPuE Append 938487803632438324 23}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:37 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 FhgrCQ9CJLDJeqR8BPuE Append 938487803632438324 23}} 28 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 102} starts a PullTask to get shards [5 6] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 102} starts a PullTask to get shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 2}{Group 101} fetches latest configuration {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 2
2025/01/04 13:00:37 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 6 1 false [] 0 0}
2025/01/04 13:00:37 {Node 2}{Group 101} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 2}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:37 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 6 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 101} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc0000ebcc0 1:0xc0000ebcd0 2:0xc0000ebce0 3:0xc0000ebcf0 4:0xc0000ebd00 5:0xc0000ebd10 6:0xc0000ebd20 7:0xc0000ebd30 8:0xc0000ebd40 9:0xc0000ebd50] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 2}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:JUXLKk3BOuMoNbAkQ2ZF]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:00:37 {Node 1}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:JUXLKk3BOuMoNbAkQ2ZF]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 3
2025/01/04 13:00:37 {Node 1}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:00:37 {Node 1}{Group 100} fetches latest configuration {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 2
2025/01/04 13:00:37 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[0:map[2:JUXLKk3BOuMoNbAkQ2ZF]] map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 5 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:JUXLKk3BOuMoNbAkQ2ZF]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 3 map[0:map[2:JUXLKk3BOuMoNbAkQ2ZF]] map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:00:37 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[0:map[2:JUXLKk3BOuMoNbAkQ2ZF]] map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 5 1 false [] 0 0}
2025/01/04 13:00:37 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:JUXLKk3BOuMoNbAkQ2ZF]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 29 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:37 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 29 1 false [] 0 0}
2025/01/04 13:00:37 {Node 2}{Group 100} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 102} starts a GCTask to delete shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 102} starts a PullTask to get shards [5 6] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 7 1 false [] 0 0}
2025/01/04 13:00:37 {Node 2}{Group 101}'s shards status are map[0:0xc0000eb520 1:0xc0000eb530 2:0xc0000eb540 3:0xc0000eb550 4:0xc0000eb560 5:0xc0000eb570 6:0xc0000eb580 7:0xc0000eb590 8:0xc0000eb5a0 9:0xc0000eb5b0] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 2}{Group 101}'s shards status are map[0:0xc00042d850 1:0xc0000eb530 2:0xc0000eb540 3:0xc0000eb550 4:0xc0000eb560 5:0xc0000eb570 6:0xc0000eb580 7:0xc0000eb590 8:0xc0000eb5a0 9:0xc0000eb5b0] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 2}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {3 [0]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:37 {Node 2}{Group 101} processes GCTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:00:37 {Node 1}{Group 102} deletes shards [0] in remote group successfully when currentConfigNum is 3
2025/01/04 13:00:37 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 7 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 101}'s shards status are map[0:0xc0000eb150 1:0xc0000eb160 2:0xc0000eb170 3:0xc0000eb180 4:0xc0000eb190 5:0xc0000eb1a0 6:0xc0000eb1b0 7:0xc0000eb1c0 8:0xc0000eb1d0 9:0xc0000eb1e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 101}'s shards status are map[0:0xc0001bacd0 1:0xc0000eb160 2:0xc0000eb170 3:0xc0000eb180 4:0xc0000eb190 5:0xc0000eb1a0 6:0xc0000eb1b0 7:0xc0000eb1c0 8:0xc0000eb1d0 9:0xc0000eb1e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc0000ebcc0 1:0xc0000ebcd0 2:0xc0000ebce0 3:0xc0000ebcf0 4:0xc0000ebd00 5:0xc0000ebd10 6:0xc0000ebd20 7:0xc0000ebd30 8:0xc0000ebd40 9:0xc0000ebd50] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 6 1 false [] 0 0}
2025/01/04 13:00:37 {Node 2}{Group 101} fetches latest configuration {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 3
2025/01/04 13:00:37 {Node 1}{Group 102}'s shards status are map[0:0xc0000ebcc0 1:0xc0000ebcd0 2:0xc0000ebce0 3:0xc0000ebcf0 4:0xc0000ebd00 5:0xc0000ebd10 6:0xc0000ebd20 7:0xc0000ebd30 8:0xc0000ebd40 9:0xc0000ebd50] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 102}'s shards status are map[0:0xc0000ebcc0 1:0xc0000ebcd0 2:0xc0000ebce0 3:0xc0000ebcf0 4:0xc0000ebd00 5:0xc0000ebd10 6:0xc0000ebd20 7:0xc0000ebd30 8:0xc0000ebd40 9:0xc0000ebd50] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2  Get 938487803632438324 24}} 7 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {2  Get 938487803632438324 24}} with CommandReply CommandReply{Err: OK, Value: JUXLKk3BOuMoNbAkQ2ZF}
2025/01/04 13:00:37 {Node 1}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {3 [0]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:37 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 6 1 false [] 0 0}
2025/01/04 13:00:37 {Node 2}{Group 102}'s shards status are map[0:0xc0001ba130 1:0xc0001ba140 2:0xc0001ba150 3:0xc0001ba160 4:0xc0001ba170 5:0xc0001ba180 6:0xc0001ba190 7:0xc0001ba1a0 8:0xc0001ba1b0 9:0xc0001ba1c0] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 2}{Group 102}'s shards status are map[0:0xc0001ba130 1:0xc0001ba140 2:0xc0001ba150 3:0xc0001ba160 4:0xc0001ba170 5:0xc0001ba180 6:0xc0001ba190 7:0xc0001ba1a0 8:0xc0001ba1b0 9:0xc0001ba1c0] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2  Get 938487803632438324 24}} 7 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc000272840 1:0xc000272820 2:0xc000272830 3:0xc000272850 4:0xc000272810 5:0xc0000ea610 6:0xc0000ea620 7:0xc0000ea630 8:0xc0000ea640 9:0xc0000ea650] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 8 1 false [] 0 0}
2025/01/04 13:00:37 {Node 2}{Group 101} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 2}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:37 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 8 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 101} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:GCDmFy1_xGkSRUaQdxWk] 6:map[8:_on9Br71TdxVg4731NvE]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:00:37 {Node 1}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:GCDmFy1_xGkSRUaQdxWk] 6:map[8:_on9Br71TdxVg4731NvE]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 3
2025/01/04 13:00:37 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[5:map[7:GCDmFy1_xGkSRUaQdxWk] 6:map[8:_on9Br71TdxVg4731NvE]] map[938487803632438324:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} 8 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:GCDmFy1_xGkSRUaQdxWk] 6:map[8:_on9Br71TdxVg4731NvE]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 3 map[5:map[7:GCDmFy1_xGkSRUaQdxWk] 6:map[8:_on9Br71TdxVg4731NvE]] map[938487803632438324:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:00:37 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[5:map[7:GCDmFy1_xGkSRUaQdxWk] 6:map[8:_on9Br71TdxVg4731NvE]] map[938487803632438324:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} 8 1 false [] 0 0}
2025/01/04 13:00:37 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:GCDmFy1_xGkSRUaQdxWk] 6:map[8:_on9Br71TdxVg4731NvE]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc0000ebcc0 1:0xc0000ebcd0 2:0xc0000ebce0 3:0xc0000ebcf0 4:0xc0000ebd00 5:0xc0000ebd10 6:0xc0000ebd20 7:0xc0000ebd30 8:0xc0000ebd40 9:0xc0000ebd50] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 WfCsHZ5gGrKs_-WaVIXD Append 938487803632438324 25}} 9 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {2 WfCsHZ5gGrKs_-WaVIXD Append 938487803632438324 25}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:37 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 WfCsHZ5gGrKs_-WaVIXD Append 938487803632438324 25}} 9 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 102} starts a GCTask to delete shards [5 6] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc000272840 1:0xc000272820 2:0xc000272830 3:0xc000272850 4:0xc000272810 5:0xc0000ea610 6:0xc0000ea620 7:0xc0000ea630 8:0xc0000ea640 9:0xc0000ea650] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc00042d850 1:0xc0000eb530 2:0xc0000eb540 3:0xc0000eb550 4:0xc0000eb560 5:0xc0000eb570 6:0xc0000eb580 7:0xc0000eb590 8:0xc0000eb5a0 9:0xc0000eb5b0] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 30 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100}'s shards status are map[0:0xc000272840 1:0xc000272820 2:0xc000272830 3:0xc000272850 4:0xc000272810 5:0xc0000ea610 6:0xc0000ea620 7:0xc0000ea630 8:0xc0000ea640 9:0xc0000ea650] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 100}'s shards status are map[0:0xc000272840 1:0xc000272820 2:0xc000272830 3:0xc000272850 4:0xc000272810 5:0xc0002c74f0 6:0xc0002c7500 7:0xc0000ea630 8:0xc0000ea640 9:0xc0000ea650] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {3 [5 6]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:37 {Node 1}{Group 100} processes GCTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:00:37 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 30 1 false [] 0 0}
2025/01/04 13:00:37 {Node 2}{Group 100}'s shards status are map[0:0xc000288000 1:0xc0002c7f60 2:0xc0002c7f70 3:0xc000288010 4:0xc0002c7f50 5:0xc0000eaa00 6:0xc0000eaa10 7:0xc0000eaa20 8:0xc0000eaa30 9:0xc0000eaa40] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 2}{Group 100}'s shards status are map[0:0xc000288000 1:0xc0002c7f60 2:0xc0002c7f70 3:0xc000288010 4:0xc0002c7f50 5:0xc000421930 6:0xc000421940 7:0xc0000eaa20 8:0xc0000eaa30 9:0xc0000eaa40] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 102} deletes shards [5 6] in remote group successfully when currentConfigNum is 3
2025/01/04 13:00:37 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 10 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 102}'s shards status are map[0:0xc0000ebcc0 1:0xc0000ebcd0 2:0xc0000ebce0 3:0xc0000ebcf0 4:0xc0000ebd00 5:0xc0000ebd10 6:0xc0000ebd20 7:0xc0000ebd30 8:0xc0000ebd40 9:0xc0000ebd50] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 102}'s shards status are map[0:0xc0000ebcc0 1:0xc0000ebcd0 2:0xc0000ebce0 3:0xc0000ebcf0 4:0xc0000ebd00 5:0xc0000ebd10 6:0xc0000ebd20 7:0xc0000ebd30 8:0xc0000ebd40 9:0xc0000ebd50] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {3 [5 6]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:37 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 10 1 false [] 0 0}
2025/01/04 13:00:37 {Node 2}{Group 102}'s shards status are map[0:0xc0001ba130 1:0xc0001ba140 2:0xc0001ba150 3:0xc0001ba160 4:0xc0001ba170 5:0xc0001ba180 6:0xc0001ba190 7:0xc0001ba1a0 8:0xc0001ba1b0 9:0xc0001ba1c0] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 2}{Group 102}'s shards status are map[0:0xc0001ba130 1:0xc0001ba140 2:0xc0001ba150 3:0xc0001ba160 4:0xc0001ba170 5:0xc0001ba180 6:0xc0001ba190 7:0xc0001ba1a0 8:0xc0001ba1b0 9:0xc0001ba1c0] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 102} fetches latest configuration {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 3
2025/01/04 13:00:37 {Node 1}{Group 100} fetches latest configuration {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 3
2025/01/04 13:00:37 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 31 1 false [] 0 0}
2025/01/04 13:00:37 {Node 1}{Group 100} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:37 {Node 1}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:37 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 31 1 false [] 0 0}
2025/01/04 13:00:37 {Node 2}{Group 100} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc00042d850 1:0xc0000eb530 2:0xc0000eb540 3:0xc0000eb550 4:0xc0000eb560 5:0xc0000eb570 6:0xc0000eb580 7:0xc0000eb590 8:0xc0000eb5a0 9:0xc0000eb5b0] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 100} starts a PullTask to get shards [1 3] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 11 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:38 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 11 1 false [] 0 0}
2025/01/04 13:00:38 {Node 2}{Group 102} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 102} starts a PullTask to get shards [2 4] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 2}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:_hkoikZ_Bq1_Fku53MJG] 4:map[6:-x-wca4aWAAG7KArRf-W]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:00:38 {Node 1}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:_hkoikZ_Bq1_Fku53MJG] 4:map[6:-x-wca4aWAAG7KArRf-W]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 4
2025/01/04 13:00:38 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[2:map[4:_hkoikZ_Bq1_Fku53MJG] 4:map[6:-x-wca4aWAAG7KArRf-W]] map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 12 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:_hkoikZ_Bq1_Fku53MJG] 4:map[6:-x-wca4aWAAG7KArRf-W]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 4 map[2:map[4:_hkoikZ_Bq1_Fku53MJG] 4:map[6:-x-wca4aWAAG7KArRf-W]] map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:00:38 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[2:map[4:_hkoikZ_Bq1_Fku53MJG] 4:map[6:-x-wca4aWAAG7KArRf-W]] map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 12 1 false [] 0 0}
2025/01/04 13:00:38 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:_hkoikZ_Bq1_Fku53MJG] 4:map[6:-x-wca4aWAAG7KArRf-W]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 102} starts a GCTask to delete shards [2 4] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 2}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:dvBkqjIinHA8vlaPNC1z] 3:map[5:na9VNUsw4Wxr-KaL86RE]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:00:38 {Node 1}{Group 100} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:dvBkqjIinHA8vlaPNC1z] 3:map[5:na9VNUsw4Wxr-KaL86RE]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 4
2025/01/04 13:00:38 {Node 1}{Group 100} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[1:map[3:dvBkqjIinHA8vlaPNC1z] 3:map[5:na9VNUsw4Wxr-KaL86RE]] map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 32 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 100} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:dvBkqjIinHA8vlaPNC1z] 3:map[5:na9VNUsw4Wxr-KaL86RE]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 100} Execute Command Command{commandType: InsertShards, Data: {OK 4 map[1:map[3:dvBkqjIinHA8vlaPNC1z] 3:map[5:na9VNUsw4Wxr-KaL86RE]] map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:00:38 {Node 2}{Group 100} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[1:map[3:dvBkqjIinHA8vlaPNC1z] 3:map[5:na9VNUsw4Wxr-KaL86RE]] map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 32 1 false [] 0 0}
2025/01/04 13:00:38 {Node 2}{Group 100} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:dvBkqjIinHA8vlaPNC1z] 3:map[5:na9VNUsw4Wxr-KaL86RE]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc000272840 1:0xc000272820 2:0xc000272830 3:0xc000272850 4:0xc000272810 5:0xc0002c74f0 6:0xc0002c7500 7:0xc0000ea630 8:0xc0000ea640 9:0xc0000ea650] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc00042d850 1:0xc0000eb530 2:0xc0000eb540 3:0xc0000eb550 4:0xc0000eb560 5:0xc0000eb570 6:0xc0000eb580 7:0xc0000eb590 8:0xc0000eb5a0 9:0xc0000eb5b0] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 9 1 false [] 0 0}
2025/01/04 13:00:38 {Node 2}{Group 101}'s shards status are map[0:0xc00042d850 1:0xc0000eb530 2:0xc0000eb540 3:0xc0000eb550 4:0xc0000eb560 5:0xc0000eb570 6:0xc0000eb580 7:0xc0000eb590 8:0xc0000eb5a0 9:0xc0000eb5b0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 2}{Group 101}'s shards status are map[0:0xc00042d850 1:0xc0000eb530 2:0xc0003530f0 3:0xc0000eb550 4:0xc000353100 5:0xc0000eb570 6:0xc0000eb580 7:0xc0000eb590 8:0xc0000eb5a0 9:0xc0000eb5b0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 2}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {4 [2 4]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:38 {Node 2}{Group 101} processes GCTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:00:38 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 9 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 101}'s shards status are map[0:0xc0001bacd0 1:0xc0000eb160 2:0xc0000eb170 3:0xc0000eb180 4:0xc0000eb190 5:0xc0000eb1a0 6:0xc0000eb1b0 7:0xc0000eb1c0 8:0xc0000eb1d0 9:0xc0000eb1e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 101}'s shards status are map[0:0xc0001bacd0 1:0xc0000eb160 2:0xc00036fca0 3:0xc0000eb180 4:0xc00036fcb0 5:0xc0000eb1a0 6:0xc0000eb1b0 7:0xc0000eb1c0 8:0xc0000eb1d0 9:0xc0000eb1e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 102} deletes shards [2 4] in remote group successfully when currentConfigNum is 4
2025/01/04 13:00:38 {Node 1}{Group 100} starts a GCTask to delete shards [3 1] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc0000ebcc0 1:0xc0000ebcd0 2:0xc0000ebce0 3:0xc0000ebcf0 4:0xc0000ebd00 5:0xc0000ebd10 6:0xc0000ebd20 7:0xc0000ebd30 8:0xc0000ebd40 9:0xc0000ebd50] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [3 1]}} 10 1 false [] 0 0}
2025/01/04 13:00:38 {Node 2}{Group 101}'s shards status are map[0:0xc00042d850 1:0xc0000eb530 2:0xc0003530f0 3:0xc0000eb550 4:0xc000353100 5:0xc0000eb570 6:0xc0000eb580 7:0xc0000eb590 8:0xc0000eb5a0 9:0xc0000eb5b0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 13 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102}'s shards status are map[0:0xc0000ebcc0 1:0xc0000ebcd0 2:0xc0000ebce0 3:0xc0000ebcf0 4:0xc0000ebd00 5:0xc0000ebd10 6:0xc0000ebd20 7:0xc0000ebd30 8:0xc0000ebd40 9:0xc0000ebd50] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 102}'s shards status are map[0:0xc0000ebcc0 1:0xc0000ebcd0 2:0xc0000ebce0 3:0xc0000ebcf0 4:0xc0000ebd00 5:0xc0000ebd10 6:0xc0000ebd20 7:0xc0000ebd30 8:0xc0000ebd40 9:0xc0000ebd50] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 2}{Group 101}'s shards status are map[0:0xc00042d850 1:0xc00042c300 2:0xc0003530f0 3:0xc00042c2f0 4:0xc000353100 5:0xc0000eb570 6:0xc0000eb580 7:0xc0000eb590 8:0xc0000eb5a0 9:0xc0000eb5b0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [3 1]}} 10 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 101}'s shards status are map[0:0xc0001bacd0 1:0xc0000eb160 2:0xc00036fca0 3:0xc0000eb180 4:0xc00036fcb0 5:0xc0000eb1a0 6:0xc0000eb1b0 7:0xc0000eb1c0 8:0xc0000eb1d0 9:0xc0000eb1e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 101}'s shards status are map[0:0xc0001bacd0 1:0xc00042c400 2:0xc00036fca0 3:0xc00042c3f0 4:0xc00036fcb0 5:0xc0000eb1a0 6:0xc0000eb1b0 7:0xc0000eb1c0 8:0xc0000eb1d0 9:0xc0000eb1e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {4 [2 4]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:38 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 13 1 false [] 0 0}
2025/01/04 13:00:38 {Node 2}{Group 102}'s shards status are map[0:0xc0001ba130 1:0xc0001ba140 2:0xc0001ba150 3:0xc0001ba160 4:0xc0001ba170 5:0xc0001ba180 6:0xc0001ba190 7:0xc0001ba1a0 8:0xc0001ba1b0 9:0xc0001ba1c0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 2}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {4 [3 1]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:38 {Node 2}{Group 101} processes GCTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:00:38 {Node 2}{Group 102}'s shards status are map[0:0xc0001ba130 1:0xc0001ba140 2:0xc0001ba150 3:0xc0001ba160 4:0xc0001ba170 5:0xc0001ba180 6:0xc0001ba190 7:0xc0001ba1a0 8:0xc0001ba1b0 9:0xc0001ba1c0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 100} deletes shards [3 1] in remote group successfully when currentConfigNum is 4
2025/01/04 13:00:38 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [3 1]}} 33 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 100}'s shards status are map[0:0xc000272840 1:0xc000272820 2:0xc000272830 3:0xc000272850 4:0xc000272810 5:0xc0002c74f0 6:0xc0002c7500 7:0xc0000ea630 8:0xc0000ea640 9:0xc0000ea650] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 100}'s shards status are map[0:0xc000272840 1:0xc000272820 2:0xc000272830 3:0xc000272850 4:0xc000272810 5:0xc0002c74f0 6:0xc0002c7500 7:0xc0000ea630 8:0xc0000ea640 9:0xc0000ea650] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {4 [3 1]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:38 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [3 1]}} 33 1 false [] 0 0}
2025/01/04 13:00:38 {Node 2}{Group 100}'s shards status are map[0:0xc000288000 1:0xc0002c7f60 2:0xc0002c7f70 3:0xc000288010 4:0xc0002c7f50 5:0xc000421930 6:0xc000421940 7:0xc0000eaa20 8:0xc0000eaa30 9:0xc0000eaa40] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 2}{Group 100}'s shards status are map[0:0xc000288000 1:0xc0002c7f60 2:0xc0002c7f70 3:0xc000288010 4:0xc0002c7f50 5:0xc000421930 6:0xc000421940 7:0xc0000eaa20 8:0xc0000eaa30 9:0xc0000eaa40] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 100} fetches latest configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 4
2025/01/04 13:00:38 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 34 1 false [] 0 0}
2025/01/04 13:00:38 {Node 2}{Group 100} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 34 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 100} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:38 {Node 2}{Group 101} fetches latest configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 4
2025/01/04 13:00:38 {Node 1}{Group 102} fetches latest configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 4
2025/01/04 13:00:38 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 14 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:38 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 11 1 false [] 0 0}
2025/01/04 13:00:38 {Node 2}{Group 101} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 2}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:38 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 14 1 false [] 0 0}
2025/01/04 13:00:38 {Node 2}{Group 102} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 11 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 101} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 102} starts a PullTask to get shards [9 7 1 3 8] from group 100 when config is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc000272840 1:0xc000272820 2:0xc000272830 3:0xc000272850 4:0xc000272810 5:0xc0002c74f0 6:0xc0002c7500 7:0xc0000ea630 8:0xc0000ea640 9:0xc0000ea650] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 5, ShardIDs: [9 7 1 3 8]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:dvBkqjIinHA8vlaPNC1z] 3:map[5:na9VNUsw4Wxr-KaL86RE] 7:map[9:Hryra8dP9rT_qgveY4sN] 8:map[0:htpa-lhTvqxLKJZE0dll4s-h0q8RLEin6T-AurvM] 9:map[1:wqHWbmnUmui1yA4itkL2FhgrCQ9CJLDJeqR8BPuE]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:00:38 {Node 1}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:dvBkqjIinHA8vlaPNC1z] 3:map[5:na9VNUsw4Wxr-KaL86RE] 7:map[9:Hryra8dP9rT_qgveY4sN] 8:map[0:htpa-lhTvqxLKJZE0dll4s-h0q8RLEin6T-AurvM] 9:map[1:wqHWbmnUmui1yA4itkL2FhgrCQ9CJLDJeqR8BPuE]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 5
2025/01/04 13:00:38 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 5 map[1:map[3:dvBkqjIinHA8vlaPNC1z] 3:map[5:na9VNUsw4Wxr-KaL86RE] 7:map[9:Hryra8dP9rT_qgveY4sN] 8:map[0:htpa-lhTvqxLKJZE0dll4s-h0q8RLEin6T-AurvM] 9:map[1:wqHWbmnUmui1yA4itkL2FhgrCQ9CJLDJeqR8BPuE]] map[938487803632438324:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} 15 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:dvBkqjIinHA8vlaPNC1z] 3:map[5:na9VNUsw4Wxr-KaL86RE] 7:map[9:Hryra8dP9rT_qgveY4sN] 8:map[0:htpa-lhTvqxLKJZE0dll4s-h0q8RLEin6T-AurvM] 9:map[1:wqHWbmnUmui1yA4itkL2FhgrCQ9CJLDJeqR8BPuE]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 5 map[1:map[3:dvBkqjIinHA8vlaPNC1z] 3:map[5:na9VNUsw4Wxr-KaL86RE] 7:map[9:Hryra8dP9rT_qgveY4sN] 8:map[0:htpa-lhTvqxLKJZE0dll4s-h0q8RLEin6T-AurvM] 9:map[1:wqHWbmnUmui1yA4itkL2FhgrCQ9CJLDJeqR8BPuE]] map[938487803632438324:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:00:38 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 5 map[1:map[3:dvBkqjIinHA8vlaPNC1z] 3:map[5:na9VNUsw4Wxr-KaL86RE] 7:map[9:Hryra8dP9rT_qgveY4sN] 8:map[0:htpa-lhTvqxLKJZE0dll4s-h0q8RLEin6T-AurvM] 9:map[1:wqHWbmnUmui1yA4itkL2FhgrCQ9CJLDJeqR8BPuE]] map[938487803632438324:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} 15 1 false [] 0 0}
2025/01/04 13:00:38 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:dvBkqjIinHA8vlaPNC1z] 3:map[5:na9VNUsw4Wxr-KaL86RE] 7:map[9:Hryra8dP9rT_qgveY4sN] 8:map[0:htpa-lhTvqxLKJZE0dll4s-h0q8RLEin6T-AurvM] 9:map[1:wqHWbmnUmui1yA4itkL2FhgrCQ9CJLDJeqR8BPuE]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc0000ebcc0 1:0xc0000ebcd0 2:0xc0000ebce0 3:0xc0000ebcf0 4:0xc0000ebd00 5:0xc0000ebd10 6:0xc0000ebd20 7:0xc0000ebd30 8:0xc0000ebd40 9:0xc0000ebd50] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 102} starts a GCTask to delete shards [7 1 3 8 9] from group 100 when config is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc000272840 1:0xc000272820 2:0xc000272830 3:0xc000272850 4:0xc000272810 5:0xc0002c74f0 6:0xc0002c7500 7:0xc0000ea630 8:0xc0000ea640 9:0xc0000ea650] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [7 1 3 8 9]}} 35 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 100}'s shards status are map[0:0xc000272840 1:0xc000272820 2:0xc000272830 3:0xc000272850 4:0xc000272810 5:0xc0002c74f0 6:0xc0002c7500 7:0xc0000ea630 8:0xc0000ea640 9:0xc0000ea650] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [7 1 3 8 9]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 100}'s shards status are map[0:0xc000272840 1:0xc000272ae0 2:0xc000272830 3:0xc000272af0 4:0xc000272810 5:0xc0002c74f0 6:0xc0002c7500 7:0xc000272ad0 8:0xc000272b00 9:0xc000272b50] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [7 1 3 8 9]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {5 [7 1 3 8 9]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:38 {Node 1}{Group 100} processes GCTaskRequest ShardOperationArgs{ConfigNum: 5, ShardIDs: [7 1 3 8 9]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:00:38 {Node 1}{Group 102} deletes shards [7 1 3 8 9] in remote group successfully when currentConfigNum is 5
2025/01/04 13:00:38 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [7 1 3 8 9]}} 35 1 false [] 0 0}
2025/01/04 13:00:38 {Node 2}{Group 100}'s shards status are map[0:0xc000288000 1:0xc0002c7f60 2:0xc0002c7f70 3:0xc000288010 4:0xc0002c7f50 5:0xc000421930 6:0xc000421940 7:0xc0000eaa20 8:0xc0000eaa30 9:0xc0000eaa40] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [7 1 3 8 9]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 2}{Group 100}'s shards status are map[0:0xc000288000 1:0xc0001498a0 2:0xc0002c7f70 3:0xc0001498b0 4:0xc0002c7f50 5:0xc000421930 6:0xc000421940 7:0xc000149890 8:0xc0001498d0 9:0xc0001498e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [7 1 3 8 9]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [7 1 3 8 9]}} 16 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102}'s shards status are map[0:0xc0000ebcc0 1:0xc0000ebcd0 2:0xc0000ebce0 3:0xc0000ebcf0 4:0xc0000ebd00 5:0xc0000ebd10 6:0xc0000ebd20 7:0xc0000ebd30 8:0xc0000ebd40 9:0xc0000ebd50] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [7 1 3 8 9]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 102}'s shards status are map[0:0xc0000ebcc0 1:0xc0000ebcd0 2:0xc0000ebce0 3:0xc0000ebcf0 4:0xc0000ebd00 5:0xc0000ebd10 6:0xc0000ebd20 7:0xc0000ebd30 8:0xc0000ebd40 9:0xc0000ebd50] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [7 1 3 8 9]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3  Get 938487803632438324 26}} 17 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {3  Get 938487803632438324 26}} with CommandReply CommandReply{Err: OK, Value: dvBkqjIinHA8vlaPNC1z}
2025/01/04 13:00:38 {Node 1}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {5 [7 1 3 8 9]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:38 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [7 1 3 8 9]}} 16 1 false [] 0 0}
2025/01/04 13:00:38 {Node 2}{Group 102}'s shards status are map[0:0xc0001ba130 1:0xc0001ba140 2:0xc0001ba150 3:0xc0001ba160 4:0xc0001ba170 5:0xc0001ba180 6:0xc0001ba190 7:0xc0001ba1a0 8:0xc0001ba1b0 9:0xc0001ba1c0] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [7 1 3 8 9]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 2}{Group 102}'s shards status are map[0:0xc0001ba130 1:0xc0001ba140 2:0xc0001ba150 3:0xc0001ba160 4:0xc0001ba170 5:0xc0001ba180 6:0xc0001ba190 7:0xc0001ba1a0 8:0xc0001ba1b0 9:0xc0001ba1c0] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [7 1 3 8 9]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:38 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3  Get 938487803632438324 26}} 17 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3 aO7kGzGzYTWivE74zHbt Append 938487803632438324 27}} 18 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {3 aO7kGzGzYTWivE74zHbt Append 938487803632438324 27}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:38 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3 aO7kGzGzYTWivE74zHbt Append 938487803632438324 27}} 18 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4  Get 938487803632438324 28}} 19 1 false [] 0 0}
2025/01/04 13:00:38 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4  Get 938487803632438324 28}} 19 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {4  Get 938487803632438324 28}} with CommandReply CommandReply{Err: OK, Value: _hkoikZ_Bq1_Fku53MJG}
2025/01/04 13:00:38 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4 e8ZwOWxQ6uUNCo9ecbq2 Append 938487803632438324 29}} 20 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {4 e8ZwOWxQ6uUNCo9ecbq2 Append 938487803632438324 29}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:38 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4 e8ZwOWxQ6uUNCo9ecbq2 Append 938487803632438324 29}} 20 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5  Get 938487803632438324 30}} 21 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {5  Get 938487803632438324 30}} with CommandReply CommandReply{Err: OK, Value: na9VNUsw4Wxr-KaL86RE}
2025/01/04 13:00:38 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5  Get 938487803632438324 30}} 21 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5 CpQ-5KfopCUx0j5flFeO Append 938487803632438324 31}} 22 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {5 CpQ-5KfopCUx0j5flFeO Append 938487803632438324 31}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:38 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5 CpQ-5KfopCUx0j5flFeO Append 938487803632438324 31}} 22 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6  Get 938487803632438324 32}} 23 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {6  Get 938487803632438324 32}} with CommandReply CommandReply{Err: OK, Value: -x-wca4aWAAG7KArRf-W}
2025/01/04 13:00:38 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6  Get 938487803632438324 32}} 23 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6 Ke8E5_BGELKt_gSoQe_a Append 938487803632438324 33}} 24 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {6 Ke8E5_BGELKt_gSoQe_a Append 938487803632438324 33}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:38 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6 Ke8E5_BGELKt_gSoQe_a Append 938487803632438324 33}} 24 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 938487803632438324 34}} 25 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {7  Get 938487803632438324 34}} with CommandReply CommandReply{Err: OK, Value: GCDmFy1_xGkSRUaQdxWk}
2025/01/04 13:00:38 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 938487803632438324 34}} 25 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 y9P1iKkg33fbrx2ZNdxN Append 938487803632438324 35}} 26 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {7 y9P1iKkg33fbrx2ZNdxN Append 938487803632438324 35}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:38 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 y9P1iKkg33fbrx2ZNdxN Append 938487803632438324 35}} 26 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 938487803632438324 36}} 27 1 false [] 0 0}
2025/01/04 13:00:38 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {8  Get 938487803632438324 36}} with CommandReply CommandReply{Err: OK, Value: _on9Br71TdxVg4731NvE}
2025/01/04 13:00:38 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 938487803632438324 36}} 27 1 false [] 0 0}
2025/01/04 13:00:39 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 xUzo2KPF5rWH8f2DIiWF Append 938487803632438324 37}} 28 1 false [] 0 0}
2025/01/04 13:00:39 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {8 xUzo2KPF5rWH8f2DIiWF Append 938487803632438324 37}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:39 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 xUzo2KPF5rWH8f2DIiWF Append 938487803632438324 37}} 28 1 false [] 0 0}
2025/01/04 13:00:39 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 938487803632438324 38}} 29 1 false [] 0 0}
2025/01/04 13:00:39 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {9  Get 938487803632438324 38}} with CommandReply CommandReply{Err: OK, Value: Hryra8dP9rT_qgveY4sN}
2025/01/04 13:00:39 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 938487803632438324 38}} 29 1 false [] 0 0}
2025/01/04 13:00:39 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 tm-2_oPkrLjreePbeKEf Append 938487803632438324 39}} 30 1 false [] 0 0}
2025/01/04 13:00:39 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {9 tm-2_oPkrLjreePbeKEf Append 938487803632438324 39}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:39 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 tm-2_oPkrLjreePbeKEf Append 938487803632438324 39}} 30 1 false [] 0 0}
2025/01/04 13:00:39 {Node 1}{Group 102} fetches latest configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 5
2025/01/04 13:00:39 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 31 1 false [] 0 0}
2025/01/04 13:00:39 {Node 1}{Group 102} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:39 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 938487803632438324 40}} 32 1 false [] 0 0}
2025/01/04 13:00:39 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {0  Get 938487803632438324 40}} with CommandReply CommandReply{Err: OK, Value: htpa-lhTvqxLKJZE0dll4s-h0q8RLEin6T-AurvM}
2025/01/04 13:00:39 {Node 2}{Group 101} fetches latest configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 5
2025/01/04 13:00:39 {Node 1}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:39 {Node 1}{Group 100} fetches latest configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 5
2025/01/04 13:00:39 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 31 1 false [] 0 0}
2025/01/04 13:00:39 {Node 2}{Group 102} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:39 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 938487803632438324 40}} 32 1 false [] 0 0}
2025/01/04 13:00:39 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 12 1 false [] 0 0}
2025/01/04 13:00:39 {Node 1}{Group 101} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:39 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 36 1 false [] 0 0}
2025/01/04 13:00:39 {Node 1}{Group 100} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:39 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 36 1 false [] 0 0}
2025/01/04 13:00:39 {Node 2}{Group 100} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:39 {Node 1}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:39 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 12 1 false [] 0 0}
2025/01/04 13:00:39 {Node 2}{Group 101} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:39 {Node 2}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:39 {Node 2}{Group 101} starts a PullTask to get shards [1 2 4 0 3] from group 102 when config is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:39 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 hseGwTeIO83fXyWgRTyx Append 938487803632438324 41}} 33 1 false [] 0 0}
2025/01/04 13:00:39 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {0 hseGwTeIO83fXyWgRTyx Append 938487803632438324 41}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:39 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 hseGwTeIO83fXyWgRTyx Append 938487803632438324 41}} 33 1 false [] 0 0}
2025/01/04 13:00:39 {Node 1}{Group 102} processes PullTaskRequest ShardOperationArgs{ConfigNum: 6, ShardIDs: [1 2 4 0 3]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:JUXLKk3BOuMoNbAkQ2ZFWfCsHZ5gGrKs_-WaVIXD] 1:map[3:dvBkqjIinHA8vlaPNC1zaO7kGzGzYTWivE74zHbt] 2:map[4:_hkoikZ_Bq1_Fku53MJGe8ZwOWxQ6uUNCo9ecbq2] 3:map[5:na9VNUsw4Wxr-KaL86RECpQ-5KfopCUx0j5flFeO] 4:map[6:-x-wca4aWAAG7KArRf-WKe8E5_BGELKt_gSoQe_a]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:00:39 {Node 2}{Group 101} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:JUXLKk3BOuMoNbAkQ2ZFWfCsHZ5gGrKs_-WaVIXD] 1:map[3:dvBkqjIinHA8vlaPNC1zaO7kGzGzYTWivE74zHbt] 2:map[4:_hkoikZ_Bq1_Fku53MJGe8ZwOWxQ6uUNCo9ecbq2] 3:map[5:na9VNUsw4Wxr-KaL86RECpQ-5KfopCUx0j5flFeO] 4:map[6:-x-wca4aWAAG7KArRf-WKe8E5_BGELKt_gSoQe_a]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 6
2025/01/04 13:00:39 {Node 2}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 6 map[0:map[2:JUXLKk3BOuMoNbAkQ2ZFWfCsHZ5gGrKs_-WaVIXD] 1:map[3:dvBkqjIinHA8vlaPNC1zaO7kGzGzYTWivE74zHbt] 2:map[4:_hkoikZ_Bq1_Fku53MJGe8ZwOWxQ6uUNCo9ecbq2] 3:map[5:na9VNUsw4Wxr-KaL86RECpQ-5KfopCUx0j5flFeO] 4:map[6:-x-wca4aWAAG7KArRf-WKe8E5_BGELKt_gSoQe_a]] map[938487803632438324:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]}} 13 1 false [] 0 0}
2025/01/04 13:00:39 {Node 2}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:JUXLKk3BOuMoNbAkQ2ZFWfCsHZ5gGrKs_-WaVIXD] 1:map[3:dvBkqjIinHA8vlaPNC1zaO7kGzGzYTWivE74zHbt] 2:map[4:_hkoikZ_Bq1_Fku53MJGe8ZwOWxQ6uUNCo9ecbq2] 3:map[5:na9VNUsw4Wxr-KaL86RECpQ-5KfopCUx0j5flFeO] 4:map[6:-x-wca4aWAAG7KArRf-WKe8E5_BGELKt_gSoQe_a]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:39 {Node 2}{Group 101} Execute Command Command{commandType: InsertShards, Data: {OK 6 map[0:map[2:JUXLKk3BOuMoNbAkQ2ZFWfCsHZ5gGrKs_-WaVIXD] 1:map[3:dvBkqjIinHA8vlaPNC1zaO7kGzGzYTWivE74zHbt] 2:map[4:_hkoikZ_Bq1_Fku53MJGe8ZwOWxQ6uUNCo9ecbq2] 3:map[5:na9VNUsw4Wxr-KaL86RECpQ-5KfopCUx0j5flFeO] 4:map[6:-x-wca4aWAAG7KArRf-WKe8E5_BGELKt_gSoQe_a]] map[938487803632438324:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:00:39 {Node 1}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 6 map[0:map[2:JUXLKk3BOuMoNbAkQ2ZFWfCsHZ5gGrKs_-WaVIXD] 1:map[3:dvBkqjIinHA8vlaPNC1zaO7kGzGzYTWivE74zHbt] 2:map[4:_hkoikZ_Bq1_Fku53MJGe8ZwOWxQ6uUNCo9ecbq2] 3:map[5:na9VNUsw4Wxr-KaL86RECpQ-5KfopCUx0j5flFeO] 4:map[6:-x-wca4aWAAG7KArRf-WKe8E5_BGELKt_gSoQe_a]] map[938487803632438324:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]}} 13 1 false [] 0 0}
2025/01/04 13:00:39 {Node 1}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:JUXLKk3BOuMoNbAkQ2ZFWfCsHZ5gGrKs_-WaVIXD] 1:map[3:dvBkqjIinHA8vlaPNC1zaO7kGzGzYTWivE74zHbt] 2:map[4:_hkoikZ_Bq1_Fku53MJGe8ZwOWxQ6uUNCo9ecbq2] 3:map[5:na9VNUsw4Wxr-KaL86RECpQ-5KfopCUx0j5flFeO] 4:map[6:-x-wca4aWAAG7KArRf-WKe8E5_BGELKt_gSoQe_a]], LastOperations: map[938487803632438324:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:39 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc0000ebcc0 1:0xc0000ebcd0 2:0xc0000ebce0 3:0xc0000ebcf0 4:0xc0000ebd00 5:0xc0000ebd10 6:0xc0000ebd20 7:0xc0000ebd30 8:0xc0000ebd40 9:0xc0000ebd50] when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:39 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc00042d850 1:0xc00042c300 2:0xc0003530f0 3:0xc00042c2f0 4:0xc000353100 5:0xc0000eb570 6:0xc0000eb580 7:0xc0000eb590 8:0xc0000eb5a0 9:0xc0000eb5b0] when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:39 {Node 2}{Group 101} starts a GCTask to delete shards [0 3 4 1 2] from group 102 when config is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:39 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1  Get 938487803632438324 42}} 34 1 false [] 0 0}
2025/01/04 13:00:39 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {1  Get 938487803632438324 42}} with CommandReply CommandReply{Err: OK, Value: wqHWbmnUmui1yA4itkL2FhgrCQ9CJLDJeqR8BPuE}
2025/01/04 13:00:39 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1  Get 938487803632438324 42}} 34 1 false [] 0 0}
2025/01/04 13:00:39 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1 a4hHhOEl9b-6SrOdUx2_ Append 938487803632438324 43}} 35 1 false [] 0 0}
2025/01/04 13:00:39 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {1 a4hHhOEl9b-6SrOdUx2_ Append 938487803632438324 43}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:39 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1 a4hHhOEl9b-6SrOdUx2_ Append 938487803632438324 43}} 35 1 false [] 0 0}
2025/01/04 13:00:39 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc0000ebcc0 1:0xc0000ebcd0 2:0xc0000ebce0 3:0xc0000ebcf0 4:0xc0000ebd00 5:0xc0000ebd10 6:0xc0000ebd20 7:0xc0000ebd30 8:0xc0000ebd40 9:0xc0000ebd50] when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:39 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc00042d850 1:0xc00042c300 2:0xc0003530f0 3:0xc00042c2f0 4:0xc000353100 5:0xc0000eb570 6:0xc0000eb580 7:0xc0000eb590 8:0xc0000eb5a0 9:0xc0000eb5b0] when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:39 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [0 3 4 1 2]}} 36 1 false [] 0 0}
2025/01/04 13:00:39 {Node 1}{Group 102}'s shards status are map[0:0xc0000ebcc0 1:0xc0000ebcd0 2:0xc0000ebce0 3:0xc0000ebcf0 4:0xc0000ebd00 5:0xc0000ebd10 6:0xc0000ebd20 7:0xc0000ebd30 8:0xc0000ebd40 9:0xc0000ebd50] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 3 4 1 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:39 {Node 1}{Group 102}'s shards status are map[0:0xc000148bc0 1:0xc000148bf0 2:0xc000148c00 3:0xc000148bd0 4:0xc000148be0 5:0xc0000ebd10 6:0xc0000ebd20 7:0xc0000ebd30 8:0xc0000ebd40 9:0xc0000ebd50] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 3 4 1 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:39 {Node 1}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {6 [0 3 4 1 2]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:39 {Node 1}{Group 102} processes GCTaskRequest ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 3 4 1 2]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:00:39 {Node 2}{Group 101} deletes shards [0 3 4 1 2] in remote group successfully when currentConfigNum is 6
2025/01/04 13:00:39 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [0 3 4 1 2]}} 36 1 false [] 0 0}
2025/01/04 13:00:39 {Node 2}{Group 102}'s shards status are map[0:0xc0001ba130 1:0xc0001ba140 2:0xc0001ba150 3:0xc0001ba160 4:0xc0001ba170 5:0xc0001ba180 6:0xc0001ba190 7:0xc0001ba1a0 8:0xc0001ba1b0 9:0xc0001ba1c0] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 3 4 1 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:39 {Node 2}{Group 102}'s shards status are map[0:0xc0001495c0 1:0xc0001495f0 2:0xc000149600 3:0xc0001495d0 4:0xc0001495e0 5:0xc0001ba180 6:0xc0001ba190 7:0xc0001ba1a0 8:0xc0001ba1b0 9:0xc0001ba1c0] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 3 4 1 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:39 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [0 3 4 1 2]}} 14 1 false [] 0 0}
2025/01/04 13:00:39 {Node 2}{Group 101}'s shards status are map[0:0xc00042d850 1:0xc00042c300 2:0xc0003530f0 3:0xc00042c2f0 4:0xc000353100 5:0xc0000eb570 6:0xc0000eb580 7:0xc0000eb590 8:0xc0000eb5a0 9:0xc0000eb5b0] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 3 4 1 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:39 {Node 2}{Group 101}'s shards status are map[0:0xc00042d850 1:0xc00042c300 2:0xc0003530f0 3:0xc00042c2f0 4:0xc000353100 5:0xc0000eb570 6:0xc0000eb580 7:0xc0000eb590 8:0xc0000eb5a0 9:0xc0000eb5b0] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 3 4 1 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:39 {Node 2}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {6 [0 3 4 1 2]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:39 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [0 3 4 1 2]}} 14 1 false [] 0 0}
2025/01/04 13:00:39 {Node 1}{Group 101}'s shards status are map[0:0xc0001bacd0 1:0xc00042c400 2:0xc00036fca0 3:0xc00042c3f0 4:0xc00036fcb0 5:0xc0000eb1a0 6:0xc0000eb1b0 7:0xc0000eb1c0 8:0xc0000eb1d0 9:0xc0000eb1e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 3 4 1 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:39 {Node 1}{Group 101}'s shards status are map[0:0xc0001bacd0 1:0xc00042c400 2:0xc00036fca0 3:0xc00042c3f0 4:0xc00036fcb0 5:0xc0000eb1a0 6:0xc0000eb1b0 7:0xc0000eb1c0 8:0xc0000eb1d0 9:0xc0000eb1e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 3 4 1 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:39 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2  Get 938487803632438324 44}} 15 1 false [] 0 0}
2025/01/04 13:00:39 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {2  Get 938487803632438324 44}} with CommandReply CommandReply{Err: OK, Value: JUXLKk3BOuMoNbAkQ2ZFWfCsHZ5gGrKs_-WaVIXD}
2025/01/04 13:00:39 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2  Get 938487803632438324 44}} 15 1 false [] 0 0}
2025/01/04 13:00:39 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2 5Vg-WGd-fBKfZFH3XpGM Append 938487803632438324 45}} 16 1 false [] 0 0}
2025/01/04 13:00:39 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {2 5Vg-WGd-fBKfZFH3XpGM Append 938487803632438324 45}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:39 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2 5Vg-WGd-fBKfZFH3XpGM Append 938487803632438324 45}} 16 1 false [] 0 0}
2025/01/04 13:00:39 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3  Get 938487803632438324 46}} 17 1 false [] 0 0}
2025/01/04 13:00:39 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {3  Get 938487803632438324 46}} with CommandReply CommandReply{Err: OK, Value: dvBkqjIinHA8vlaPNC1zaO7kGzGzYTWivE74zHbt}
2025/01/04 13:00:39 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3  Get 938487803632438324 46}} 17 1 false [] 0 0}
2025/01/04 13:00:39 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3 DIUsryUA2DyzZss31D_w Append 938487803632438324 47}} 18 1 false [] 0 0}
2025/01/04 13:00:39 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {3 DIUsryUA2DyzZss31D_w Append 938487803632438324 47}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:39 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3 DIUsryUA2DyzZss31D_w Append 938487803632438324 47}} 18 1 false [] 0 0}
2025/01/04 13:00:39 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 938487803632438324 48}} 19 1 false [] 0 0}
2025/01/04 13:00:39 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 938487803632438324 48}} 19 1 false [] 0 0}
2025/01/04 13:00:39 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {4  Get 938487803632438324 48}} with CommandReply CommandReply{Err: OK, Value: _hkoikZ_Bq1_Fku53MJGe8ZwOWxQ6uUNCo9ecbq2}
2025/01/04 13:00:39 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4 U4tXmtMt-5v-gXZfIQ0Q Append 938487803632438324 49}} 20 1 false [] 0 0}
2025/01/04 13:00:39 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {4 U4tXmtMt-5v-gXZfIQ0Q Append 938487803632438324 49}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:39 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4 U4tXmtMt-5v-gXZfIQ0Q Append 938487803632438324 49}} 20 1 false [] 0 0}
2025/01/04 13:00:40 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5  Get 938487803632438324 50}} 21 1 false [] 0 0}
2025/01/04 13:00:40 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {5  Get 938487803632438324 50}} with CommandReply CommandReply{Err: OK, Value: na9VNUsw4Wxr-KaL86RECpQ-5KfopCUx0j5flFeO}
2025/01/04 13:00:40 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5  Get 938487803632438324 50}} 21 1 false [] 0 0}
2025/01/04 13:00:40 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 dv21oXng2PsWny310JMW Append 938487803632438324 51}} 22 1 false [] 0 0}
2025/01/04 13:00:40 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {5 dv21oXng2PsWny310JMW Append 938487803632438324 51}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:40 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 dv21oXng2PsWny310JMW Append 938487803632438324 51}} 22 1 false [] 0 0}
2025/01/04 13:00:40 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 938487803632438324 52}} 23 1 false [] 0 0}
2025/01/04 13:00:40 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {6  Get 938487803632438324 52}} with CommandReply CommandReply{Err: OK, Value: -x-wca4aWAAG7KArRf-WKe8E5_BGELKt_gSoQe_a}
2025/01/04 13:00:40 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 938487803632438324 52}} 23 1 false [] 0 0}
2025/01/04 13:00:40 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 Vl1y0cSJsqiD5I9Uimv9 Append 938487803632438324 53}} 24 1 false [] 0 0}
2025/01/04 13:00:40 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {6 Vl1y0cSJsqiD5I9Uimv9 Append 938487803632438324 53}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:40 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 Vl1y0cSJsqiD5I9Uimv9 Append 938487803632438324 53}} 24 1 false [] 0 0}
2025/01/04 13:00:40 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 938487803632438324 54}} 37 1 false [] 0 0}
2025/01/04 13:00:40 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {7  Get 938487803632438324 54}} with CommandReply CommandReply{Err: OK, Value: GCDmFy1_xGkSRUaQdxWky9P1iKkg33fbrx2ZNdxN}
2025/01/04 13:00:40 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 938487803632438324 54}} 37 1 false [] 0 0}
2025/01/04 13:00:40 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 qkJRIVEb4i_XRpP_8ns- Append 938487803632438324 55}} 38 1 false [] 0 0}
2025/01/04 13:00:40 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {7 qkJRIVEb4i_XRpP_8ns- Append 938487803632438324 55}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:40 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 qkJRIVEb4i_XRpP_8ns- Append 938487803632438324 55}} 38 1 false [] 0 0}
2025/01/04 13:00:40 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 938487803632438324 56}} 39 1 false [] 0 0}
2025/01/04 13:00:40 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {8  Get 938487803632438324 56}} with CommandReply CommandReply{Err: OK, Value: _on9Br71TdxVg4731NvExUzo2KPF5rWH8f2DIiWF}
2025/01/04 13:00:40 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 938487803632438324 56}} 39 1 false [] 0 0}
2025/01/04 13:00:40 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 mfeksU_7B4qK5piEuZS6 Append 938487803632438324 57}} 40 1 false [] 0 0}
2025/01/04 13:00:40 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {8 mfeksU_7B4qK5piEuZS6 Append 938487803632438324 57}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:40 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 mfeksU_7B4qK5piEuZS6 Append 938487803632438324 57}} 40 1 false [] 0 0}
2025/01/04 13:00:40 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 938487803632438324 58}} 41 1 false [] 0 0}
2025/01/04 13:00:40 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {9  Get 938487803632438324 58}} with CommandReply CommandReply{Err: OK, Value: Hryra8dP9rT_qgveY4sNtm-2_oPkrLjreePbeKEf}
2025/01/04 13:00:40 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 938487803632438324 58}} 41 1 false [] 0 0}
2025/01/04 13:00:40 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 sxd5Rf99DkYG36g9D0rh Append 938487803632438324 59}} 42 1 false [] 0 0}
2025/01/04 13:00:40 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {9 sxd5Rf99DkYG36g9D0rh Append 938487803632438324 59}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:40 {Node 0}{Group 100} started
2025/01/04 13:00:40 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 sxd5Rf99DkYG36g9D0rh Append 938487803632438324 59}} 42 1 false [] 0 0}
2025/01/04 13:00:40 {Node 0}{Group 101} started
2025/01/04 13:00:40 {Node 0}{Group 102} started
2025/01/04 13:00:40 {Node 0}{Group 101} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 71 255 138 1 10 1 10 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 1 1 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 113 255 138 1 12 1 10 255 202 255 202 255 202 255 202 255 202 255 204 255 204 255 204 255 204 255 204 1 2 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 0 15 255 165 4 1 2 255 166 0 1 4 1 255 162 0 0 31 255 161 3 1 2 255 162 0 1 2 1 2 75 86 1 255 164 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 163 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 164 0 1 12 1 12 0 0 254 1 63 255 166 0 10 0 1 1 1 50 60 74 85 88 76 75 107 51 66 79 117 77 111 78 98 65 107 81 50 90 70 87 102 67 115 72 90 53 103 71 114 75 115 95 45 87 97 86 73 88 68 53 86 103 45 87 71 100 45 102 66 75 102 90 70 72 51 88 112 71 77 0 6 1 1 1 53 40 110 97 57 86 78 85 115 119 52 87 120 114 45 75 97 76 56 54 82 69 67 112 81 45 53 75 102 111 112 67 85 120 48 106 53 102 108 70 101 79 0 10 1 0 0 2 1 1 1 51 60 100 118 66 107 113 106 73 105 110 72 65 56 118 108 97 80 78 67 49 122 97 79 55 107 71 122 71 122 89 84 87 105 118 69 55 52 122 72 98 116 68 73 85 115 114 121 85 65 50 68 121 122 90 115 115 51 49 68 95 119 0 4 1 1 1 52 60 95 104 107 111 105 107 90 95 66 113 49 95 70 107 117 53 51 77 74 71 101 56 90 119 79 87 120 81 54 117 85 78 67 111 57 101 99 98 113 50 85 52 116 88 109 116 77 116 45 53 118 45 103 88 90 102 73 81 48 81 0 8 1 1 1 54 40 45 120 45 119 99 97 52 97 87 65 65 71 55 75 65 114 82 102 45 87 75 101 56 69 53 95 66 71 69 76 75 116 95 103 83 111 81 101 95 97 0 12 1 0 0 14 1 0 0 16 1 0 0 18 1 0 0 15 255 169 4 1 2 255 170 0 1 4 1 255 168 0 0 51 255 167 3 1 2 255 168 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 160 0 0 0 44 255 159 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 160 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 22 255 170 0 1 248 26 12 91 94 195 24 152 104 1 98 1 1 2 79 75 0 0] 1 21}
2025/01/04 13:00:40 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 dv21oXng2PsWny310JMW Append 938487803632438324 51}} 22 1 false [] 0 0}
2025/01/04 13:00:40 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 938487803632438324 52}} 23 1 false [] 0 0}
2025/01/04 13:00:40 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 Vl1y0cSJsqiD5I9Uimv9 Append 938487803632438324 53}} 24 1 false [] 0 0}
2025/01/04 13:00:40 {Node 0}{Group 102} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 71 255 138 1 10 1 10 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 1 1 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 113 255 138 1 12 1 10 255 202 255 202 255 202 255 202 255 202 255 204 255 204 255 204 255 204 255 204 1 2 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 0 15 255 165 4 1 2 255 166 0 1 4 1 255 162 0 0 31 255 161 3 1 2 255 162 0 1 2 1 2 75 86 1 255 164 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 163 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 164 0 1 12 1 12 0 0 254 1 63 255 166 0 10 18 1 1 1 49 60 119 113 72 87 98 109 110 85 109 117 105 49 121 65 52 105 116 107 76 50 70 104 103 114 67 81 57 67 74 76 68 74 101 113 82 56 66 80 117 69 97 52 104 72 104 79 69 108 57 98 45 54 83 114 79 100 85 120 50 95 0 2 1 0 0 4 1 0 0 6 1 0 0 8 1 0 0 10 1 1 1 55 60 71 67 68 109 70 121 49 95 120 71 107 83 82 85 97 81 100 120 87 107 121 57 80 49 105 75 107 103 51 51 102 98 114 120 50 90 78 100 120 78 113 107 74 82 73 86 69 98 52 105 95 88 82 112 80 95 56 110 115 45 0 12 1 1 1 56 40 95 111 110 57 66 114 55 49 84 100 120 86 103 52 55 51 49 78 118 69 120 85 122 111 50 75 80 70 53 114 87 72 56 102 50 68 73 105 87 70 0 14 1 1 1 57 40 72 114 121 114 97 56 100 80 57 114 84 95 113 103 118 101 89 52 115 78 116 109 45 50 95 111 80 107 114 76 106 114 101 101 80 98 101 75 69 102 0 0 1 0 0 16 1 1 1 48 60 104 116 112 97 45 108 104 84 118 113 120 76 75 74 90 69 48 100 108 108 52 115 45 104 48 113 56 82 76 69 105 110 54 84 45 65 117 114 118 77 104 115 101 71 119 84 101 73 79 56 51 102 88 121 87 103 82 84 121 120 0 15 255 169 4 1 2 255 170 0 1 4 1 255 168 0 0 51 255 167 3 1 2 255 168 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 160 0 0 0 44 255 159 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 160 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 22 255 170 0 1 248 26 12 91 94 195 24 152 104 1 110 1 1 2 79 75 0 0] 1 39}
2025/01/04 13:00:40 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 mfeksU_7B4qK5piEuZS6 Append 938487803632438324 57}} 40 1 false [] 0 0}
2025/01/04 13:00:40 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 938487803632438324 58}} 41 1 false [] 0 0}
2025/01/04 13:00:40 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 sxd5Rf99DkYG36g9D0rh Append 938487803632438324 59}} 42 1 false [] 0 0}
2025/01/04 13:00:40 {Node 0}{Group 100} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 255 155 255 138 1 6 1 10 255 204 255 202 255 202 255 202 255 202 255 204 255 204 255 200 255 200 255 200 1 3 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 0 113 255 138 1 8 1 10 255 204 255 200 255 204 255 200 255 204 255 204 255 204 255 200 255 200 255 200 1 2 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 15 255 165 4 1 2 255 166 0 1 4 1 255 162 0 0 31 255 161 3 1 2 255 162 0 1 2 1 2 75 86 1 255 164 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 163 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 164 0 1 12 1 12 0 0 255 203 255 166 0 10 18 1 1 1 49 40 119 113 72 87 98 109 110 85 109 117 105 49 121 65 52 105 116 107 76 50 70 104 103 114 67 81 57 67 74 76 68 74 101 113 82 56 66 80 117 69 0 4 1 0 0 6 1 1 1 53 20 110 97 57 86 78 85 115 119 52 87 120 114 45 75 97 76 56 54 82 69 1 3 0 10 1 0 0 12 1 0 0 16 1 1 1 48 40 104 116 112 97 45 108 104 84 118 113 120 76 75 74 90 69 48 100 108 108 52 115 45 104 48 113 56 82 76 69 105 110 54 84 45 65 117 114 118 77 0 0 1 0 0 2 1 1 1 51 20 100 118 66 107 113 106 73 105 110 72 65 56 118 108 97 80 78 67 49 122 1 3 0 8 1 0 0 14 1 1 1 57 20 72 114 121 114 97 56 100 80 57 114 84 95 113 103 118 101 89 52 115 78 0 15 255 169 4 1 2 255 170 0 1 4 1 255 168 0 0 51 255 167 3 1 2 255 168 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 160 0 0 0 44 255 159 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 160 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 22 255 170 0 1 248 26 12 91 94 195 24 152 104 1 46 1 1 2 79 75 0 0] 1 32}
2025/01/04 13:00:40 {Node 0}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [3 1]}} 33 1 false [] 0 0}
2025/01/04 13:00:40 {Node 0}{Group 100} discards outdated shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:00:40 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 34 1 false [] 0 0}
2025/01/04 13:00:40 {Node 0}{Group 100} discards outdated configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:00:40 {Node 0}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [7 1 3 8 9]}} 35 1 false [] 0 0}
2025/01/04 13:00:40 {Node 0}{Group 100} discards outdated shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [7 1 3 8 9]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:00:40 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 36 1 false [] 0 0}
2025/01/04 13:00:40 {Node 0}{Group 100} discards outdated configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
panic: test timed out after 30s
	running tests:
		TestMissChange5B (30s)

goroutine 17839 [running]:
testing.(*M).startAlarm.func1()
	/usr/local/go/src/testing/testing.go:2373 +0x385
created by time.goFunc
	/usr/local/go/src/time/sleep.go:215 +0x2d

goroutine 1 [chan receive]:
testing.(*T).Run(0xc000096b60, {0x692c32?, 0x0?}, 0x6aa390)
	/usr/local/go/src/testing/testing.go:1751 +0x3ab
testing.runTests.func1(0xc000096b60)
	/usr/local/go/src/testing/testing.go:2168 +0x37
testing.tRunner(0xc000096b60, 0xc0000b3c70)
	/usr/local/go/src/testing/testing.go:1690 +0xf4
testing.runTests(0xc000010408, {0x87a3c0, 0xe, 0xe}, {0x471ad0?, 0x47173a?, 0x87f260?})
	/usr/local/go/src/testing/testing.go:2166 +0x43d
testing.(*M).Run(0xc000098140)
	/usr/local/go/src/testing/testing.go:2034 +0x64a
main.main()
	_testmain.go:71 +0x9b

goroutine 6 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007b660, {0x69423c?, 0xc00027d4f0?}, {0x638000, 0xc00027d4f0}, {0x64d140, 0xc00011c5b0})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/shardctrler.(*Clerk).Command(0xc0001af080, 0xc00027d4f0)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:73 +0xc5
6.5840/shardctrler.(*Clerk).Query(...)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:60
6.5840/shardkv.(*Clerk).Command(0xc0000f25a0, 0xc000404c40)
	/home/ubuntu/my_6.5840/src/shardkv/client.go:108 +0x146
6.5840/shardkv.(*Clerk).Get(...)
	/home/ubuntu/my_6.5840/src/shardkv/client.go:73
6.5840/shardkv.check(0xc000096d00, 0xc0000f25a0, {0x69a869, 0x1}, {0xc00051b500, 0x3c})
	/home/ubuntu/my_6.5840/src/shardkv/test_test.go:17 +0x95
6.5840/shardkv.TestMissChange5B(0xc000096d00)
	/home/ubuntu/my_6.5840/src/shardkv/test_test.go:351 +0x7b5
testing.tRunner(0xc000096d00, 0x6aa390)
	/usr/local/go/src/testing/testing.go:1690 +0xf4
created by testing.(*T).Run in goroutine 1
	/usr/local/go/src/testing/testing.go:1743 +0x390

goroutine 7 [select]:
6.5840/labrpc.MakeNetwork.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:160 +0xea
created by 6.5840/labrpc.MakeNetwork in goroutine 6
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:158 +0x196

goroutine 8 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0x0?, 0x30?, 0x477d32?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc0000d8120)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).ticker(0xc0000d8120)
	/home/ubuntu/my_6.5840/src/raft/raft.go:459 +0x5a
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 9 [runnable]:
sync.runtime_notifyListWait(0xc000015750, 0x1f1)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0000d8120?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000d8120)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 10 [chan receive]:
6.5840/shardctrler.(*ShardCtrler).applier(0xc00007c300)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:70 +0x87
created by 6.5840/shardctrler.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:62 +0x28a

goroutine 11 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0x0?, 0x30?, 0x477d32?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc0000d8240)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).ticker(0xc0000d8240)
	/home/ubuntu/my_6.5840/src/raft/raft.go:459 +0x5a
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 12 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0xc000038008?, 0xe0?, 0x475285?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc0000d8240)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(0xc000015c10?)
	/usr/local/go/src/sync/mutex.go:92 +0x32
sync.(*Cond).Wait(0xc0000d8240?)
	/usr/local/go/src/sync/cond.go:72 +0x97
6.5840/raft.(*Raft).applyLog(0xc0000d8240)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 13 [chan receive]:
6.5840/shardctrler.(*ShardCtrler).applier(0xc00007c780)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:70 +0x87
created by 6.5840/shardctrler.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:62 +0x28a

goroutine 14 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0000d8360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 15 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000015dd0, 0x1ee)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000171e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000d8360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 16 [chan receive]:
6.5840/shardctrler.(*ShardCtrler).applier(0xc00007c9c0)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:70 +0x87
created by 6.5840/shardctrler.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:62 +0x28a

goroutine 18 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000e8150, 0x15)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000057e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000d8480)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 19 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000ee000)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 17878 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0x693bbf?, 0x12?, 0x6f8478?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc0000d8360)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).sendEntries(0xc0000d8360, 0x0, 0xc000597140)
	/home/ubuntu/my_6.5840/src/raft/raft.go:723 +0xf5
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 14
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 24 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0000d86c0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 25 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000e8310, 0x22)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0000fb690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000d86c0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 26 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000ee160)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 27 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000ee160, 0xc0000ea670, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 28 [semacquire]:
6.5840/shardkv.(*ShardKV).migrationAction(0xc0000ee160)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:354 +0x25c
6.5840/shardkv.(*ShardKV).Monitor(0xc0000ee160, 0xc0000ea680, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:383 +0x5f
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 29 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000ee160, 0xc0000ea690, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 30 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000ee160, 0xc0000ea6a0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 31 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0000d8a20)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 32 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000e84d0, 0x22)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0000f6e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000d8a20)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 33 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000ee2c0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 34 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000ee2c0, 0xc0000eaa60, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 35 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000ee2c0, 0xc0000eaa70, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 36 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000ee2c0, 0xc0000eaa80, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 37 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000ee2c0, 0xc0000eaa90, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 5254 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000120000, 0xc0003249c0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 39 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000e8690, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000194690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000d8c60)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 40 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000ee420)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 5246 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc00041cc60)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 45 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0000d8ea0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 46 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000e8850, 0x18)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00018fe90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000d8ea0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 47 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000ee580)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 48 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000ee580, 0xc0000eb200, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 49 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000ee580, 0xc0000eb210, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 50 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000ee580, 0xc0000eb220, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 51 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000ee580, 0xc0000eb230, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 52 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0000d9200)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 53 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000e8a10, 0x18)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00019d690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000d9200)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 54 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000ee6e0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 55 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007afc0, {0x69423c?, 0xc00027d4a0?}, {0x638000, 0xc00027d4a0}, {0x64d140, 0xc00011c540})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/shardctrler.(*Clerk).Command(0xc0001858c0, 0xc00027d4a0)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:73 +0xc5
6.5840/shardctrler.(*Clerk).Query(...)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:60
6.5840/shardkv.(*ShardKV).configurationAction(0xc0000ee6e0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:341 +0x245
6.5840/shardkv.(*ShardKV).Monitor(0xc0000ee6e0, 0xc0000eb5d0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:383 +0x5f
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 56 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000ee6e0, 0xc0000eb5e0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 57 [semacquire]:
6.5840/shardkv.(*ShardKV).gcAction(0xc0000ee6e0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:222 +0x25c
6.5840/shardkv.(*ShardKV).Monitor(0xc0000ee6e0, 0xc0000eb5f0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:383 +0x5f
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 58 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000ee6e0, 0xc0000eb600, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 60 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000e8bd0, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000198e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000d9440)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 61 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000ee840)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 17921 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0x0?, 0x0?, 0x0?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc0000d8120)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).AppendEntries(0xc0000d8120, 0xc000351a80, 0xc0004fb650)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1052 +0x54
reflect.Value.call({0xc0000b6500?, 0xc00005c5f8?, 0xc00028db18?}, {0x68fc67, 0x4}, {0xc00028dd20, 0x3, 0xc00028db48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc0000b6500?, 0xc00005c5f8?, 0xc00005d2a0?}, {0xc00028dd20?, 0x68a260?, 0xc000193c38?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015a00, {0x693bc4, 0xd}, {{0x63de40, 0xc00002daf0}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0002d9600, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc0000109a8, {{0x63de40, 0xc00002daf0}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0002d9600, 0x1de, 0x200}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 17840
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 5252 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000404650, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000465810?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0002865a0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 66 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0000d9680)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 67 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000e8d90, 0x27)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0001b6690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000d9680)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 68 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000ee9a0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 69 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000ee9a0, 0xc0000ebd70, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 70 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000ee9a0, 0xc0000ebd80, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 71 [runnable]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000ee9a0, 0xc0000ebd90, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 72 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000ee9a0, 0xc0000ebda0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 73 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0000d98c0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 74 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000e8f50, 0x27)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000453e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000d98c0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 75 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000eeb00)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 76 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000eeb00, 0xc0001ba1e0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 77 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000eeb00, 0xc0001ba1f0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 78 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000eeb00, 0xc0001ba200, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 79 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000eeb00, 0xc0001ba210, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 5247 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00041cc60, 0xc0003243a0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 5257 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000120000, 0xc0003249f0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 5255 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000120000, 0xc0003249d0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 5244 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0005639e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 17902 [select]:
6.5840/labrpc.(*Network).processReq(0xc0000b6320, {{0x63de40, 0xc0001ba330}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0002dc460, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 17898 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0x0?, 0x0?, 0x0?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc0000d8240)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).AppendEntries(0xc0000d8240, 0xc00031bc40, 0xc000585f20)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1052 +0x54
reflect.Value.call({0xc0000b6500?, 0xc00005c7c8?, 0xc000577b18?}, {0x68fc67, 0x4}, {0xc000577d20, 0x3, 0xc000577b48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc0000b6500?, 0xc00005c7c8?, 0xc0001fcde0?}, {0xc000577d20?, 0x68a260?, 0xc00019dc38?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015cc0, {0x693bc4, 0xd}, {{0x63de40, 0xc00002db30}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0000c7600, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc0000109f0, {{0x63de40, 0xc00002db30}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0000c7600, 0xcb, 0x100}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 17897
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 5250 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00041cc60, 0xc0003243d0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 5251 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0002865a0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 5245 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000596250, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000465760?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0005639e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 5217 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0002ef9e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 17901 [select]:
6.5840/labrpc.(*Network).processReq(0xc0000b6320, {{0x63de40, 0xc0000eb410}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0002dc380, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 5249 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00041cc60, 0xc0003243c0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 5222 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00041c9a0, 0xc0003527c0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 5223 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00041c9a0, 0xc0003527d0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 5221 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc00041c9a0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 5248 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00041cc60, 0xc0003243b0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 17903 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0x5f6fc5?, 0x9d?, 0xc00031ea48?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc0000d8360)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).Start(0xc0000d8360, {0x657600, 0xc00027d6d0})
	/home/ubuntu/my_6.5840/src/raft/raft.go:411 +0x79
6.5840/shardctrler.(*ShardCtrler).Command(0xc00007c9c0, 0xc00027d6d0, 0xc00031dab0)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:149 +0x10b
reflect.Value.call({0xc0000b63c0?, 0xc00005c828?, 0xc0007e7b18?}, {0x68fc67, 0x4}, {0xc0007e7d20, 0x3, 0xc0007e7b48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc0000b63c0?, 0xc00005c828?, 0xc0001fd118?}, {0xc0007e7d20?, 0x68a260?, 0xc00019ec38?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015e00, {0x694248, 0x7}, {{0x63de40, 0xc0001ba330}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0002dc460, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc000010a38, {{0x63de40, 0xc0001ba330}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0002dc460, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 17902
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 17904 [runnable]:
reflect.Value.NumField({0x657600?, 0xc0001a0d70?, 0x19?})
	/usr/local/go/src/reflect/value.go:2110 +0xa8
encoding/gob.(*Encoder).encodeStruct(0xc00032f5e0, 0xc000400120, 0xc00051c708, {0x657600?, 0xc0001a0d70?, 0x407b0b?})
	/usr/local/go/src/encoding/gob/encode.go:315 +0x1f3
encoding/gob.(*Encoder).encode(0xc00032f5e0, 0xc000400120, {0x657600?, 0xc0001a0d70?, 0xc000015700?}, 0xc000015700)
	/usr/local/go/src/encoding/gob/encode.go:666 +0x1a5
encoding/gob.(*Encoder).encodeInterface(0xc00032f5e0, 0xc00032f618, {0x649ba0?, 0xc000128478?, 0x5f0274?})
	/usr/local/go/src/encoding/gob/encode.go:419 +0x86b
encoding/gob.encOpFor.func5(0x66a4c0?, 0xc0001e0f00, {0x649ba0?, 0xc000128478?, 0x6f8478?})
	/usr/local/go/src/encoding/gob/encode.go:554 +0xcf
encoding/gob.(*Encoder).encodeStruct(0xc00032f5e0, 0xc00032f618, 0xc0005a6d38, {0x66a4c0?, 0xc000128468?, 0x96?})
	/usr/local/go/src/encoding/gob/encode.go:328 +0x2be
encoding/gob.encOpFor.func4(0x63c640?, 0xc0001e0ec0, {0x66a4c0?, 0xc000128468?, 0x199?})
	/usr/local/go/src/encoding/gob/encode.go:546 +0x6e
encoding/gob.(*Encoder).encodeArray(0xc0001e0e40?, 0xc00014fbc0?, {0x63c640?, 0xc0001e7c80?, 0x1000046d537?}, 0xc0001497c0, 0x0, 0x318, 0x0)
	/usr/local/go/src/encoding/gob/encode.go:351 +0x4ba
encoding/gob.encOpFor.func1(0x63c640?, 0xc0001e0e40, {0x63c640?, 0xc0001e7c80?, 0xc00034f8f0?})
	/usr/local/go/src/encoding/gob/encode.go:516 +0x139
encoding/gob.(*Encoder).encodeSingle(0xc000151b80?, 0x0?, 0x6f8478?, {0x63c640?, 0xc0001e7c80?, 0x407b0b?})
	/usr/local/go/src/encoding/gob/encode.go:301 +0x1f1
encoding/gob.(*Encoder).encode(0xc00032f5e0, 0xc00032f618, {0x63c640?, 0xc0001e7c80?, 0xc000151b80?}, 0xc000151b80)
	/usr/local/go/src/encoding/gob/encode.go:668 +0x1c8
encoding/gob.(*Encoder).EncodeValue(0xc00032f5e0, {0x63c640?, 0xc0001e7c80?, 0x63c640?})
	/usr/local/go/src/encoding/gob/encoder.go:251 +0x405
encoding/gob.(*Encoder).Encode(0x63c640?, {0x63c640?, 0xc0001e7c80?})
	/usr/local/go/src/encoding/gob/encoder.go:176 +0x74
6.5840/labgob.(*LabEncoder).Encode(0xc0001fd9b8, {0x63c640, 0xc0001e7c80})
	/home/ubuntu/my_6.5840/src/labgob/labgob.go:34 +0x3f
6.5840/raft.(*Raft).persist(0xc0000d8360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:170 +0xce
6.5840/raft.(*Raft).Start(0xc0000d8360, {0x657600, 0xc00027d630})
	/home/ubuntu/my_6.5840/src/raft/raft.go:420 +0x1c5
6.5840/shardctrler.(*ShardCtrler).Command(0xc00007c9c0, 0xc00027d630, 0xc00031d500)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:149 +0x10b
reflect.Value.call({0xc0000b63c0?, 0xc00005c828?, 0xc0007d7b18?}, {0x68fc67, 0x4}, {0xc0007d7d20, 0x3, 0xc0007d7b48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc0000b63c0?, 0xc00005c828?, 0xc0001fd128?}, {0xc0007d7d20?, 0x68a260?, 0xc00019ec38?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015e00, {0x694248, 0x7}, {{0x63de40, 0xc0000eb410}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0002dc380, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc000010a38, {{0x63de40, 0xc0000eb410}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0002dc380, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 17901
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 17840 [select]:
6.5840/labrpc.(*Network).processReq(0xc0000b6320, {{0x63de40, 0xc00002daf0}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0002d9600, 0x1de, 0x200}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 5256 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000120000, 0xc0003249e0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 5218 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000462250, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000304160?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0002ef9e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 5225 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00041c9a0, 0xc0003527f0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 5253 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc000120000)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 5224 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00041c9a0, 0xc0003527e0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 17838 [runnable]:
encoding/gob.(*Encoder).encodeArray(0xc000350fc0?, 0xc00014fbc0?, {0x63c640?, 0xc00025eb88?, 0x1000046d537?}, 0xc0001497c0, 0x0, 0x317, 0x0)
	/usr/local/go/src/encoding/gob/encode.go:351 +0x4a4
encoding/gob.encOpFor.func1(0x63c640?, 0xc000350fc0, {0x63c640?, 0xc00025eb88?, 0xc00034f8f0?})
	/usr/local/go/src/encoding/gob/encode.go:516 +0x139
encoding/gob.(*Encoder).encodeSingle(0xc000151b80?, 0x0?, 0x6f8478?, {0x63c640?, 0xc00025eb88?, 0x407b0b?})
	/usr/local/go/src/encoding/gob/encode.go:301 +0x1f1
encoding/gob.(*Encoder).encode(0xc000098820, 0xc000098858, {0x63c640?, 0xc00025eb88?, 0xc000151b80?}, 0xc000151b80)
	/usr/local/go/src/encoding/gob/encode.go:668 +0x1c8
encoding/gob.(*Encoder).EncodeValue(0xc000098820, {0x63c640?, 0xc00025eb88?, 0x63c640?})
	/usr/local/go/src/encoding/gob/encoder.go:251 +0x405
encoding/gob.(*Encoder).Encode(0x63c640?, {0x63c640?, 0xc00025eb88?})
	/usr/local/go/src/encoding/gob/encoder.go:176 +0x74
6.5840/labgob.(*LabEncoder).Encode(0xc00005d288, {0x63c640, 0xc00025eb88})
	/home/ubuntu/my_6.5840/src/labgob/labgob.go:34 +0x3f
6.5840/raft.(*Raft).persist(0xc0000d8240)
	/home/ubuntu/my_6.5840/src/raft/raft.go:170 +0xce
6.5840/raft.(*Raft).AppendEntries(0xc0000d8240, 0xc000350f00, 0xc0004fb230)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1105 +0x4c5
reflect.Value.call({0xc0000b6500?, 0xc00005c7c8?, 0xc0004f5b18?}, {0x68fc67, 0x4}, {0xc0004f5d20, 0x3, 0xc0004f5b48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc0000b6500?, 0xc00005c7c8?, 0xc00005d0e0?}, {0xc0004f5d20?, 0x8?, 0x41b537?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015cc0, {0x693bc4, 0xd}, {{0x63de40, 0xc00002db30}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0000c0a00, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc0000109f0, {{0x63de40, 0xc00002db30}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0000c0a00, 0xcb, 0x100}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 17837
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 17837 [select]:
6.5840/labrpc.(*Network).processReq(0xc0000b6320, {{0x63de40, 0xc00002db30}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0000c0a00, 0xcb, 0x100}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 17897 [select]:
6.5840/labrpc.(*Network).processReq(0xc0000b6320, {{0x63de40, 0xc00002db30}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0000c7600, 0xcb, 0x100}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 17895 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007a480, {0x693bbf?, 0xc000056fd0?}, {0x638280, 0xc00049fb40}, {0x63c540, 0xc0001fced0})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/raft.(*Raft).sendAppendEntries(...)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1026
6.5840/raft.(*Raft).sendEntries(0xc0000d8360, 0x0, 0xc00049fb40)
	/home/ubuntu/my_6.5840/src/raft/raft.go:721 +0xc8
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 14
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 17835 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007a480, {0x693bbf?, 0xc000057748?}, {0x638280, 0xc000350ac0}, {0x63c540, 0xc00005d290})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/raft.(*Raft).sendAppendEntries(...)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1026
6.5840/raft.(*Raft).sendEntries(0xc0000d8360, 0x0, 0xc000350ac0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:721 +0xc8
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 17879
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 17905 [select]:
6.5840/labrpc.(*Network).processReq(0xc0000b6320, {{0x63de40, 0xc00002daf0}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0001ffa00, 0x1de, 0x200}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 17906 [runnable]:
reflect.typedmemmove(0x63ae80?, 0xc000223080?, 0xc0001da708?)
	/usr/local/go/src/runtime/mbarrier.go:225 +0x2d
reflect.copyVal(0x63ae80, 0x17, 0xc0001da708)
	/usr/local/go/src/reflect/value.go:2048 +0x45
reflect.(*MapIter).Value(0xc0007d29a8)
	/usr/local/go/src/reflect/value.go:1945 +0x69
encoding/gob.(*Encoder).encodeMap(0xc0001c8960, 0xc0001c2008?, {0x64e700?, 0xc0000b75e0?, 0x63aac0?}, 0x6ab050, 0xc00007b740, 0x0, 0x0)
	/usr/local/go/src/encoding/gob/encode.go:375 +0x512
encoding/gob.encOpFor.func3(0x67e140?, 0xc000151440, {0x64e700?, 0xc0000b75e0?, 0xc0007d2ac8?})
	/usr/local/go/src/encoding/gob/encode.go:536 +0x12c
encoding/gob.(*Encoder).encodeStruct(0xc0001c8960, 0xc000262120, 0xc000011380, {0x67e140?, 0xc0000b75e0?, 0x638000?})
	/usr/local/go/src/encoding/gob/encode.go:328 +0x2be
encoding/gob.encOpFor.func4(0x67e140?, 0xc000151400, {0x67e140?, 0xc0000b75e0?, 0xc0007d2c60?})
	/usr/local/go/src/encoding/gob/encode.go:546 +0x6e
encoding/gob.(*Encoder).encodeStruct(0xc0001c8960, 0xc000262120, 0xc00051c708, {0x657600?, 0xc0000b75e0?, 0x407b0b?})
	/usr/local/go/src/encoding/gob/encode.go:328 +0x2be
encoding/gob.(*Encoder).encode(0xc0001c8960, 0xc000262120, {0x657600?, 0xc0000b75e0?, 0xc000015700?}, 0xc000015700)
	/usr/local/go/src/encoding/gob/encode.go:666 +0x1a5
encoding/gob.(*Encoder).encodeInterface(0xc0001c8960, 0xc0001c8998, {0x649ba0?, 0xc000624778?, 0x5f0274?})
	/usr/local/go/src/encoding/gob/encode.go:419 +0x86b
encoding/gob.encOpFor.func5(0x66a4c0?, 0xc000151300, {0x649ba0?, 0xc000624778?, 0x6f8478?})
	/usr/local/go/src/encoding/gob/encode.go:554 +0xcf
encoding/gob.(*Encoder).encodeStruct(0xc0001c8960, 0xc0001c8998, 0xc0005a6d38, {0x66a4c0?, 0xc000624768?, 0x96?})
	/usr/local/go/src/encoding/gob/encode.go:328 +0x2be
encoding/gob.encOpFor.func4(0x63c640?, 0xc0001512c0, {0x66a4c0?, 0xc000624768?, 0x0?})
	/usr/local/go/src/encoding/gob/encode.go:546 +0x6e
encoding/gob.(*Encoder).encodeArray(0xc000151240?, 0xc00014fbc0?, {0x63c640?, 0xc000222ff0?, 0x1000046d537?}, 0xc0001497c0, 0x0, 0x317, 0x0)
	/usr/local/go/src/encoding/gob/encode.go:351 +0x4ba
encoding/gob.encOpFor.func1(0x63c640?, 0xc000151240, {0x63c640?, 0xc000222ff0?, 0xc00034f8f0?})
	/usr/local/go/src/encoding/gob/encode.go:516 +0x139
encoding/gob.(*Encoder).encodeSingle(0xc000151b80?, 0x0?, 0x6f8478?, {0x63c640?, 0xc000222ff0?, 0x407b0b?})
	/usr/local/go/src/encoding/gob/encode.go:301 +0x1f1
encoding/gob.(*Encoder).encode(0xc0001c8960, 0xc0001c8998, {0x63c640?, 0xc000222ff0?, 0xc000151b80?}, 0xc000151b80)
	/usr/local/go/src/encoding/gob/encode.go:668 +0x1c8
encoding/gob.(*Encoder).EncodeValue(0xc0001c8960, {0x63c640?, 0xc000222ff0?, 0x63c640?})
	/usr/local/go/src/encoding/gob/encoder.go:251 +0x405
encoding/gob.(*Encoder).Encode(0x63c640?, {0x63c640?, 0xc000222ff0?})
	/usr/local/go/src/encoding/gob/encoder.go:176 +0x74
6.5840/labgob.(*LabEncoder).Encode(0xc000146b40, {0x63c640, 0xc000222ff0})
	/home/ubuntu/my_6.5840/src/labgob/labgob.go:34 +0x3f
6.5840/raft.(*Raft).persist(0xc0000d8120)
	/home/ubuntu/my_6.5840/src/raft/raft.go:170 +0xce
6.5840/raft.(*Raft).AppendEntries(0xc0000d8120, 0xc0001e02c0, 0xc0002a2c30)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1105 +0x4c5
reflect.Value.call({0xc0000b6500?, 0xc00005c5f8?, 0xc0007d3b18?}, {0x68fc67, 0x4}, {0xc0007d3d20, 0x3, 0xc0007d3b48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc0000b6500?, 0xc00005c5f8?, 0xc0001fd158?}, {0xc0007d3d20?, 0x68a260?, 0xc00019b438?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015a00, {0x693bc4, 0xd}, {{0x63de40, 0xc00002daf0}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0001ffa00, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc0000109a8, {{0x63de40, 0xc00002daf0}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0001ffa00, 0x1de, 0x200}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 17905
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 17896 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007a4a0, {0x693bbf?, 0xc0000f2480?}, {0x638280, 0xc00049fb80}, {0x63c540, 0xc0001fcdd0})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/raft.(*Raft).sendAppendEntries(...)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1026
6.5840/raft.(*Raft).sendEntries(0xc0000d8360, 0x1, 0xc00049fb80)
	/home/ubuntu/my_6.5840/src/raft/raft.go:721 +0xc8
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 14
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 17836 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007a4a0, {0x693bbf?, 0x0?}, {0x638280, 0xc000350b00}, {0x63c540, 0xc00005d0d0})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/raft.(*Raft).sendAppendEntries(...)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1026
6.5840/raft.(*Raft).sendEntries(0xc0000d8360, 0x1, 0xc000350b00)
	/home/ubuntu/my_6.5840/src/raft/raft.go:721 +0xc8
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 17879
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105
exit status 2
FAIL	6.5840/shardkv	30.208s
