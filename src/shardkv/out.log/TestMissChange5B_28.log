Test (5B): servers miss configuration changes...
2025/01/04 13:00:55 {Node 0}{Group 100} started
2025/01/04 13:00:55 {Node 1}{Group 100} started
2025/01/04 13:00:55 {Node 2}{Group 100} started
2025/01/04 13:00:55 {Node 0}{Group 101} started
2025/01/04 13:00:55 {Node 1}{Group 101} started
2025/01/04 13:00:55 {Node 2}{Group 101} started
2025/01/04 13:00:55 {Node 0}{Group 102} started
2025/01/04 13:00:55 {Node 1}{Group 102} started
2025/01/04 13:00:55 {Node 2}{Group 102} started
2025/01/04 13:00:55 {Node 2}{Group 102} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:00:55 {Node 2}{Group 102} Execute Command Command{commandType: EmptyShards, Data: <nil>} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:55 {Node 2}{Group 101} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:00:55 {Node 1}{Group 101} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:00:55 {Node 1}{Group 101} Execute Command Command{commandType: EmptyShards, Data: <nil>} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:55 {Node 0}{Group 101} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:00:55 {Node 1}{Group 102} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:00:55 {Node 0}{Group 102} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:00:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:00:55 {Node 2}{Group 100} Execute Command Command{commandType: EmptyShards, Data: <nil>} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:00:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:00:55 {Node 2}{Group 100} fetches latest configuration {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} when currentConfigNum is 0
2025/01/04 13:00:55 {Node 1}{Group 101} fetches latest configuration {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} when currentConfigNum is 0
2025/01/04 13:00:55 {Node 2}{Group 102} fetches latest configuration {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} when currentConfigNum is 0
2025/01/04 13:00:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:00:55 {Node 2}{Group 100} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:00:55 {Node 2}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:00:55 {Node 1}{Group 100} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:00:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:00:55 {Node 0}{Group 100} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:00:55 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:00:55 {Node 2}{Group 102} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:00:55 {Node 2}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:55 {Node 0}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:00:55 {Node 0}{Group 102} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:00:55 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:00:55 {Node 1}{Group 102} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:00:55 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:00:55 {Node 1}{Group 101} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:00:55 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:55 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:00:55 {Node 2}{Group 101} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:00:55 {Node 0}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:00:55 {Node 0}{Group 101} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:00:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 TkzvcWCErrzzv3SDw7CT Put 4160567821628627366 0}} 3 1 false [] 0 0}
2025/01/04 13:00:55 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {0 TkzvcWCErrzzv3SDw7CT Put 4160567821628627366 0}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 TkzvcWCErrzzv3SDw7CT Put 4160567821628627366 0}} 3 1 false [] 0 0}
2025/01/04 13:00:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 TkzvcWCErrzzv3SDw7CT Put 4160567821628627366 0}} 3 1 false [] 0 0}
2025/01/04 13:00:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 -rrxrh2Xj9piEiuvf0wP Put 4160567821628627366 1}} 4 1 false [] 0 0}
2025/01/04 13:00:55 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {1 -rrxrh2Xj9piEiuvf0wP Put 4160567821628627366 1}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 -rrxrh2Xj9piEiuvf0wP Put 4160567821628627366 1}} 4 1 false [] 0 0}
2025/01/04 13:00:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 -rrxrh2Xj9piEiuvf0wP Put 4160567821628627366 1}} 4 1 false [] 0 0}
2025/01/04 13:00:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 dsEwbCGrBDax4rNhILDR Put 4160567821628627366 2}} 5 1 false [] 0 0}
2025/01/04 13:00:55 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {2 dsEwbCGrBDax4rNhILDR Put 4160567821628627366 2}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 dsEwbCGrBDax4rNhILDR Put 4160567821628627366 2}} 5 1 false [] 0 0}
2025/01/04 13:00:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 dsEwbCGrBDax4rNhILDR Put 4160567821628627366 2}} 5 1 false [] 0 0}
2025/01/04 13:00:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 _pTUsXzaqPhOW5ZNrbq0 Put 4160567821628627366 3}} 6 1 false [] 0 0}
2025/01/04 13:00:55 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {3 _pTUsXzaqPhOW5ZNrbq0 Put 4160567821628627366 3}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 _pTUsXzaqPhOW5ZNrbq0 Put 4160567821628627366 3}} 6 1 false [] 0 0}
2025/01/04 13:00:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 _pTUsXzaqPhOW5ZNrbq0 Put 4160567821628627366 3}} 6 1 false [] 0 0}
2025/01/04 13:00:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4 f9AK5Q0QBhREOTHJU8K1 Put 4160567821628627366 4}} 7 1 false [] 0 0}
2025/01/04 13:00:55 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {4 f9AK5Q0QBhREOTHJU8K1 Put 4160567821628627366 4}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4 f9AK5Q0QBhREOTHJU8K1 Put 4160567821628627366 4}} 7 1 false [] 0 0}
2025/01/04 13:00:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4 f9AK5Q0QBhREOTHJU8K1 Put 4160567821628627366 4}} 7 1 false [] 0 0}
2025/01/04 13:00:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5 X_qtCSaq8CvtimjGKZMb Put 4160567821628627366 5}} 8 1 false [] 0 0}
2025/01/04 13:00:55 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {5 X_qtCSaq8CvtimjGKZMb Put 4160567821628627366 5}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5 X_qtCSaq8CvtimjGKZMb Put 4160567821628627366 5}} 8 1 false [] 0 0}
2025/01/04 13:00:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5 X_qtCSaq8CvtimjGKZMb Put 4160567821628627366 5}} 8 1 false [] 0 0}
2025/01/04 13:00:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6 3ujNtUktKt6o-ZU6hAaB Put 4160567821628627366 6}} 9 1 false [] 0 0}
2025/01/04 13:00:55 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {6 3ujNtUktKt6o-ZU6hAaB Put 4160567821628627366 6}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6 3ujNtUktKt6o-ZU6hAaB Put 4160567821628627366 6}} 9 1 false [] 0 0}
2025/01/04 13:00:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6 3ujNtUktKt6o-ZU6hAaB Put 4160567821628627366 6}} 9 1 false [] 0 0}
2025/01/04 13:00:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 EO2wq4uGmeaTz2Nt5_Q- Put 4160567821628627366 7}} 10 1 false [] 0 0}
2025/01/04 13:00:55 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {7 EO2wq4uGmeaTz2Nt5_Q- Put 4160567821628627366 7}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 EO2wq4uGmeaTz2Nt5_Q- Put 4160567821628627366 7}} 10 1 false [] 0 0}
2025/01/04 13:00:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 EO2wq4uGmeaTz2Nt5_Q- Put 4160567821628627366 7}} 10 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8 H0YNvrgUs2ToZPpT6LLp Put 4160567821628627366 8}} 11 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {8 H0YNvrgUs2ToZPpT6LLp Put 4160567821628627366 8}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8 H0YNvrgUs2ToZPpT6LLp Put 4160567821628627366 8}} 11 1 false [] 0 0}
2025/01/04 13:00:56 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8 H0YNvrgUs2ToZPpT6LLp Put 4160567821628627366 8}} 11 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 poNz3prmf2lXHUg3yNPr Put 4160567821628627366 9}} 12 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {9 poNz3prmf2lXHUg3yNPr Put 4160567821628627366 9}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 poNz3prmf2lXHUg3yNPr Put 4160567821628627366 9}} 12 1 false [] 0 0}
2025/01/04 13:00:56 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 poNz3prmf2lXHUg3yNPr Put 4160567821628627366 9}} 12 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 4160567821628627366 10}} 13 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {0  Get 4160567821628627366 10}} with CommandReply CommandReply{Err: OK, Value: TkzvcWCErrzzv3SDw7CT}
2025/01/04 13:00:56 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 4160567821628627366 10}} 13 1 false [] 0 0}
2025/01/04 13:00:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 4160567821628627366 10}} 13 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 4160567821628627366 11}} 14 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {1  Get 4160567821628627366 11}} with CommandReply CommandReply{Err: OK, Value: -rrxrh2Xj9piEiuvf0wP}
2025/01/04 13:00:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 4160567821628627366 11}} 14 1 false [] 0 0}
2025/01/04 13:00:56 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 4160567821628627366 11}} 14 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 4160567821628627366 12}} 15 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {2  Get 4160567821628627366 12}} with CommandReply CommandReply{Err: OK, Value: dsEwbCGrBDax4rNhILDR}
2025/01/04 13:00:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 4160567821628627366 12}} 15 1 false [] 0 0}
2025/01/04 13:00:56 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 4160567821628627366 12}} 15 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3  Get 4160567821628627366 13}} 16 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {3  Get 4160567821628627366 13}} with CommandReply CommandReply{Err: OK, Value: _pTUsXzaqPhOW5ZNrbq0}
2025/01/04 13:00:56 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3  Get 4160567821628627366 13}} 16 1 false [] 0 0}
2025/01/04 13:00:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3  Get 4160567821628627366 13}} 16 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4  Get 4160567821628627366 14}} 17 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {4  Get 4160567821628627366 14}} with CommandReply CommandReply{Err: OK, Value: f9AK5Q0QBhREOTHJU8K1}
2025/01/04 13:00:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4  Get 4160567821628627366 14}} 17 1 false [] 0 0}
2025/01/04 13:00:56 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4  Get 4160567821628627366 14}} 17 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5  Get 4160567821628627366 15}} 18 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {5  Get 4160567821628627366 15}} with CommandReply CommandReply{Err: OK, Value: X_qtCSaq8CvtimjGKZMb}
2025/01/04 13:00:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5  Get 4160567821628627366 15}} 18 1 false [] 0 0}
2025/01/04 13:00:56 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5  Get 4160567821628627366 15}} 18 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6  Get 4160567821628627366 16}} 19 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {6  Get 4160567821628627366 16}} with CommandReply CommandReply{Err: OK, Value: 3ujNtUktKt6o-ZU6hAaB}
2025/01/04 13:00:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6  Get 4160567821628627366 16}} 19 1 false [] 0 0}
2025/01/04 13:00:56 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6  Get 4160567821628627366 16}} 19 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7  Get 4160567821628627366 17}} 20 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {7  Get 4160567821628627366 17}} with CommandReply CommandReply{Err: OK, Value: EO2wq4uGmeaTz2Nt5_Q-}
2025/01/04 13:00:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7  Get 4160567821628627366 17}} 20 1 false [] 0 0}
2025/01/04 13:00:56 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7  Get 4160567821628627366 17}} 20 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8  Get 4160567821628627366 18}} 21 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {8  Get 4160567821628627366 18}} with CommandReply CommandReply{Err: OK, Value: H0YNvrgUs2ToZPpT6LLp}
2025/01/04 13:00:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8  Get 4160567821628627366 18}} 21 1 false [] 0 0}
2025/01/04 13:00:56 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8  Get 4160567821628627366 18}} 21 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4160567821628627366 19}} 22 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {9  Get 4160567821628627366 19}} with CommandReply CommandReply{Err: OK, Value: poNz3prmf2lXHUg3yNPr}
2025/01/04 13:00:56 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4160567821628627366 19}} 22 1 false [] 0 0}
2025/01/04 13:00:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4160567821628627366 19}} 22 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 102} fetches latest configuration {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} when currentConfigNum is 1
2025/01/04 13:00:56 {Node 1}{Group 101} fetches latest configuration {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} when currentConfigNum is 1
2025/01/04 13:00:56 {Node 2}{Group 100} fetches latest configuration {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} when currentConfigNum is 1
2025/01/04 13:00:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 23 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:56 {Node 2}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 23 1 false [] 0 0}
2025/01/04 13:00:56 {Node 1}{Group 100} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:56 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 102} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:56 {Node 2}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:56 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:00:56 {Node 1}{Group 101} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:56 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:56 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 101} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:56 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:00:56 {Node 1}{Group 102} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:56 {Node 1}{Group 101} starts a PullTask to get shards [0 2 4 1 3] from group 100 when config is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 4160567821628627366 20}} 24 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {0  Get 4160567821628627366 20}} with CommandReply CommandReply{Err: OK, Value: TkzvcWCErrzzv3SDw7CT}
2025/01/04 13:00:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 4160567821628627366 20}} 24 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0000fa9b0 1:0xc0000fa9c0 2:0xc0000fa9d0 3:0xc0000fa9e0 4:0xc0000fa9f0 5:0xc0000faa00 6:0xc0000faa10 7:0xc0000faa20 8:0xc0000faa30 9:0xc0000faa40] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:56 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0000fb150 1:0xc0000fb160 2:0xc0000fb170 3:0xc0000fb180 4:0xc0000fb190 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:56 {Node 2}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 2, ShardIDs: [0 2 4 1 3]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:dsEwbCGrBDax4rNhILDR] 1:map[3:_pTUsXzaqPhOW5ZNrbq0] 2:map[4:f9AK5Q0QBhREOTHJU8K1] 3:map[5:X_qtCSaq8CvtimjGKZMb] 4:map[6:3ujNtUktKt6o-ZU6hAaB]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:00:56 {Node 1}{Group 101} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:dsEwbCGrBDax4rNhILDR] 1:map[3:_pTUsXzaqPhOW5ZNrbq0] 2:map[4:f9AK5Q0QBhREOTHJU8K1] 3:map[5:X_qtCSaq8CvtimjGKZMb] 4:map[6:3ujNtUktKt6o-ZU6hAaB]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 2
2025/01/04 13:00:56 {Node 2}{Group 102} fetches latest configuration {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 2
2025/01/04 13:00:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 gZimXylsrrVScHdRVseM Append 4160567821628627366 21}} 25 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {0 gZimXylsrrVScHdRVseM Append 4160567821628627366 21}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 gZimXylsrrVScHdRVseM Append 4160567821628627366 21}} 25 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 4 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 102} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 2}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:56 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 4 1 false [] 0 0}
2025/01/04 13:00:56 {Node 1}{Group 102} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 1}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 2 map[0:map[2:dsEwbCGrBDax4rNhILDR] 1:map[3:_pTUsXzaqPhOW5ZNrbq0] 2:map[4:f9AK5Q0QBhREOTHJU8K1] 3:map[5:X_qtCSaq8CvtimjGKZMb] 4:map[6:3ujNtUktKt6o-ZU6hAaB]] map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 4 1 false [] 0 0}
2025/01/04 13:00:56 {Node 1}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:dsEwbCGrBDax4rNhILDR] 1:map[3:_pTUsXzaqPhOW5ZNrbq0] 2:map[4:f9AK5Q0QBhREOTHJU8K1] 3:map[5:X_qtCSaq8CvtimjGKZMb] 4:map[6:3ujNtUktKt6o-ZU6hAaB]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:56 {Node 1}{Group 101} Execute Command Command{commandType: InsertShards, Data: {OK 2 map[0:map[2:dsEwbCGrBDax4rNhILDR] 1:map[3:_pTUsXzaqPhOW5ZNrbq0] 2:map[4:f9AK5Q0QBhREOTHJU8K1] 3:map[5:X_qtCSaq8CvtimjGKZMb] 4:map[6:3ujNtUktKt6o-ZU6hAaB]] map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:00:56 {Node 2}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 2 map[0:map[2:dsEwbCGrBDax4rNhILDR] 1:map[3:_pTUsXzaqPhOW5ZNrbq0] 2:map[4:f9AK5Q0QBhREOTHJU8K1] 3:map[5:X_qtCSaq8CvtimjGKZMb] 4:map[6:3ujNtUktKt6o-ZU6hAaB]] map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 4 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:dsEwbCGrBDax4rNhILDR] 1:map[3:_pTUsXzaqPhOW5ZNrbq0] 2:map[4:f9AK5Q0QBhREOTHJU8K1] 3:map[5:X_qtCSaq8CvtimjGKZMb] 4:map[6:3ujNtUktKt6o-ZU6hAaB]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:56 {Node 2}{Group 102} starts a PullTask to get shards [5 6] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 2}{Group 102} starts a PullTask to get shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 1}{Group 101} starts a GCTask to delete shards [0 2 4 1 3] from group 100 when config is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:56 {Node 2}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:00:56 {Node 1}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:00:56 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0000fa9b0 1:0xc0000fa9c0 2:0xc0000fa9d0 3:0xc0000fa9e0 4:0xc0000fa9f0 5:0xc0000faa00 6:0xc0000faa10 7:0xc0000faa20 8:0xc0000faa30 9:0xc0000faa40] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:56 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0000fb150 1:0xc0000fb160 2:0xc0000fb170 3:0xc0000fb180 4:0xc0000fb190 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 4160567821628627366 22}} 26 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {1  Get 4160567821628627366 22}} with CommandReply CommandReply{Err: OK, Value: -rrxrh2Xj9piEiuvf0wP}
2025/01/04 13:00:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 4160567821628627366 22}} 26 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 102} starts a PullTask to get shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 2}{Group 102} starts a PullTask to get shards [5 6] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [0 2 4 1 3]}} 27 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100}'s shards status are map[0:0xc0000fa9b0 1:0xc0000fa9c0 2:0xc0000fa9d0 3:0xc0000fa9e0 4:0xc0000fa9f0 5:0xc0000faa00 6:0xc0000faa10 7:0xc0000faa20 8:0xc0000faa30 9:0xc0000faa40] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [0 2 4 1 3]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:56 {Node 2}{Group 100}'s shards status are map[0:0xc00014b740 1:0xc00014b770 2:0xc00014b750 3:0xc00014b780 4:0xc00014b760 5:0xc0000faa00 6:0xc0000faa10 7:0xc0000faa20 8:0xc0000faa30 9:0xc0000faa40] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [0 2 4 1 3]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:56 {Node 2}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {2 [0 2 4 1 3]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:56 {Node 2}{Group 100} processes GCTaskRequest ShardOperationArgs{ConfigNum: 2, ShardIDs: [0 2 4 1 3]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:00:56 {Node 1}{Group 101} deletes shards [0 2 4 1 3] in remote group successfully when currentConfigNum is 2
2025/01/04 13:00:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [0 2 4 1 3]}} 27 1 false [] 0 0}
2025/01/04 13:00:56 {Node 1}{Group 100}'s shards status are map[0:0xc0000fa5c0 1:0xc0000fa5d0 2:0xc0000fa5e0 3:0xc0000fa5f0 4:0xc0000fa600 5:0xc0000fa610 6:0xc0000fa620 7:0xc0000fa630 8:0xc0000fa640 9:0xc0000fa650] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [0 2 4 1 3]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:56 {Node 1}{Group 100}'s shards status are map[0:0xc0004178c0 1:0xc0004178f0 2:0xc0004178d0 3:0xc000417900 4:0xc0004178e0 5:0xc0000fa610 6:0xc0000fa620 7:0xc0000fa630 8:0xc0000fa640 9:0xc0000fa650] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [0 2 4 1 3]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:56 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [0 2 4 1 3]}} 5 1 false [] 0 0}
2025/01/04 13:00:56 {Node 1}{Group 101}'s shards status are map[0:0xc0000fb150 1:0xc0000fb160 2:0xc0000fb170 3:0xc0000fb180 4:0xc0000fb190 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [0 2 4 1 3]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:56 {Node 1}{Group 101}'s shards status are map[0:0xc0000fb150 1:0xc0000fb160 2:0xc0000fb170 3:0xc0000fb180 4:0xc0000fb190 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [0 2 4 1 3]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:56 {Node 1}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {2 [0 2 4 1 3]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:56 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [0 2 4 1 3]}} 5 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 101}'s shards status are map[0:0xc0000fb520 1:0xc0000fb530 2:0xc0000fb540 3:0xc0000fb550 4:0xc0000fb560 5:0xc0000fb570 6:0xc0000fb580 7:0xc0000fb590 8:0xc0000fb5a0 9:0xc0000fb5b0] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [0 2 4 1 3]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:56 {Node 2}{Group 101}'s shards status are map[0:0xc0000fb520 1:0xc0000fb530 2:0xc0000fb540 3:0xc0000fb550 4:0xc0000fb560 5:0xc0000fb570 6:0xc0000fb580 7:0xc0000fb590 8:0xc0000fb5a0 9:0xc0000fb5b0] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [0 2 4 1 3]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:00:56 {Node 2}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:00:56 {Node 1}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:00:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 6UhgoTNNLWA7kq_ffYXc Append 4160567821628627366 23}} 28 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {1 6UhgoTNNLWA7kq_ffYXc Append 4160567821628627366 23}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 6UhgoTNNLWA7kq_ffYXc Append 4160567821628627366 23}} 28 1 false [] 0 0}
2025/01/04 13:00:56 {Node 1}{Group 101} fetches latest configuration {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 2
2025/01/04 13:00:56 {Node 2}{Group 100} fetches latest configuration {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 2
2025/01/04 13:00:56 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 2}{Group 102} starts a PullTask to get shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 2}{Group 102} starts a PullTask to get shards [5 6] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 29 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 2}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 29 1 false [] 0 0}
2025/01/04 13:00:56 {Node 1}{Group 100} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 6 1 false [] 0 0}
2025/01/04 13:00:56 {Node 1}{Group 101} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:56 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 6 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 101} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 2}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:EO2wq4uGmeaTz2Nt5_Q-] 6:map[8:H0YNvrgUs2ToZPpT6LLp]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:00:56 {Node 2}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:EO2wq4uGmeaTz2Nt5_Q-] 6:map[8:H0YNvrgUs2ToZPpT6LLp]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 3
2025/01/04 13:00:56 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[5:map[7:EO2wq4uGmeaTz2Nt5_Q-] 6:map[8:H0YNvrgUs2ToZPpT6LLp]] map[4160567821628627366:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} 5 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:EO2wq4uGmeaTz2Nt5_Q-] 6:map[8:H0YNvrgUs2ToZPpT6LLp]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[5:map[7:EO2wq4uGmeaTz2Nt5_Q-] 6:map[8:H0YNvrgUs2ToZPpT6LLp]] map[4160567821628627366:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} 5 1 false [] 0 0}
2025/01/04 13:00:56 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:EO2wq4uGmeaTz2Nt5_Q-] 6:map[8:H0YNvrgUs2ToZPpT6LLp]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 2}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 3 map[5:map[7:EO2wq4uGmeaTz2Nt5_Q-] 6:map[8:H0YNvrgUs2ToZPpT6LLp]] map[4160567821628627366:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:00:56 {Node 2}{Group 102} starts a GCTask to delete shards [5 6] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 1}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:dsEwbCGrBDax4rNhILDR]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:00:56 {Node 2}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:dsEwbCGrBDax4rNhILDR]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 3
2025/01/04 13:00:56 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc00014b740 1:0xc00014b770 2:0xc00014b750 3:0xc00014b780 4:0xc00014b760 5:0xc0000faa00 6:0xc0000faa10 7:0xc0000faa20 8:0xc0000faa30 9:0xc0000faa40] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[0:map[2:dsEwbCGrBDax4rNhILDR]] map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 6 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:dsEwbCGrBDax4rNhILDR]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 2}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 3 map[0:map[2:dsEwbCGrBDax4rNhILDR]] map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:00:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 30 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 100}'s shards status are map[0:0xc00014b740 1:0xc00014b770 2:0xc00014b750 3:0xc00014b780 4:0xc00014b760 5:0xc0000faa00 6:0xc0000faa10 7:0xc0000faa20 8:0xc0000faa30 9:0xc0000faa40] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 2}{Group 100}'s shards status are map[0:0xc00014b740 1:0xc00014b770 2:0xc00014b750 3:0xc00014b780 4:0xc00014b760 5:0xc0002a0b20 6:0xc0002a0b30 7:0xc0000faa20 8:0xc0000faa30 9:0xc0000faa40] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 2}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {3 [5 6]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:56 {Node 2}{Group 100} processes GCTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:00:56 {Node 2}{Group 102} deletes shards [5 6] in remote group successfully when currentConfigNum is 3
2025/01/04 13:00:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 30 1 false [] 0 0}
2025/01/04 13:00:56 {Node 1}{Group 100}'s shards status are map[0:0xc0004178c0 1:0xc0004178f0 2:0xc0004178d0 3:0xc000417900 4:0xc0004178e0 5:0xc0000fa610 6:0xc0000fa620 7:0xc0000fa630 8:0xc0000fa640 9:0xc0000fa650] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 1}{Group 100}'s shards status are map[0:0xc0004178c0 1:0xc0004178f0 2:0xc0004178d0 3:0xc000417900 4:0xc0004178e0 5:0xc0002a0f50 6:0xc0002a0f60 7:0xc0000fa630 8:0xc0000fa640 9:0xc0000fa650] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0000fb150 1:0xc0000fb160 2:0xc0000fb170 3:0xc0000fb180 4:0xc0000fb190 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[0:map[2:dsEwbCGrBDax4rNhILDR]] map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 6 1 false [] 0 0}
2025/01/04 13:00:56 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:dsEwbCGrBDax4rNhILDR]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 7 1 false [] 0 0}
2025/01/04 13:00:56 {Node 2}{Group 102}'s shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 2}{Group 102}'s shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 2}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {3 [5 6]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:56 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 7 1 false [] 0 0}
2025/01/04 13:00:56 {Node 1}{Group 102}'s shards status are map[0:0xc0000fbcc0 1:0xc0000fbcd0 2:0xc0000fbce0 3:0xc0000fbcf0 4:0xc0000fbd00 5:0xc0000fbd10 6:0xc0000fbd20 7:0xc0000fbd30 8:0xc0000fbd40 9:0xc0000fbd50] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:56 {Node 1}{Group 102}'s shards status are map[0:0xc0000fbcc0 1:0xc0000fbcd0 2:0xc0000fbce0 3:0xc0000fbcf0 4:0xc0000fbd00 5:0xc0000fbd10 6:0xc0000fbd20 7:0xc0000fbd30 8:0xc0000fbd40 9:0xc0000fbd50] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2  Get 4160567821628627366 24}} 8 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {2  Get 4160567821628627366 24}} with CommandReply CommandReply{Err: OK, Value: dsEwbCGrBDax4rNhILDR}
2025/01/04 13:00:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2  Get 4160567821628627366 24}} 8 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 102} starts a GCTask to delete shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 100} fetches latest configuration {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 3
2025/01/04 13:00:57 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0000fb150 1:0xc0000fb160 2:0xc0000fb170 3:0xc0000fb180 4:0xc0000fb190 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 3KeUT3AJA0NbmUWxAt3L Append 4160567821628627366 25}} 9 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {2 3KeUT3AJA0NbmUWxAt3L Append 4160567821628627366 25}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 3KeUT3AJA0NbmUWxAt3L Append 4160567821628627366 25}} 9 1 false [] 0 0}
2025/01/04 13:00:57 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 7 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 31 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 100} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:57 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 7 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 101}'s shards status are map[0:0xc0000fb520 1:0xc0000fb530 2:0xc0000fb540 3:0xc0000fb550 4:0xc0000fb560 5:0xc0000fb570 6:0xc0000fb580 7:0xc0000fb590 8:0xc0000fb5a0 9:0xc0000fb5b0] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 31 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 101}'s shards status are map[0:0xc000417530 1:0xc0000fb530 2:0xc0000fb540 3:0xc0000fb550 4:0xc0000fb560 5:0xc0000fb570 6:0xc0000fb580 7:0xc0000fb590 8:0xc0000fb5a0 9:0xc0000fb5b0] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 101}'s shards status are map[0:0xc0000fb150 1:0xc0000fb160 2:0xc0000fb170 3:0xc0000fb180 4:0xc0000fb190 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 100} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 101}'s shards status are map[0:0xc0004175d0 1:0xc0000fb160 2:0xc0000fb170 3:0xc0000fb180 4:0xc0000fb190 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {3 [0]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:57 {Node 1}{Group 101} processes GCTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:00:57 {Node 2}{Group 102} deletes shards [0] in remote group successfully when currentConfigNum is 3
2025/01/04 13:00:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 10 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 102}'s shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 102}'s shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {3 [0]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 10 1 false [] 0 0}
2025/01/04 13:00:57 {Node 1}{Group 102}'s shards status are map[0:0xc0000fbcc0 1:0xc0000fbcd0 2:0xc0000fbce0 3:0xc0000fbcf0 4:0xc0000fbd00 5:0xc0000fbd10 6:0xc0000fbd20 7:0xc0000fbd30 8:0xc0000fbd40 9:0xc0000fbd50] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 102}'s shards status are map[0:0xc0000fbcc0 1:0xc0000fbcd0 2:0xc0000fbce0 3:0xc0000fbcf0 4:0xc0000fbd00 5:0xc0000fbd10 6:0xc0000fbd20 7:0xc0000fbd30 8:0xc0000fbd40 9:0xc0000fbd50] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 100} starts a PullTask to get shards [1 3] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 102} fetches latest configuration {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 3
2025/01/04 13:00:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 11 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 102} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 11 1 false [] 0 0}
2025/01/04 13:00:57 {Node 1}{Group 102} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:00:57 {Node 2}{Group 102} starts a PullTask to get shards [2 4] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 101} fetches latest configuration {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 3
2025/01/04 13:00:57 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc00014b740 1:0xc00014b770 2:0xc00014b750 3:0xc00014b780 4:0xc00014b760 5:0xc0002a0b20 6:0xc0002a0b30 7:0xc0000faa20 8:0xc0000faa30 9:0xc0000faa40] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 8 1 false [] 0 0}
2025/01/04 13:00:57 {Node 1}{Group 101} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:57 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 8 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 101} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:f9AK5Q0QBhREOTHJU8K1] 4:map[6:3ujNtUktKt6o-ZU6hAaB]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:00:57 {Node 2}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:f9AK5Q0QBhREOTHJU8K1] 4:map[6:3ujNtUktKt6o-ZU6hAaB]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 4
2025/01/04 13:00:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[2:map[4:f9AK5Q0QBhREOTHJU8K1] 4:map[6:3ujNtUktKt6o-ZU6hAaB]] map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 12 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:f9AK5Q0QBhREOTHJU8K1] 4:map[6:3ujNtUktKt6o-ZU6hAaB]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[2:map[4:f9AK5Q0QBhREOTHJU8K1] 4:map[6:3ujNtUktKt6o-ZU6hAaB]] map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 12 1 false [] 0 0}
2025/01/04 13:00:57 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:f9AK5Q0QBhREOTHJU8K1] 4:map[6:3ujNtUktKt6o-ZU6hAaB]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 4 map[2:map[4:f9AK5Q0QBhREOTHJU8K1] 4:map[6:3ujNtUktKt6o-ZU6hAaB]] map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:00:57 {Node 2}{Group 102} starts a GCTask to delete shards [2 4] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 100} starts a PullTask to get shards [1 3] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:_pTUsXzaqPhOW5ZNrbq0] 3:map[5:X_qtCSaq8CvtimjGKZMb]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:00:57 {Node 2}{Group 100} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:_pTUsXzaqPhOW5ZNrbq0] 3:map[5:X_qtCSaq8CvtimjGKZMb]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 4
2025/01/04 13:00:57 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc00014b740 1:0xc00014b770 2:0xc00014b750 3:0xc00014b780 4:0xc00014b760 5:0xc0002a0b20 6:0xc0002a0b30 7:0xc0000faa20 8:0xc0000faa30 9:0xc0000faa40] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 100} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[1:map[3:_pTUsXzaqPhOW5ZNrbq0] 3:map[5:X_qtCSaq8CvtimjGKZMb]] map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 32 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 100} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:_pTUsXzaqPhOW5ZNrbq0] 3:map[5:X_qtCSaq8CvtimjGKZMb]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 100} Execute Command Command{commandType: InsertShards, Data: {OK 4 map[1:map[3:_pTUsXzaqPhOW5ZNrbq0] 3:map[5:X_qtCSaq8CvtimjGKZMb]] map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:00:57 {Node 1}{Group 100} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[1:map[3:_pTUsXzaqPhOW5ZNrbq0] 3:map[5:X_qtCSaq8CvtimjGKZMb]] map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 32 1 false [] 0 0}
2025/01/04 13:00:57 {Node 1}{Group 100} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:_pTUsXzaqPhOW5ZNrbq0] 3:map[5:X_qtCSaq8CvtimjGKZMb]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0004175d0 1:0xc0000fb160 2:0xc0000fb170 3:0xc0000fb180 4:0xc0000fb190 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 9 1 false [] 0 0}
2025/01/04 13:00:57 {Node 1}{Group 101}'s shards status are map[0:0xc0004175d0 1:0xc0000fb160 2:0xc0000fb170 3:0xc0000fb180 4:0xc0000fb190 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 101}'s shards status are map[0:0xc0004175d0 1:0xc0000fb160 2:0xc0003c2590 3:0xc0000fb180 4:0xc0003c25a0 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {4 [2 4]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:57 {Node 1}{Group 101} processes GCTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:00:57 {Node 2}{Group 102} deletes shards [2 4] in remote group successfully when currentConfigNum is 4
2025/01/04 13:00:57 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 9 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 101}'s shards status are map[0:0xc000417530 1:0xc0000fb530 2:0xc0000fb540 3:0xc0000fb550 4:0xc0000fb560 5:0xc0000fb570 6:0xc0000fb580 7:0xc0000fb590 8:0xc0000fb5a0 9:0xc0000fb5b0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 101}'s shards status are map[0:0xc000417530 1:0xc0000fb530 2:0xc0003c2980 3:0xc0000fb550 4:0xc0003c29d0 5:0xc0000fb570 6:0xc0000fb580 7:0xc0000fb590 8:0xc0000fb5a0 9:0xc0000fb5b0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 100} starts a GCTask to delete shards [1 3] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 13 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 102}'s shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 102}'s shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {4 [2 4]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 13 1 false [] 0 0}
2025/01/04 13:00:57 {Node 1}{Group 102}'s shards status are map[0:0xc0000fbcc0 1:0xc0000fbcd0 2:0xc0000fbce0 3:0xc0000fbcf0 4:0xc0000fbd00 5:0xc0000fbd10 6:0xc0000fbd20 7:0xc0000fbd30 8:0xc0000fbd40 9:0xc0000fbd50] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 102}'s shards status are map[0:0xc0000fbcc0 1:0xc0000fbcd0 2:0xc0000fbce0 3:0xc0000fbcf0 4:0xc0000fbd00 5:0xc0000fbd10 6:0xc0000fbd20 7:0xc0000fbd30 8:0xc0000fbd40 9:0xc0000fbd50] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 102} fetches latest configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 4
2025/01/04 13:00:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 14 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 102} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 14 1 false [] 0 0}
2025/01/04 13:00:57 {Node 1}{Group 102} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc00014b740 1:0xc00014b770 2:0xc00014b750 3:0xc00014b780 4:0xc00014b760 5:0xc0002a0b20 6:0xc0002a0b30 7:0xc0000faa20 8:0xc0000faa30 9:0xc0000faa40] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0004175d0 1:0xc0000fb160 2:0xc0003c2590 3:0xc0000fb180 4:0xc0003c25a0 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 102} starts a PullTask to get shards [1 8 7 9 3] from group 100 when config is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [1 3]}} 10 1 false [] 0 0}
2025/01/04 13:00:57 {Node 1}{Group 101}'s shards status are map[0:0xc0004175d0 1:0xc0000fb160 2:0xc0003c2590 3:0xc0000fb180 4:0xc0003c25a0 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 101}'s shards status are map[0:0xc0004175d0 1:0xc0005326a0 2:0xc0003c2590 3:0xc0005326b0 4:0xc0003c25a0 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [1 3]}} 10 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 101}'s shards status are map[0:0xc000417530 1:0xc0000fb530 2:0xc0003c2980 3:0xc0000fb550 4:0xc0003c29d0 5:0xc0000fb570 6:0xc0000fb580 7:0xc0000fb590 8:0xc0000fb5a0 9:0xc0000fb5b0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 101}'s shards status are map[0:0xc000417530 1:0xc00033e4d0 2:0xc0003c2980 3:0xc00033e4e0 4:0xc0003c29d0 5:0xc0000fb570 6:0xc0000fb580 7:0xc0000fb590 8:0xc0000fb5a0 9:0xc0000fb5b0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {4 [1 3]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:57 {Node 1}{Group 101} processes GCTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:00:57 {Node 2}{Group 100} deletes shards [1 3] in remote group successfully when currentConfigNum is 4
2025/01/04 13:00:57 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [1 3]}} 33 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 100}'s shards status are map[0:0xc00014b740 1:0xc00014b770 2:0xc00014b750 3:0xc00014b780 4:0xc00014b760 5:0xc0002a0b20 6:0xc0002a0b30 7:0xc0000faa20 8:0xc0000faa30 9:0xc0000faa40] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 100}'s shards status are map[0:0xc00014b740 1:0xc00014b770 2:0xc00014b750 3:0xc00014b780 4:0xc00014b760 5:0xc0002a0b20 6:0xc0002a0b30 7:0xc0000faa20 8:0xc0000faa30 9:0xc0000faa40] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {4 [1 3]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:57 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [1 3]}} 33 1 false [] 0 0}
2025/01/04 13:00:57 {Node 1}{Group 100}'s shards status are map[0:0xc0004178c0 1:0xc0004178f0 2:0xc0004178d0 3:0xc000417900 4:0xc0004178e0 5:0xc0002a0f50 6:0xc0002a0f60 7:0xc0000fa630 8:0xc0000fa640 9:0xc0000fa650] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 100}'s shards status are map[0:0xc0004178c0 1:0xc0004178f0 2:0xc0004178d0 3:0xc000417900 4:0xc0004178e0 5:0xc0002a0f50 6:0xc0002a0f60 7:0xc0000fa630 8:0xc0000fa640 9:0xc0000fa650] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 5, ShardIDs: [1 8 7 9 3]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:00:57 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 101} fetches latest configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 4
2025/01/04 13:00:57 {Node 2}{Group 100} fetches latest configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 4
2025/01/04 13:00:57 {Node 2}{Group 102} starts a PullTask to get shards [1 8 3 7 9] from group 100 when config is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 34 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 100} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:57 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 34 1 false [] 0 0}
2025/01/04 13:00:57 {Node 1}{Group 100} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 11 1 false [] 0 0}
2025/01/04 13:00:57 {Node 1}{Group 101} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:57 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 11 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 101} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 5, ShardIDs: [1 8 3 7 9]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:_pTUsXzaqPhOW5ZNrbq0] 3:map[5:X_qtCSaq8CvtimjGKZMb] 7:map[9:poNz3prmf2lXHUg3yNPr] 8:map[0:TkzvcWCErrzzv3SDw7CTgZimXylsrrVScHdRVseM] 9:map[1:-rrxrh2Xj9piEiuvf0wP6UhgoTNNLWA7kq_ffYXc]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:00:57 {Node 2}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:_pTUsXzaqPhOW5ZNrbq0] 3:map[5:X_qtCSaq8CvtimjGKZMb] 7:map[9:poNz3prmf2lXHUg3yNPr] 8:map[0:TkzvcWCErrzzv3SDw7CTgZimXylsrrVScHdRVseM] 9:map[1:-rrxrh2Xj9piEiuvf0wP6UhgoTNNLWA7kq_ffYXc]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 5
2025/01/04 13:00:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 5 map[1:map[3:_pTUsXzaqPhOW5ZNrbq0] 3:map[5:X_qtCSaq8CvtimjGKZMb] 7:map[9:poNz3prmf2lXHUg3yNPr] 8:map[0:TkzvcWCErrzzv3SDw7CTgZimXylsrrVScHdRVseM] 9:map[1:-rrxrh2Xj9piEiuvf0wP6UhgoTNNLWA7kq_ffYXc]] map[4160567821628627366:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} 15 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:_pTUsXzaqPhOW5ZNrbq0] 3:map[5:X_qtCSaq8CvtimjGKZMb] 7:map[9:poNz3prmf2lXHUg3yNPr] 8:map[0:TkzvcWCErrzzv3SDw7CTgZimXylsrrVScHdRVseM] 9:map[1:-rrxrh2Xj9piEiuvf0wP6UhgoTNNLWA7kq_ffYXc]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 5 map[1:map[3:_pTUsXzaqPhOW5ZNrbq0] 3:map[5:X_qtCSaq8CvtimjGKZMb] 7:map[9:poNz3prmf2lXHUg3yNPr] 8:map[0:TkzvcWCErrzzv3SDw7CTgZimXylsrrVScHdRVseM] 9:map[1:-rrxrh2Xj9piEiuvf0wP6UhgoTNNLWA7kq_ffYXc]] map[4160567821628627366:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:00:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 5 map[1:map[3:_pTUsXzaqPhOW5ZNrbq0] 3:map[5:X_qtCSaq8CvtimjGKZMb] 7:map[9:poNz3prmf2lXHUg3yNPr] 8:map[0:TkzvcWCErrzzv3SDw7CTgZimXylsrrVScHdRVseM] 9:map[1:-rrxrh2Xj9piEiuvf0wP6UhgoTNNLWA7kq_ffYXc]] map[4160567821628627366:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} 15 1 false [] 0 0}
2025/01/04 13:00:57 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:_pTUsXzaqPhOW5ZNrbq0] 3:map[5:X_qtCSaq8CvtimjGKZMb] 7:map[9:poNz3prmf2lXHUg3yNPr] 8:map[0:TkzvcWCErrzzv3SDw7CTgZimXylsrrVScHdRVseM] 9:map[1:-rrxrh2Xj9piEiuvf0wP6UhgoTNNLWA7kq_ffYXc]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 102} starts a GCTask to delete shards [1 8 7 9 3] from group 100 when config is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc00014b740 1:0xc00014b770 2:0xc00014b750 3:0xc00014b780 4:0xc00014b760 5:0xc0002a0b20 6:0xc0002a0b30 7:0xc0000faa20 8:0xc0000faa30 9:0xc0000faa40] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [1 8 7 9 3]}} 35 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 100}'s shards status are map[0:0xc00014b740 1:0xc00014b770 2:0xc00014b750 3:0xc00014b780 4:0xc00014b760 5:0xc0002a0b20 6:0xc0002a0b30 7:0xc0000faa20 8:0xc0000faa30 9:0xc0000faa40] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [1 8 7 9 3]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 100}'s shards status are map[0:0xc00014b740 1:0xc0002ba520 2:0xc00014b750 3:0xc0002ba560 4:0xc00014b760 5:0xc0002a0b20 6:0xc0002a0b30 7:0xc0002ba540 8:0xc0002ba530 9:0xc0002ba550] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [1 8 7 9 3]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {5 [1 8 7 9 3]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:57 {Node 2}{Group 100} processes GCTaskRequest ShardOperationArgs{ConfigNum: 5, ShardIDs: [1 8 7 9 3]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:00:57 {Node 2}{Group 102} deletes shards [1 8 7 9 3] in remote group successfully when currentConfigNum is 5
2025/01/04 13:00:57 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [1 8 7 9 3]}} 35 1 false [] 0 0}
2025/01/04 13:00:57 {Node 1}{Group 100}'s shards status are map[0:0xc0004178c0 1:0xc0004178f0 2:0xc0004178d0 3:0xc000417900 4:0xc0004178e0 5:0xc0002a0f50 6:0xc0002a0f60 7:0xc0000fa630 8:0xc0000fa640 9:0xc0000fa650] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [1 8 7 9 3]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 100}'s shards status are map[0:0xc0004178c0 1:0xc0000fab00 2:0xc0004178d0 3:0xc0000fabe0 4:0xc0004178e0 5:0xc0002a0f50 6:0xc0002a0f60 7:0xc0000fab60 8:0xc0000fab10 9:0xc0000faba0] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [1 8 7 9 3]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [1 8 7 9 3]}} 16 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 102}'s shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [1 8 7 9 3]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 102}'s shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [1 8 7 9 3]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3  Get 4160567821628627366 26}} 17 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {3  Get 4160567821628627366 26}} with CommandReply CommandReply{Err: OK, Value: _pTUsXzaqPhOW5ZNrbq0}
2025/01/04 13:00:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [1 8 7 9 3]}} 16 1 false [] 0 0}
2025/01/04 13:00:57 {Node 1}{Group 102}'s shards status are map[0:0xc0000fbcc0 1:0xc0000fbcd0 2:0xc0000fbce0 3:0xc0000fbcf0 4:0xc0000fbd00 5:0xc0000fbd10 6:0xc0000fbd20 7:0xc0000fbd30 8:0xc0000fbd40 9:0xc0000fbd50] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [1 8 7 9 3]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 102}'s shards status are map[0:0xc0000fbcc0 1:0xc0000fbcd0 2:0xc0000fbce0 3:0xc0000fbcf0 4:0xc0000fbd00 5:0xc0000fbd10 6:0xc0000fbd20 7:0xc0000fbd30 8:0xc0000fbd40 9:0xc0000fbd50] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [1 8 7 9 3]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3  Get 4160567821628627366 26}} 17 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {5 [1 8 7 9 3]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3 zbOBdQFsrRTFbAkeScmP Append 4160567821628627366 27}} 18 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {3 zbOBdQFsrRTFbAkeScmP Append 4160567821628627366 27}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3 zbOBdQFsrRTFbAkeScmP Append 4160567821628627366 27}} 18 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4  Get 4160567821628627366 28}} 19 1 false [] 0 0}
2025/01/04 13:00:57 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {4  Get 4160567821628627366 28}} with CommandReply CommandReply{Err: OK, Value: f9AK5Q0QBhREOTHJU8K1}
2025/01/04 13:00:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4  Get 4160567821628627366 28}} 19 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4 eMkYEC_RRXVw3PeaYNyF Append 4160567821628627366 29}} 20 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {4 eMkYEC_RRXVw3PeaYNyF Append 4160567821628627366 29}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4 eMkYEC_RRXVw3PeaYNyF Append 4160567821628627366 29}} 20 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5  Get 4160567821628627366 30}} 21 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {5  Get 4160567821628627366 30}} with CommandReply CommandReply{Err: OK, Value: X_qtCSaq8CvtimjGKZMb}
2025/01/04 13:00:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5  Get 4160567821628627366 30}} 21 1 false [] 0 0}
2025/01/04 13:00:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5 RFJFvTwuQKR4MqgwIbH3 Append 4160567821628627366 31}} 22 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5 RFJFvTwuQKR4MqgwIbH3 Append 4160567821628627366 31}} 22 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {5 RFJFvTwuQKR4MqgwIbH3 Append 4160567821628627366 31}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6  Get 4160567821628627366 32}} 23 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {6  Get 4160567821628627366 32}} with CommandReply CommandReply{Err: OK, Value: 3ujNtUktKt6o-ZU6hAaB}
2025/01/04 13:00:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6  Get 4160567821628627366 32}} 23 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6 aGHpoKw_BQEang-001H3 Append 4160567821628627366 33}} 24 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {6 aGHpoKw_BQEang-001H3 Append 4160567821628627366 33}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6 aGHpoKw_BQEang-001H3 Append 4160567821628627366 33}} 24 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 4160567821628627366 34}} 25 1 false [] 0 0}
2025/01/04 13:00:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 4160567821628627366 34}} 25 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {7  Get 4160567821628627366 34}} with CommandReply CommandReply{Err: OK, Value: EO2wq4uGmeaTz2Nt5_Q-}
2025/01/04 13:00:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 YsFXUVSCwndz-lEXKgGg Append 4160567821628627366 35}} 26 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {7 YsFXUVSCwndz-lEXKgGg Append 4160567821628627366 35}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 YsFXUVSCwndz-lEXKgGg Append 4160567821628627366 35}} 26 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 4160567821628627366 36}} 27 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {8  Get 4160567821628627366 36}} with CommandReply CommandReply{Err: OK, Value: H0YNvrgUs2ToZPpT6LLp}
2025/01/04 13:00:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 4160567821628627366 36}} 27 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 apzWSucLsi_cKKBtauDy Append 4160567821628627366 37}} 28 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {8 apzWSucLsi_cKKBtauDy Append 4160567821628627366 37}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 apzWSucLsi_cKKBtauDy Append 4160567821628627366 37}} 28 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4160567821628627366 38}} 29 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {9  Get 4160567821628627366 38}} with CommandReply CommandReply{Err: OK, Value: poNz3prmf2lXHUg3yNPr}
2025/01/04 13:00:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4160567821628627366 38}} 29 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 uV-_H2o-CVFkXFIfVADx Append 4160567821628627366 39}} 30 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {9 uV-_H2o-CVFkXFIfVADx Append 4160567821628627366 39}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 uV-_H2o-CVFkXFIfVADx Append 4160567821628627366 39}} 30 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} fetches latest configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 5
2025/01/04 13:00:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 31 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:58 {Node 2}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 31 1 false [] 0 0}
2025/01/04 13:00:58 {Node 1}{Group 102} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:58 {Node 2}{Group 100} fetches latest configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 5
2025/01/04 13:00:58 {Node 1}{Group 101} fetches latest configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 5
2025/01/04 13:00:58 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 36 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 100} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:58 {Node 2}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:58 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 36 1 false [] 0 0}
2025/01/04 13:00:58 {Node 1}{Group 100} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:58 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 12 1 false [] 0 0}
2025/01/04 13:00:58 {Node 1}{Group 101} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:58 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:58 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 12 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 101} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 4160567821628627366 40}} 32 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {0  Get 4160567821628627366 40}} with CommandReply CommandReply{Err: OK, Value: TkzvcWCErrzzv3SDw7CTgZimXylsrrVScHdRVseM}
2025/01/04 13:00:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 4160567821628627366 40}} 32 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:58 {Node 1}{Group 101} starts a PullTask to get shards [0 2 4 1 3] from group 102 when config is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 6pCSlK6WXyfT82u0QFHr Append 4160567821628627366 41}} 33 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {0 6pCSlK6WXyfT82u0QFHr Append 4160567821628627366 41}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 6pCSlK6WXyfT82u0QFHr Append 4160567821628627366 41}} 33 1 false [] 0 0}
2025/01/04 13:00:58 {Node 2}{Group 102} processes PullTaskRequest ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 2 4 1 3]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:dsEwbCGrBDax4rNhILDR3KeUT3AJA0NbmUWxAt3L] 1:map[3:_pTUsXzaqPhOW5ZNrbq0zbOBdQFsrRTFbAkeScmP] 2:map[4:f9AK5Q0QBhREOTHJU8K1eMkYEC_RRXVw3PeaYNyF] 3:map[5:X_qtCSaq8CvtimjGKZMbRFJFvTwuQKR4MqgwIbH3] 4:map[6:3ujNtUktKt6o-ZU6hAaBaGHpoKw_BQEang-001H3]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:00:58 {Node 1}{Group 101} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:dsEwbCGrBDax4rNhILDR3KeUT3AJA0NbmUWxAt3L] 1:map[3:_pTUsXzaqPhOW5ZNrbq0zbOBdQFsrRTFbAkeScmP] 2:map[4:f9AK5Q0QBhREOTHJU8K1eMkYEC_RRXVw3PeaYNyF] 3:map[5:X_qtCSaq8CvtimjGKZMbRFJFvTwuQKR4MqgwIbH3] 4:map[6:3ujNtUktKt6o-ZU6hAaBaGHpoKw_BQEang-001H3]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 6
2025/01/04 13:00:59 {Node 1}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 6 map[0:map[2:dsEwbCGrBDax4rNhILDR3KeUT3AJA0NbmUWxAt3L] 1:map[3:_pTUsXzaqPhOW5ZNrbq0zbOBdQFsrRTFbAkeScmP] 2:map[4:f9AK5Q0QBhREOTHJU8K1eMkYEC_RRXVw3PeaYNyF] 3:map[5:X_qtCSaq8CvtimjGKZMbRFJFvTwuQKR4MqgwIbH3] 4:map[6:3ujNtUktKt6o-ZU6hAaBaGHpoKw_BQEang-001H3]] map[4160567821628627366:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]}} 13 1 false [] 0 0}
2025/01/04 13:00:59 {Node 1}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:dsEwbCGrBDax4rNhILDR3KeUT3AJA0NbmUWxAt3L] 1:map[3:_pTUsXzaqPhOW5ZNrbq0zbOBdQFsrRTFbAkeScmP] 2:map[4:f9AK5Q0QBhREOTHJU8K1eMkYEC_RRXVw3PeaYNyF] 3:map[5:X_qtCSaq8CvtimjGKZMbRFJFvTwuQKR4MqgwIbH3] 4:map[6:3ujNtUktKt6o-ZU6hAaBaGHpoKw_BQEang-001H3]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:59 {Node 1}{Group 101} Execute Command Command{commandType: InsertShards, Data: {OK 6 map[0:map[2:dsEwbCGrBDax4rNhILDR3KeUT3AJA0NbmUWxAt3L] 1:map[3:_pTUsXzaqPhOW5ZNrbq0zbOBdQFsrRTFbAkeScmP] 2:map[4:f9AK5Q0QBhREOTHJU8K1eMkYEC_RRXVw3PeaYNyF] 3:map[5:X_qtCSaq8CvtimjGKZMbRFJFvTwuQKR4MqgwIbH3] 4:map[6:3ujNtUktKt6o-ZU6hAaBaGHpoKw_BQEang-001H3]] map[4160567821628627366:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:00:59 {Node 2}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 6 map[0:map[2:dsEwbCGrBDax4rNhILDR3KeUT3AJA0NbmUWxAt3L] 1:map[3:_pTUsXzaqPhOW5ZNrbq0zbOBdQFsrRTFbAkeScmP] 2:map[4:f9AK5Q0QBhREOTHJU8K1eMkYEC_RRXVw3PeaYNyF] 3:map[5:X_qtCSaq8CvtimjGKZMbRFJFvTwuQKR4MqgwIbH3] 4:map[6:3ujNtUktKt6o-ZU6hAaBaGHpoKw_BQEang-001H3]] map[4160567821628627366:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]}} 13 1 false [] 0 0}
2025/01/04 13:00:59 {Node 2}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:dsEwbCGrBDax4rNhILDR3KeUT3AJA0NbmUWxAt3L] 1:map[3:_pTUsXzaqPhOW5ZNrbq0zbOBdQFsrRTFbAkeScmP] 2:map[4:f9AK5Q0QBhREOTHJU8K1eMkYEC_RRXVw3PeaYNyF] 3:map[5:X_qtCSaq8CvtimjGKZMbRFJFvTwuQKR4MqgwIbH3] 4:map[6:3ujNtUktKt6o-ZU6hAaBaGHpoKw_BQEang-001H3]], LastOperations: map[4160567821628627366:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:59 {Node 1}{Group 101} starts a GCTask to delete shards [0 2 4 1 3] from group 102 when config is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:59 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0004175d0 1:0xc0005326a0 2:0xc0003c2590 3:0xc0005326b0 4:0xc0003c25a0 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:59 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:59 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1  Get 4160567821628627366 42}} 34 1 false [] 0 0}
2025/01/04 13:00:59 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [0 2 4 1 3]}} 35 1 false [] 0 0}
2025/01/04 13:00:59 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {1  Get 4160567821628627366 42}} with CommandReply CommandReply{Err: OK, Value: -rrxrh2Xj9piEiuvf0wP6UhgoTNNLWA7kq_ffYXc}
2025/01/04 13:00:59 {Node 2}{Group 102}'s shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 2 4 1 3]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:59 {Node 2}{Group 102}'s shards status are map[0:0xc0003c2030 1:0xc0003c2060 2:0xc0003c2040 3:0xc0003c2070 4:0xc0003c2050 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 2 4 1 3]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:59 {Node 2}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {6 [0 2 4 1 3]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:59 {Node 2}{Group 102} processes GCTaskRequest ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 2 4 1 3]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:00:59 {Node 1}{Group 101} deletes shards [0 2 4 1 3] in remote group successfully when currentConfigNum is 6
2025/01/04 13:00:59 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1  Get 4160567821628627366 42}} 34 1 false [] 0 0}
2025/01/04 13:00:59 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [0 2 4 1 3]}} 35 1 false [] 0 0}
2025/01/04 13:00:59 {Node 1}{Group 102}'s shards status are map[0:0xc0000fbcc0 1:0xc0000fbcd0 2:0xc0000fbce0 3:0xc0000fbcf0 4:0xc0000fbd00 5:0xc0000fbd10 6:0xc0000fbd20 7:0xc0000fbd30 8:0xc0000fbd40 9:0xc0000fbd50] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 2 4 1 3]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:59 {Node 1}{Group 102}'s shards status are map[0:0xc00033fbe0 1:0xc00033fc50 2:0xc00033fbf0 3:0xc00033fc60 4:0xc00033fc00 5:0xc0000fbd10 6:0xc0000fbd20 7:0xc0000fbd30 8:0xc0000fbd40 9:0xc0000fbd50] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 2 4 1 3]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:59 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1 L9v_dy3G3H4_Yjba7c7o Append 4160567821628627366 43}} 36 1 false [] 0 0}
2025/01/04 13:00:59 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {1 L9v_dy3G3H4_Yjba7c7o Append 4160567821628627366 43}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:59 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1 L9v_dy3G3H4_Yjba7c7o Append 4160567821628627366 43}} 36 1 false [] 0 0}
2025/01/04 13:00:59 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0004175d0 1:0xc0005326a0 2:0xc0003c2590 3:0xc0005326b0 4:0xc0003c25a0 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:59 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [0 2 4 1 3]}} 14 1 false [] 0 0}
2025/01/04 13:00:59 {Node 1}{Group 101}'s shards status are map[0:0xc0004175d0 1:0xc0005326a0 2:0xc0003c2590 3:0xc0005326b0 4:0xc0003c25a0 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 2 4 1 3]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:59 {Node 1}{Group 101}'s shards status are map[0:0xc0004175d0 1:0xc0005326a0 2:0xc0003c2590 3:0xc0005326b0 4:0xc0003c25a0 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 2 4 1 3]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:59 {Node 1}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {6 [0 2 4 1 3]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:59 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [0 2 4 1 3]}} 14 1 false [] 0 0}
2025/01/04 13:00:59 {Node 2}{Group 101}'s shards status are map[0:0xc000417530 1:0xc00033e4d0 2:0xc0003c2980 3:0xc00033e4e0 4:0xc0003c29d0 5:0xc0000fb570 6:0xc0000fb580 7:0xc0000fb590 8:0xc0000fb5a0 9:0xc0000fb5b0] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 2 4 1 3]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:59 {Node 2}{Group 101}'s shards status are map[0:0xc000417530 1:0xc00033e4d0 2:0xc0003c2980 3:0xc00033e4e0 4:0xc0003c29d0 5:0xc0000fb570 6:0xc0000fb580 7:0xc0000fb590 8:0xc0000fb5a0 9:0xc0000fb5b0] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 2 4 1 3]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:00:59 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2  Get 4160567821628627366 44}} 15 1 false [] 0 0}
2025/01/04 13:00:59 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {2  Get 4160567821628627366 44}} with CommandReply CommandReply{Err: OK, Value: dsEwbCGrBDax4rNhILDR3KeUT3AJA0NbmUWxAt3L}
2025/01/04 13:00:59 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2  Get 4160567821628627366 44}} 15 1 false [] 0 0}
2025/01/04 13:00:59 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2 9SF5F6MsZDZ1aZ05DR6k Append 4160567821628627366 45}} 16 1 false [] 0 0}
2025/01/04 13:00:59 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {2 9SF5F6MsZDZ1aZ05DR6k Append 4160567821628627366 45}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:59 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2 9SF5F6MsZDZ1aZ05DR6k Append 4160567821628627366 45}} 16 1 false [] 0 0}
2025/01/04 13:00:59 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3  Get 4160567821628627366 46}} 17 1 false [] 0 0}
2025/01/04 13:00:59 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {3  Get 4160567821628627366 46}} with CommandReply CommandReply{Err: OK, Value: _pTUsXzaqPhOW5ZNrbq0zbOBdQFsrRTFbAkeScmP}
2025/01/04 13:00:59 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3  Get 4160567821628627366 46}} 17 1 false [] 0 0}
2025/01/04 13:00:59 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3 2mpiOy2V6Xf0-wmeJSu- Append 4160567821628627366 47}} 18 1 false [] 0 0}
2025/01/04 13:00:59 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {3 2mpiOy2V6Xf0-wmeJSu- Append 4160567821628627366 47}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:59 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3 2mpiOy2V6Xf0-wmeJSu- Append 4160567821628627366 47}} 18 1 false [] 0 0}
2025/01/04 13:00:59 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 4160567821628627366 48}} 19 1 false [] 0 0}
2025/01/04 13:00:59 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {4  Get 4160567821628627366 48}} with CommandReply CommandReply{Err: OK, Value: f9AK5Q0QBhREOTHJU8K1eMkYEC_RRXVw3PeaYNyF}
2025/01/04 13:00:59 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 4160567821628627366 48}} 19 1 false [] 0 0}
2025/01/04 13:00:59 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4 8zLFQ7CNScIUB33U9yBh Append 4160567821628627366 49}} 20 1 false [] 0 0}
2025/01/04 13:00:59 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {4 8zLFQ7CNScIUB33U9yBh Append 4160567821628627366 49}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:59 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4 8zLFQ7CNScIUB33U9yBh Append 4160567821628627366 49}} 20 1 false [] 0 0}
2025/01/04 13:00:59 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5  Get 4160567821628627366 50}} 21 1 false [] 0 0}
2025/01/04 13:00:59 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {5  Get 4160567821628627366 50}} with CommandReply CommandReply{Err: OK, Value: X_qtCSaq8CvtimjGKZMbRFJFvTwuQKR4MqgwIbH3}
2025/01/04 13:00:59 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5  Get 4160567821628627366 50}} 21 1 false [] 0 0}
2025/01/04 13:00:59 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 66iJ5y-K-T8IbQhIEoQF Append 4160567821628627366 51}} 22 1 false [] 0 0}
2025/01/04 13:00:59 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {5 66iJ5y-K-T8IbQhIEoQF Append 4160567821628627366 51}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:00:59 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 66iJ5y-K-T8IbQhIEoQF Append 4160567821628627366 51}} 22 1 false [] 0 0}
2025/01/04 13:00:59 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 4160567821628627366 52}} 23 1 false [] 0 0}
2025/01/04 13:00:59 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 4160567821628627366 52}} 23 1 false [] 0 0}
2025/01/04 13:01:00 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {6  Get 4160567821628627366 52}} with CommandReply CommandReply{Err: OK, Value: 3ujNtUktKt6o-ZU6hAaBaGHpoKw_BQEang-001H3}
2025/01/04 13:01:00 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 fq5EioZ4cA2v3noAGXXq Append 4160567821628627366 53}} 24 1 false [] 0 0}
2025/01/04 13:01:00 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {6 fq5EioZ4cA2v3noAGXXq Append 4160567821628627366 53}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:00 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 fq5EioZ4cA2v3noAGXXq Append 4160567821628627366 53}} 24 1 false [] 0 0}
2025/01/04 13:01:00 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 4160567821628627366 54}} 37 1 false [] 0 0}
2025/01/04 13:01:00 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {7  Get 4160567821628627366 54}} with CommandReply CommandReply{Err: OK, Value: EO2wq4uGmeaTz2Nt5_Q-YsFXUVSCwndz-lEXKgGg}
2025/01/04 13:01:00 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 4160567821628627366 54}} 37 1 false [] 0 0}
2025/01/04 13:01:00 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 EmIE0yACAwettM4kySZX Append 4160567821628627366 55}} 38 1 false [] 0 0}
2025/01/04 13:01:00 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {7 EmIE0yACAwettM4kySZX Append 4160567821628627366 55}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:00 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 EmIE0yACAwettM4kySZX Append 4160567821628627366 55}} 38 1 false [] 0 0}
2025/01/04 13:01:00 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 4160567821628627366 56}} 39 1 false [] 0 0}
2025/01/04 13:01:00 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {8  Get 4160567821628627366 56}} with CommandReply CommandReply{Err: OK, Value: H0YNvrgUs2ToZPpT6LLpapzWSucLsi_cKKBtauDy}
2025/01/04 13:01:00 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 4160567821628627366 56}} 39 1 false [] 0 0}
2025/01/04 13:01:00 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 cgx6GFdw7_o3JACl7Gti Append 4160567821628627366 57}} 40 1 false [] 0 0}
2025/01/04 13:01:00 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {8 cgx6GFdw7_o3JACl7Gti Append 4160567821628627366 57}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:00 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 cgx6GFdw7_o3JACl7Gti Append 4160567821628627366 57}} 40 1 false [] 0 0}
2025/01/04 13:01:00 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4160567821628627366 58}} 41 1 false [] 0 0}
2025/01/04 13:01:00 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {9  Get 4160567821628627366 58}} with CommandReply CommandReply{Err: OK, Value: poNz3prmf2lXHUg3yNPruV-_H2o-CVFkXFIfVADx}
2025/01/04 13:01:00 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4160567821628627366 58}} 41 1 false [] 0 0}
2025/01/04 13:01:00 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 6a-BP55tXQfAAib42Q9V Append 4160567821628627366 59}} 42 1 false [] 0 0}
2025/01/04 13:01:00 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {9 6a-BP55tXQfAAib42Q9V Append 4160567821628627366 59}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:00 {Node 0}{Group 100} started
2025/01/04 13:01:00 {Node 0}{Group 101} started
2025/01/04 13:01:00 {Node 0}{Group 102} started
2025/01/04 13:01:00 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 6a-BP55tXQfAAib42Q9V Append 4160567821628627366 59}} 42 1 false [] 0 0}
2025/01/04 13:01:00 {Node 0}{Group 102} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 71 255 138 1 10 1 10 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 1 1 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 113 255 138 1 12 1 10 255 202 255 202 255 202 255 202 255 202 255 204 255 204 255 204 255 204 255 204 1 2 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 0 15 255 165 4 1 2 255 166 0 1 4 1 255 162 0 0 31 255 161 3 1 2 255 162 0 1 2 1 2 75 86 1 255 164 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 163 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 164 0 1 12 1 12 0 0 254 1 83 255 166 0 10 4 1 0 0 6 1 0 0 10 1 1 1 55 60 69 79 50 119 113 52 117 71 109 101 97 84 122 50 78 116 53 95 81 45 89 115 70 88 85 86 83 67 119 110 100 122 45 108 69 88 75 103 71 103 69 109 73 69 48 121 65 67 65 119 101 116 116 77 52 107 121 83 90 88 0 12 1 1 1 56 60 72 48 89 78 118 114 103 85 115 50 84 111 90 80 112 84 54 76 76 112 97 112 122 87 83 117 99 76 115 105 95 99 75 75 66 116 97 117 68 121 99 103 120 54 71 70 100 119 55 95 111 51 74 65 67 108 55 71 116 105 0 14 1 1 1 57 40 112 111 78 122 51 112 114 109 102 50 108 88 72 85 103 51 121 78 80 114 117 86 45 95 72 50 111 45 67 86 70 107 88 70 73 102 86 65 68 120 0 18 1 1 1 49 60 45 114 114 120 114 104 50 88 106 57 112 105 69 105 117 118 102 48 119 80 54 85 104 103 111 84 78 78 76 87 65 55 107 113 95 102 102 89 88 99 76 57 118 95 100 121 51 71 51 72 52 95 89 106 98 97 55 99 55 111 0 0 1 0 0 8 1 0 0 16 1 1 1 48 60 84 107 122 118 99 87 67 69 114 114 122 122 118 51 83 68 119 55 67 84 103 90 105 109 88 121 108 115 114 114 86 83 99 72 100 82 86 115 101 77 54 112 67 83 108 75 54 87 88 121 102 84 56 50 117 48 81 70 72 114 0 2 1 0 0 15 255 169 4 1 2 255 170 0 1 4 1 255 168 0 0 51 255 167 3 1 2 255 168 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 160 0 0 0 44 255 159 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 160 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 22 255 170 0 1 248 115 122 156 199 192 48 179 76 1 114 1 1 2 79 75 0 0] 1 40}
2025/01/04 13:01:00 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4160567821628627366 58}} 41 1 false [] 0 0}
2025/01/04 13:01:00 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 6a-BP55tXQfAAib42Q9V Append 4160567821628627366 59}} 42 1 false [] 0 0}
2025/01/04 13:01:00 {Node 0}{Group 100} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 255 155 255 138 1 6 1 10 255 204 255 202 255 202 255 202 255 202 255 204 255 204 255 200 255 200 255 200 1 3 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 0 113 255 138 1 8 1 10 255 204 255 200 255 204 255 200 255 204 255 204 255 204 255 200 255 200 255 200 1 2 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 15 255 165 4 1 2 255 166 0 1 4 1 255 162 0 0 31 255 161 3 1 2 255 162 0 1 2 1 2 75 86 1 255 164 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 163 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 164 0 1 12 1 12 0 0 255 203 255 166 0 10 8 1 0 0 12 1 0 0 16 1 1 1 48 40 84 107 122 118 99 87 67 69 114 114 122 122 118 51 83 68 119 55 67 84 103 90 105 109 88 121 108 115 114 114 86 83 99 72 100 82 86 115 101 77 0 2 1 1 1 51 20 95 112 84 85 115 88 122 97 113 80 104 79 87 53 90 78 114 98 113 48 1 3 0 6 1 1 1 53 20 88 95 113 116 67 83 97 113 56 67 118 116 105 109 106 71 75 90 77 98 1 3 0 10 1 0 0 14 1 1 1 57 20 112 111 78 122 51 112 114 109 102 50 108 88 72 85 103 51 121 78 80 114 0 18 1 1 1 49 40 45 114 114 120 114 104 50 88 106 57 112 105 69 105 117 118 102 48 119 80 54 85 104 103 111 84 78 78 76 87 65 55 107 113 95 102 102 89 88 99 0 0 1 0 0 4 1 0 0 15 255 169 4 1 2 255 170 0 1 4 1 255 168 0 0 51 255 167 3 1 2 255 168 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 160 0 0 0 44 255 159 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 160 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 22 255 170 0 1 248 115 122 156 199 192 48 179 76 1 46 1 1 2 79 75 0 0] 1 32}
2025/01/04 13:01:00 {Node 0}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [1 3]}} 33 1 false [] 0 0}
2025/01/04 13:01:00 {Node 0}{Group 100} discards outdated shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:01:00 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 34 1 false [] 0 0}
2025/01/04 13:01:00 {Node 0}{Group 100} discards outdated configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:01:00 {Node 0}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [1 8 7 9 3]}} 35 1 false [] 0 0}
2025/01/04 13:01:00 {Node 0}{Group 100} discards outdated shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [1 8 7 9 3]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:01:00 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 36 1 false [] 0 0}
2025/01/04 13:01:00 {Node 0}{Group 100} discards outdated configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:01:00 {Node 0}{Group 101} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 71 255 138 1 10 1 10 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 1 1 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 113 255 138 1 12 1 10 255 202 255 202 255 202 255 202 255 202 255 204 255 204 255 204 255 204 255 204 1 2 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 15 255 165 4 1 2 255 166 0 1 4 1 255 162 0 0 31 255 161 3 1 2 255 162 0 1 2 1 2 75 86 1 255 164 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 163 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 164 0 1 12 1 12 0 0 254 1 63 255 166 0 10 12 1 0 0 14 1 0 0 16 1 0 0 18 1 0 0 0 1 1 1 50 60 100 115 69 119 98 67 71 114 66 68 97 120 52 114 78 104 73 76 68 82 51 75 101 85 84 51 65 74 65 48 78 98 109 85 87 120 65 116 51 76 57 83 70 53 70 54 77 115 90 68 90 49 97 90 48 53 68 82 54 107 0 4 1 1 1 52 60 102 57 65 75 53 81 48 81 66 104 82 69 79 84 72 74 85 56 75 49 101 77 107 89 69 67 95 82 82 88 86 119 51 80 101 97 89 78 121 70 56 122 76 70 81 55 67 78 83 99 73 85 66 51 51 85 57 121 66 104 0 8 1 1 1 54 40 51 117 106 78 116 85 107 116 75 116 54 111 45 90 85 54 104 65 97 66 97 71 72 112 111 75 119 95 66 81 69 97 110 103 45 48 48 49 72 51 0 2 1 1 1 51 60 95 112 84 85 115 88 122 97 113 80 104 79 87 53 90 78 114 98 113 48 122 98 79 66 100 81 70 115 114 82 84 70 98 65 107 101 83 99 109 80 50 109 112 105 79 121 50 86 54 88 102 48 45 119 109 101 74 83 117 45 0 6 1 1 1 53 40 88 95 113 116 67 83 97 113 56 67 118 116 105 109 106 71 75 90 77 98 82 70 74 70 118 84 119 117 81 75 82 52 77 113 103 119 73 98 72 51 0 10 1 0 0 15 255 169 4 1 2 255 170 0 1 4 1 255 168 0 0 51 255 167 3 1 2 255 168 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 160 0 0 0 44 255 159 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 160 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 22 255 170 0 1 248 115 122 156 199 192 48 179 76 1 98 1 1 2 79 75 0 0] 1 21}
2025/01/04 13:01:00 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 66iJ5y-K-T8IbQhIEoQF Append 4160567821628627366 51}} 22 1 false [] 0 0}
2025/01/04 13:01:00 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 4160567821628627366 52}} 23 1 false [] 0 0}
2025/01/04 13:01:00 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 fq5EioZ4cA2v3noAGXXq Append 4160567821628627366 53}} 24 1 false [] 0 0}
panic: test timed out after 30s
	running tests:
		TestMissChange5B (30s)

goroutine 16877 [running]:
testing.(*M).startAlarm.func1()
	/usr/local/go/src/testing/testing.go:2373 +0x385
created by time.goFunc
	/usr/local/go/src/time/sleep.go:215 +0x2d

goroutine 1 [chan receive]:
testing.(*T).Run(0xc0000a6b60, {0x692c32?, 0x0?}, 0x6aa390)
	/usr/local/go/src/testing/testing.go:1751 +0x3ab
testing.runTests.func1(0xc0000a6b60)
	/usr/local/go/src/testing/testing.go:2168 +0x37
testing.tRunner(0xc0000a6b60, 0xc0000c3c70)
	/usr/local/go/src/testing/testing.go:1690 +0xf4
testing.runTests(0xc000010408, {0x87a3c0, 0xe, 0xe}, {0x471ad0?, 0x47173a?, 0x87f260?})
	/usr/local/go/src/testing/testing.go:2166 +0x43d
testing.(*M).Run(0xc0000a8140)
	/usr/local/go/src/testing/testing.go:2034 +0x64a
main.main()
	_testmain.go:71 +0x9b

goroutine 6 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007b640, {0x69423c?, 0xc00035ee10?}, {0x638000, 0xc00035ee10}, {0x64d140, 0xc00031c000})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/shardctrler.(*Clerk).Command(0xc00013f080, 0xc00035ee10)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:73 +0xc5
6.5840/shardctrler.(*Clerk).Query(...)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:60
6.5840/shardkv.(*Clerk).Command(0xc000102510, 0xc0000f9d00)
	/home/ubuntu/my_6.5840/src/shardkv/client.go:108 +0x146
6.5840/shardkv.(*Clerk).Get(...)
	/home/ubuntu/my_6.5840/src/shardkv/client.go:73
6.5840/shardkv.check(0xc0000a6d00, 0xc000102510, {0x69a869, 0x1}, {0xc000424380, 0x3c})
	/home/ubuntu/my_6.5840/src/shardkv/test_test.go:17 +0x95
6.5840/shardkv.TestMissChange5B(0xc0000a6d00)
	/home/ubuntu/my_6.5840/src/shardkv/test_test.go:351 +0x7b5
testing.tRunner(0xc0000a6d00, 0x6aa390)
	/usr/local/go/src/testing/testing.go:1690 +0xf4
created by testing.(*T).Run in goroutine 1
	/usr/local/go/src/testing/testing.go:1743 +0x390

goroutine 7 [select]:
6.5840/labrpc.MakeNetwork.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:160 +0xea
created by 6.5840/labrpc.MakeNetwork in goroutine 6
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:158 +0x196

goroutine 8 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0000e8120)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 9 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000015750, 0x19b)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0000e8120?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e8120)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 10 [chan receive]:
6.5840/shardctrler.(*ShardCtrler).applier(0xc00007c300)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:70 +0x87
created by 6.5840/shardctrler.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:62 +0x28a

goroutine 11 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0x0?, 0x30?, 0x477d32?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc0000e8240)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).ticker(0xc0000e8240)
	/home/ubuntu/my_6.5840/src/raft/raft.go:459 +0x5a
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 12 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000015c10, 0x1a0)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0003162c0?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e8240)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 13 [chan receive]:
6.5840/shardctrler.(*ShardCtrler).applier(0xc00007c780)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:70 +0x87
created by 6.5840/shardctrler.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:62 +0x28a

goroutine 14 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0x0?, 0x30?, 0x477d32?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc0000e8360)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).ticker(0xc0000e8360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:459 +0x5a
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 15 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000015dd0, 0x191)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0001b6b00?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e8360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 16 [chan receive]:
6.5840/shardctrler.(*ShardCtrler).applier(0xc00007c9c0)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:70 +0x87
created by 6.5840/shardctrler.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:62 +0x28a

goroutine 16874 [select]:
6.5840/shardctrler.(*ShardCtrler).Command(0xc00007c780, 0xc0001de780, 0xc0002d4a80)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:158 +0x21c
reflect.Value.call({0xc0000c63c0?, 0xc00005c7b0?, 0xc0001e5b18?}, {0x68fc67, 0x4}, {0xc0001e5d20, 0x3, 0xc0001e5b48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc0000c63c0?, 0xc00005c7b0?, 0xc000262020?}, {0xc0001e5d20?, 0x68a260?, 0xc000129c38?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015c40, {0x694248, 0x7}, {{0x63de40, 0xc0000fb000}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0002841c0, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc0000109f0, {{0x63de40, 0xc0000fb000}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0002841c0, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 16873
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 18 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000f8150, 0x16)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000057e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e8480)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 19 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000fe000)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 5336 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001949a0, 0xc0000fb850, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 16862 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0x693bbf?, 0x12?, 0x6f8478?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc0000e8240)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).sendEntries(0xc0000e8240, 0x0, 0xc000483e40)
	/home/ubuntu/my_6.5840/src/raft/raft.go:723 +0xf5
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 11
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 24 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0000e87e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 25 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000f8310, 0x24)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00010b690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e87e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 26 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000fe160)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 27 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe160, 0xc0000fa670, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 28 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe160, 0xc0000fa680, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 29 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe160, 0xc0000fa690, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 30 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe160, 0xc0000fa6a0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 31 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0000e8c60)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 32 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000f84d0, 0x24)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000236e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e8c60)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 33 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000fe2c0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 34 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007aa60, {0x69423c?, 0xc0001de960?}, {0x638000, 0xc0001de960}, {0x64d140, 0xc0002d4af0})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/shardctrler.(*Clerk).Command(0xc000118750, 0xc0001de960)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:73 +0xc5
6.5840/shardctrler.(*Clerk).Query(...)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:60
6.5840/shardkv.(*ShardKV).configurationAction(0xc0000fe2c0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:341 +0x245
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe2c0, 0xc0000faa60, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:383 +0x5f
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 35 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe2c0, 0xc0000faa70, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 36 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe2c0, 0xc0000faa80, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 37 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe2c0, 0xc0000faa90, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 39 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000f8690, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000124690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e8ea0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 40 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000fe420)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 5325 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0002cac60)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 16767 [runnable]:
sync.runtime_SemacquireMutex(0x693bbf?, 0x12?, 0x6f8478?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc0000e8240)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).sendEntries(0xc0000e8240, 0x0, 0xc0000140c0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:723 +0xf5
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 11
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 45 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0000e90e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 46 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000f8850, 0x18)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00011fe90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e90e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 47 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000fe580)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 48 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007ade0, {0x69423c?, 0xc0001de050?}, {0x638000, 0xc0001de050}, {0x64d140, 0xc0002d41c0})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/shardctrler.(*Clerk).Command(0xc0001192f0, 0xc0001de050)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:73 +0xc5
6.5840/shardctrler.(*Clerk).Query(...)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:60
6.5840/shardkv.(*ShardKV).configurationAction(0xc0000fe580)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:341 +0x245
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe580, 0xc0000fb200, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:383 +0x5f
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 49 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe580, 0xc0000fb210, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 50 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe580, 0xc0000fb220, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 51 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe580, 0xc0000fb230, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 52 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0000e9440)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 53 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000f8a10, 0x18)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00012d690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e9440)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 54 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000fe6e0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 55 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe6e0, 0xc0000fb5d0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 56 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe6e0, 0xc0000fb5e0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 57 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe6e0, 0xc0000fb5f0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 58 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe6e0, 0xc0000fb600, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 60 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000f8bd0, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000128e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e9680)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 61 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000fe840)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 5328 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000194840, 0xc0000fa9a0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 66 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0000e98c0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 67 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000f8d90, 0x28)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00009ee90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e98c0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 68 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000fe9a0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 69 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe9a0, 0xc0000fbd70, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 70 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe9a0, 0xc0000fbd80, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 71 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe9a0, 0xc0000fbd90, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 72 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe9a0, 0xc0000fbda0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 73 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0000e9b00)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 74 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000f8f50, 0x28)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00009de90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e9b00)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 75 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000feb00)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 76 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007b4e0, {0x69423c?, 0xc0002b9400?}, {0x638000, 0xc0002b9400}, {0x64d140, 0xc0002d4000})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/shardctrler.(*Clerk).Command(0xc00013eab0, 0xc0002b9400)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:73 +0xc5
6.5840/shardctrler.(*Clerk).Query(...)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:60
6.5840/shardkv.(*ShardKV).configurationAction(0xc0000feb00)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:341 +0x245
6.5840/shardkv.(*ShardKV).Monitor(0xc0000feb00, 0xc00014a1e0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:383 +0x5f
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 77 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000feb00, 0xc00014a1f0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 78 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000feb00, 0xc00014a200, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 79 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000feb00, 0xc00014a210, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 16873 [select]:
6.5840/labrpc.(*Network).processReq(0xc0000c6320, {{0x63de40, 0xc0000fb000}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0002841c0, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 5331 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000194840, 0xc0000fa9d0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 5333 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000f8a90, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00031c2c0?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc000264360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 16886 [runnable]:
reflect.Value.NumField({0x663560?, 0xc000301200?, 0x199?})
	/usr/local/go/src/reflect/value.go:2110 +0xa8
encoding/gob.(*Encoder).encodeStruct(0xc0002b46e0, 0xc0002b4718, 0xc0000112f0, {0x663560?, 0xc000301200?, 0xc0001715d0?})
	/usr/local/go/src/encoding/gob/encode.go:315 +0x1f3
encoding/gob.encOpFor.func4(0x663740?, 0xc00051b4c0, {0x663560?, 0xc000301200?, 0x0?})
	/usr/local/go/src/encoding/gob/encode.go:546 +0x6e
encoding/gob.(*Encoder).encodeStruct(0xc0002b46e0, 0xc0002b4718, 0xc000011320, {0x663740?, 0xc000301200?, 0x665820?})
	/usr/local/go/src/encoding/gob/encode.go:328 +0x2be
encoding/gob.encOpFor.func4(0x663740?, 0xc00051b480, {0x663740?, 0xc000301200?, 0xc000171778?})
	/usr/local/go/src/encoding/gob/encode.go:546 +0x6e
encoding/gob.(*Encoder).encodeStruct(0xc0002b46e0, 0xc0002b4718, 0xc0000112c0, {0x67d4e0?, 0xc00051b440?, 0xc00003ef08?})
	/usr/local/go/src/encoding/gob/encode.go:328 +0x2be
encoding/gob.(*Encoder).encode(0xc0002b46e0, 0xc0002b4718, {0x67d4e0?, 0xc00051b440?, 0xd800000000000000?}, 0xc000014180)
	/usr/local/go/src/encoding/gob/encode.go:666 +0x1a5
encoding/gob.(*Encoder).sendActualType(0xc0002b46e0, {0x6f3920, 0xc0003f1620}, 0xc00051b400, 0xc00030b7c0, {0x6f8478, 0x677fa0})
	/usr/local/go/src/encoding/gob/encoder.go:106 +0x177
encoding/gob.(*Encoder).sendType(0xc0002b46e0, {0x6f3920, 0xc0003f1620}, 0xc00051b400, {0x6f8478?, 0x677fa0?})
	/usr/local/go/src/encoding/gob/encoder.go:169 +0xf6
encoding/gob.(*Encoder).sendTypeDescriptor(0xc0002b46e0, {0x6f3920, 0xc0003f1620}, 0xc00051b400, 0xc00030b740)
	/usr/local/go/src/encoding/gob/encoder.go:191 +0x9e
encoding/gob.(*Encoder).EncodeValue(0xc0002b46e0, {0x6381c0?, 0xc00020c660?, 0x410c25?})
	/usr/local/go/src/encoding/gob/encoder.go:244 +0x38c
6.5840/labgob.(*LabEncoder).EncodeValue(0xc0001c67b0, {0x6381c0?, 0xc00020c660?, 0xc0005dbd20?})
	/home/ubuntu/my_6.5840/src/labgob/labgob.go:39 +0x65
6.5840/labrpc.(*Service).dispatch(0xc000015a00, {0x693bc4, 0xd}, {{0x63de40, 0xc00002d920}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0000fc000, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:519 +0x3a5
6.5840/labrpc.(*Server).dispatch(0xc0000109a8, {{0x63de40, 0xc00002d920}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0000fc000, 0x219, 0x400}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 16885
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 5329 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000194840, 0xc0000fa9b0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 16881 [select]:
6.5840/labrpc.(*Network).processReq(0xc0000c6320, {{0x63de40, 0xc00014a2f0}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000e0000, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 5334 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0001949a0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 5332 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc000264360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 16885 [select]:
6.5840/labrpc.(*Network).processReq(0xc0000c6320, {{0x63de40, 0xc00002d920}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0000fc000, 0x219, 0x400}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 16887 [select]:
6.5840/labrpc.(*Network).processReq(0xc0000c6320, {{0x63de40, 0xc00002d9a0}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc000298a00, 0x1de, 0x200}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 16883 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007a340, {0x693bbf?, 0xc0003ec7d0?}, {0x638280, 0xc0001d26c0}, {0x63c540, 0xc0001c6180})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/raft.(*Raft).sendAppendEntries(...)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1026
6.5840/raft.(*Raft).sendEntries(0xc0000e8240, 0x0, 0xc0001d26c0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:721 +0xc8
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 11
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 5337 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001949a0, 0xc0000fb860, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 5335 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001949a0, 0xc0000fb840, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 5338 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001949a0, 0xc0000fb870, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 5326 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000288e50, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00031c210?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0002cac60)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 16875 [select]:
6.5840/labrpc.(*Network).processReq(0xc0000c6320, {{0x63de40, 0xc0000fa850}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0002842a0, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 5327 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc000194840)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 5330 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000194840, 0xc0000fa9c0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 5339 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc000264900)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 5340 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000f9590, 0x1)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000581e00?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc000264900)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 5341 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc000194b00)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 5342 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000194b00, 0xc00033e470, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 5343 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000194b00, 0xc00033e480, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 5344 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000194b00, 0xc00033e490, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 5345 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000194b00, 0xc00033e4a0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 16884 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007a380, {0x693bbf?, 0x0?}, {0x638280, 0xc0001d2700}, {0x63c540, 0xc0001c6370})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/raft.(*Raft).sendAppendEntries(...)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1026
6.5840/raft.(*Raft).sendEntries(0xc0000e8240, 0x2, 0xc0001d2700)
	/home/ubuntu/my_6.5840/src/raft/raft.go:721 +0xc8
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 11
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 16815 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0x693bbf?, 0x12?, 0x6f8478?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc0000e8240)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).sendEntries(0xc0000e8240, 0x0, 0xc00057fe80)
	/home/ubuntu/my_6.5840/src/raft/raft.go:723 +0xf5
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 11
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 16882 [select]:
6.5840/shardctrler.(*ShardCtrler).Command(0xc00007c780, 0xc00035f7c0, 0xc00031c8c0)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:158 +0x21c
reflect.Value.call({0xc0000c63c0?, 0xc00005c7b0?, 0xc0001e9b18?}, {0x68fc67, 0x4}, {0xc0001e9d20, 0x3, 0xc0001e9b48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc0000c63c0?, 0xc00005c7b0?, 0xc0001c6010?}, {0xc0001e9d20?, 0x68a260?, 0x42635c?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015c40, {0x694248, 0x7}, {{0x63de40, 0xc00014a2f0}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000e0000, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc0000109f0, {{0x63de40, 0xc00014a2f0}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000e0000, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 16881
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 16816 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0x693bbf?, 0x12?, 0x6f8478?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc0000e8240)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).sendEntries(0xc0000e8240, 0x2, 0xc00057fec0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:723 +0xf5
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 11
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 16876 [select]:
6.5840/shardctrler.(*ShardCtrler).Command(0xc00007c780, 0xc0001dea50, 0xc0002d53b0)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:158 +0x21c
reflect.Value.call({0xc0000c63c0?, 0xc00005c7b0?, 0xc0001f3b18?}, {0x68fc67, 0x4}, {0xc0001f3d20, 0x3, 0xc0001f3b48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc0000c63c0?, 0xc00005c7b0?, 0xc000262180?}, {0xc0001f3d20?, 0x68a260?, 0xc000125438?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015c40, {0x694248, 0x7}, {{0x63de40, 0xc0000fa850}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0002842a0, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc0000109f0, {{0x63de40, 0xc0000fa850}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0002842a0, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 16875
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 16872 [select]:
6.5840/shardctrler.(*ShardCtrler).Command(0xc00007c780, 0xc0001deb90, 0xc0002d5b20)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:158 +0x21c
reflect.Value.call({0xc0000c63c0?, 0xc00005c7b0?, 0xc0001efb18?}, {0x68fc67, 0x4}, {0xc0001efd20, 0x3, 0xc0001efb48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc0000c63c0?, 0xc00005c7b0?, 0xc0002622d8?}, {0xc0001efd20?, 0x68a260?, 0xc00012c438?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015c40, {0x694248, 0x7}, {{0x63de40, 0xc0000fbf40}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc000284000, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc0000109f0, {{0x63de40, 0xc0000fbf40}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc000284000, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 16871
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 16888 [runnable]:
reflect.Value.NumField({0x657600?, 0xc0000c7220?, 0x19?})
	/usr/local/go/src/reflect/value.go:2110 +0xa8
encoding/gob.(*Encoder).encodeStruct(0xc0002b4640, 0xc000496060, 0xc00026e420, {0x657600?, 0xc0000c7220?, 0x407b0b?})
	/usr/local/go/src/encoding/gob/encode.go:315 +0x1f3
encoding/gob.(*Encoder).encode(0xc0002b4640, 0xc000496060, {0x657600?, 0xc0000c7220?, 0xc000015700?}, 0xc000015700)
	/usr/local/go/src/encoding/gob/encode.go:666 +0x1a5
encoding/gob.(*Encoder).encodeInterface(0xc0002b4640, 0xc0002b4678, {0x649ba0?, 0xc0005fa538?, 0x5f0274?})
	/usr/local/go/src/encoding/gob/encode.go:419 +0x86b
encoding/gob.encOpFor.func5(0x66a4c0?, 0xc00051a100, {0x649ba0?, 0xc0005fa538?, 0x6f8478?})
	/usr/local/go/src/encoding/gob/encode.go:554 +0xcf
encoding/gob.(*Encoder).encodeStruct(0xc0002b4640, 0xc0002b4678, 0xc000232078, {0x66a4c0?, 0xc0005fa528?, 0x96?})
	/usr/local/go/src/encoding/gob/encode.go:328 +0x2be
encoding/gob.encOpFor.func4(0x63c640?, 0xc00051a0c0, {0x66a4c0?, 0xc0005fa528?, 0x0?})
	/usr/local/go/src/encoding/gob/encode.go:546 +0x6e
encoding/gob.(*Encoder).encodeArray(0xc00051a040?, 0xc0003001b0?, {0x63c640?, 0xc00043a840?, 0x1000046d537?}, 0xc000308050, 0x0, 0x2f3, 0x0)
	/usr/local/go/src/encoding/gob/encode.go:351 +0x4ba
encoding/gob.encOpFor.func1(0x63c640?, 0xc00051a040, {0x63c640?, 0xc00043a840?, 0xc000433f20?})
	/usr/local/go/src/encoding/gob/encode.go:516 +0x139
encoding/gob.(*Encoder).encodeSingle(0xc00030a0c0?, 0x0?, 0x6f8478?, {0x63c640?, 0xc00043a840?, 0x407b0b?})
	/usr/local/go/src/encoding/gob/encode.go:301 +0x1f1
encoding/gob.(*Encoder).encode(0xc0002b4640, 0xc0002b4678, {0x63c640?, 0xc00043a840?, 0xc00030a0c0?}, 0xc00030a0c0)
	/usr/local/go/src/encoding/gob/encode.go:668 +0x1c8
encoding/gob.(*Encoder).EncodeValue(0xc0002b4640, {0x63c640?, 0xc00043a840?, 0x63c640?})
	/usr/local/go/src/encoding/gob/encoder.go:251 +0x405
encoding/gob.(*Encoder).Encode(0x63c640?, {0x63c640?, 0xc00043a840?})
	/usr/local/go/src/encoding/gob/encoder.go:176 +0x74
6.5840/labgob.(*LabEncoder).Encode(0xc0001c6770, {0x63c640, 0xc00043a840})
	/home/ubuntu/my_6.5840/src/labgob/labgob.go:34 +0x3f
6.5840/raft.(*Raft).persist(0xc0000e8360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:170 +0xce
6.5840/raft.(*Raft).AppendEntries(0xc0000e8360, 0xc0001d3ac0, 0xc00020ca50)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1105 +0x4c5
reflect.Value.call({0xc0000c6500?, 0xc00005c840?, 0xc00032fb18?}, {0x68fc67, 0x4}, {0xc00032fd20, 0x3, 0xc00032fb48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc0000c6500?, 0xc00005c840?, 0xc0001c6380?}, {0xc00032fd20?, 0x68a260?, 0xc0003ec438?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015e80, {0x693bc4, 0xd}, {{0x63de40, 0xc00002d9a0}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc000298a00, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc000010a38, {{0x63de40, 0xc00002d9a0}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc000298a00, 0x1de, 0x200}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 16887
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 16871 [select]:
6.5840/labrpc.(*Network).processReq(0xc0000c6320, {{0x63de40, 0xc0000fbf40}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc000284000, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58
exit status 2
FAIL	6.5840/shardkv	30.276s
