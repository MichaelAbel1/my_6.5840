Test (5B): servers miss configuration changes...
2025/01/04 13:01:47 {Node 0}{Group 100} started
2025/01/04 13:01:47 {Node 1}{Group 100} started
2025/01/04 13:01:47 {Node 2}{Group 100} started
2025/01/04 13:01:47 {Node 0}{Group 101} started
2025/01/04 13:01:47 {Node 1}{Group 101} started
2025/01/04 13:01:47 {Node 2}{Group 101} started
2025/01/04 13:01:47 {Node 0}{Group 102} started
2025/01/04 13:01:47 {Node 1}{Group 102} started
2025/01/04 13:01:47 {Node 2}{Group 102} started
2025/01/04 13:01:47 {Node 1}{Group 101} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:01:47 {Node 1}{Group 101} Execute Command Command{commandType: EmptyShards, Data: <nil>} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:47 {Node 2}{Group 101} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:01:47 {Node 0}{Group 101} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:01:47 {Node 1}{Group 101} fetches latest configuration {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} when currentConfigNum is 0
2025/01/04 13:01:47 {Node 1}{Group 102} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:01:47 {Node 2}{Group 102} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:01:47 {Node 2}{Group 102} Execute Command Command{commandType: EmptyShards, Data: <nil>} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:47 {Node 1}{Group 100} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:01:47 {Node 1}{Group 100} Execute Command Command{commandType: EmptyShards, Data: <nil>} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:47 {Node 0}{Group 102} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:01:47 {Node 2}{Group 100} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:01:47 {Node 0}{Group 100} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:01:47 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:01:47 {Node 2}{Group 101} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:01:47 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:01:47 {Node 1}{Group 100} fetches latest configuration {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} when currentConfigNum is 0
2025/01/04 13:01:47 {Node 2}{Group 102} fetches latest configuration {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} when currentConfigNum is 0
2025/01/04 13:01:47 {Node 1}{Group 101} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:01:47 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:47 {Node 0}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:01:47 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:01:47 {Node 1}{Group 100} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:01:47 {Node 1}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:47 {Node 0}{Group 101} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:01:47 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:01:47 {Node 0}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:01:47 {Node 0}{Group 102} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:01:47 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:01:47 {Node 1}{Group 102} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:01:47 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:01:47 {Node 2}{Group 100} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:01:47 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:01:47 {Node 0}{Group 100} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:01:47 {Node 2}{Group 102} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:01:47 {Node 2}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:48 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 iWyfP0eAkxsGaxYn82R2 Put 4303123714949458277 0}} 3 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {0 iWyfP0eAkxsGaxYn82R2 Put 4303123714949458277 0}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:48 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 iWyfP0eAkxsGaxYn82R2 Put 4303123714949458277 0}} 3 1 false [] 0 0}
2025/01/04 13:01:48 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 iWyfP0eAkxsGaxYn82R2 Put 4303123714949458277 0}} 3 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 i9Q_z260YazA9t89kAnK Put 4303123714949458277 1}} 4 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {1 i9Q_z260YazA9t89kAnK Put 4303123714949458277 1}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:48 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 i9Q_z260YazA9t89kAnK Put 4303123714949458277 1}} 4 1 false [] 0 0}
2025/01/04 13:01:48 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 i9Q_z260YazA9t89kAnK Put 4303123714949458277 1}} 4 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 aKwId2Kz4OPQF_tXdB8Q Put 4303123714949458277 2}} 5 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {2 aKwId2Kz4OPQF_tXdB8Q Put 4303123714949458277 2}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:48 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 aKwId2Kz4OPQF_tXdB8Q Put 4303123714949458277 2}} 5 1 false [] 0 0}
2025/01/04 13:01:48 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 aKwId2Kz4OPQF_tXdB8Q Put 4303123714949458277 2}} 5 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 AffdjWa6dFZ1eQKapYZ7 Put 4303123714949458277 3}} 6 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {3 AffdjWa6dFZ1eQKapYZ7 Put 4303123714949458277 3}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:48 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 AffdjWa6dFZ1eQKapYZ7 Put 4303123714949458277 3}} 6 1 false [] 0 0}
2025/01/04 13:01:48 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 AffdjWa6dFZ1eQKapYZ7 Put 4303123714949458277 3}} 6 1 false [] 0 0}
2025/01/04 13:01:48 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4 8yWkiC-seVH4xlt_ft_0 Put 4303123714949458277 4}} 7 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4 8yWkiC-seVH4xlt_ft_0 Put 4303123714949458277 4}} 7 1 false [] 0 0}
2025/01/04 13:01:48 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4 8yWkiC-seVH4xlt_ft_0 Put 4303123714949458277 4}} 7 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {4 8yWkiC-seVH4xlt_ft_0 Put 4303123714949458277 4}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:48 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5 e9gQ2mFdMTtqMOtQNXyc Put 4303123714949458277 5}} 8 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {5 e9gQ2mFdMTtqMOtQNXyc Put 4303123714949458277 5}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:48 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5 e9gQ2mFdMTtqMOtQNXyc Put 4303123714949458277 5}} 8 1 false [] 0 0}
2025/01/04 13:01:48 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5 e9gQ2mFdMTtqMOtQNXyc Put 4303123714949458277 5}} 8 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6 rqk2t3MNu-P8Gyv7mwZz Put 4303123714949458277 6}} 9 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {6 rqk2t3MNu-P8Gyv7mwZz Put 4303123714949458277 6}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:48 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6 rqk2t3MNu-P8Gyv7mwZz Put 4303123714949458277 6}} 9 1 false [] 0 0}
2025/01/04 13:01:48 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6 rqk2t3MNu-P8Gyv7mwZz Put 4303123714949458277 6}} 9 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 pirB73Rqq_SjyCpRirPt Put 4303123714949458277 7}} 10 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {7 pirB73Rqq_SjyCpRirPt Put 4303123714949458277 7}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:48 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 pirB73Rqq_SjyCpRirPt Put 4303123714949458277 7}} 10 1 false [] 0 0}
2025/01/04 13:01:48 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 pirB73Rqq_SjyCpRirPt Put 4303123714949458277 7}} 10 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8 _LfKaEj0JOtNiGQ7QOOQ Put 4303123714949458277 8}} 11 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {8 _LfKaEj0JOtNiGQ7QOOQ Put 4303123714949458277 8}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:48 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8 _LfKaEj0JOtNiGQ7QOOQ Put 4303123714949458277 8}} 11 1 false [] 0 0}
2025/01/04 13:01:48 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8 _LfKaEj0JOtNiGQ7QOOQ Put 4303123714949458277 8}} 11 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 dM1iYT58bPMkEdi2AJOn Put 4303123714949458277 9}} 12 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {9 dM1iYT58bPMkEdi2AJOn Put 4303123714949458277 9}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:48 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 dM1iYT58bPMkEdi2AJOn Put 4303123714949458277 9}} 12 1 false [] 0 0}
2025/01/04 13:01:48 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 dM1iYT58bPMkEdi2AJOn Put 4303123714949458277 9}} 12 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 4303123714949458277 10}} 13 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {0  Get 4303123714949458277 10}} with CommandReply CommandReply{Err: OK, Value: iWyfP0eAkxsGaxYn82R2}
2025/01/04 13:01:48 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 4303123714949458277 10}} 13 1 false [] 0 0}
2025/01/04 13:01:48 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 4303123714949458277 10}} 13 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 4303123714949458277 11}} 14 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {1  Get 4303123714949458277 11}} with CommandReply CommandReply{Err: OK, Value: i9Q_z260YazA9t89kAnK}
2025/01/04 13:01:48 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 4303123714949458277 11}} 14 1 false [] 0 0}
2025/01/04 13:01:48 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 4303123714949458277 11}} 14 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 4303123714949458277 12}} 15 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {2  Get 4303123714949458277 12}} with CommandReply CommandReply{Err: OK, Value: aKwId2Kz4OPQF_tXdB8Q}
2025/01/04 13:01:48 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 4303123714949458277 12}} 15 1 false [] 0 0}
2025/01/04 13:01:48 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 4303123714949458277 12}} 15 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3  Get 4303123714949458277 13}} 16 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {3  Get 4303123714949458277 13}} with CommandReply CommandReply{Err: OK, Value: AffdjWa6dFZ1eQKapYZ7}
2025/01/04 13:01:48 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3  Get 4303123714949458277 13}} 16 1 false [] 0 0}
2025/01/04 13:01:48 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3  Get 4303123714949458277 13}} 16 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4  Get 4303123714949458277 14}} 17 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {4  Get 4303123714949458277 14}} with CommandReply CommandReply{Err: OK, Value: 8yWkiC-seVH4xlt_ft_0}
2025/01/04 13:01:48 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4  Get 4303123714949458277 14}} 17 1 false [] 0 0}
2025/01/04 13:01:48 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4  Get 4303123714949458277 14}} 17 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5  Get 4303123714949458277 15}} 18 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {5  Get 4303123714949458277 15}} with CommandReply CommandReply{Err: OK, Value: e9gQ2mFdMTtqMOtQNXyc}
2025/01/04 13:01:48 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5  Get 4303123714949458277 15}} 18 1 false [] 0 0}
2025/01/04 13:01:48 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5  Get 4303123714949458277 15}} 18 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6  Get 4303123714949458277 16}} 19 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {6  Get 4303123714949458277 16}} with CommandReply CommandReply{Err: OK, Value: rqk2t3MNu-P8Gyv7mwZz}
2025/01/04 13:01:48 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6  Get 4303123714949458277 16}} 19 1 false [] 0 0}
2025/01/04 13:01:48 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6  Get 4303123714949458277 16}} 19 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7  Get 4303123714949458277 17}} 20 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {7  Get 4303123714949458277 17}} with CommandReply CommandReply{Err: OK, Value: pirB73Rqq_SjyCpRirPt}
2025/01/04 13:01:48 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7  Get 4303123714949458277 17}} 20 1 false [] 0 0}
2025/01/04 13:01:48 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7  Get 4303123714949458277 17}} 20 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8  Get 4303123714949458277 18}} 21 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {8  Get 4303123714949458277 18}} with CommandReply CommandReply{Err: OK, Value: _LfKaEj0JOtNiGQ7QOOQ}
2025/01/04 13:01:48 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8  Get 4303123714949458277 18}} 21 1 false [] 0 0}
2025/01/04 13:01:48 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8  Get 4303123714949458277 18}} 21 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4303123714949458277 19}} 22 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {9  Get 4303123714949458277 19}} with CommandReply CommandReply{Err: OK, Value: dM1iYT58bPMkEdi2AJOn}
2025/01/04 13:01:48 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4303123714949458277 19}} 22 1 false [] 0 0}
2025/01/04 13:01:48 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4303123714949458277 19}} 22 1 false [] 0 0}
2025/01/04 13:01:48 {Node 2}{Group 102} fetches latest configuration {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} when currentConfigNum is 1
2025/01/04 13:01:48 {Node 1}{Group 101} fetches latest configuration {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} when currentConfigNum is 1
2025/01/04 13:01:48 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 101} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:01:48 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:48 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:01:48 {Node 2}{Group 101} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:01:48 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:01:48 {Node 2}{Group 102} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:01:48 {Node 2}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:48 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 102} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:01:48 {Node 1}{Group 101} starts a PullTask to get shards [0 1 2 3 4] from group 100 when config is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:01:48 {Node 1}{Group 100} fetches latest configuration {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} when currentConfigNum is 1
2025/01/04 13:01:48 {Node 1}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 2, ShardIDs: [0 1 2 3 4]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:01:48 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0000fb150 1:0xc0000fb160 2:0xc0000fb170 3:0xc0000fb180 4:0xc0000fb190 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:01:48 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 23 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:01:48 {Node 1}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:48 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 23 1 false [] 0 0}
2025/01/04 13:01:48 {Node 2}{Group 100} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:01:48 {Node 2}{Group 102} fetches latest configuration {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 2
2025/01/04 13:01:48 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 4 1 false [] 0 0}
2025/01/04 13:01:48 {Node 2}{Group 102} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:48 {Node 2}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:48 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 4 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 102} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:48 {Node 1}{Group 101} starts a PullTask to get shards [0 1 2 3 4] from group 100 when config is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:01:48 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 4303123714949458277 20}} 24 1 false [] 0 0}
2025/01/04 13:01:48 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {0  Get 4303123714949458277 20}} with CommandReply CommandReply{Err: OK, Value: iWyfP0eAkxsGaxYn82R2}
2025/01/04 13:01:48 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 4303123714949458277 20}} 24 1 false [] 0 0}
2025/01/04 13:01:48 {Node 2}{Group 102} starts a PullTask to get shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:48 {Node 2}{Group 102} starts a PullTask to get shards [5 6] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:01:49 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0000fb150 1:0xc0000fb160 2:0xc0000fb170 3:0xc0000fb180 4:0xc0000fb190 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0000fa5c0 1:0xc0000fa5d0 2:0xc0000fa5e0 3:0xc0000fa5f0 4:0xc0000fa600 5:0xc0000fa610 6:0xc0000fa620 7:0xc0000fa630 8:0xc0000fa640 9:0xc0000fa650] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:01:49 {Node 1}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 2, ShardIDs: [0 1 2 3 4]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:aKwId2Kz4OPQF_tXdB8Q] 1:map[3:AffdjWa6dFZ1eQKapYZ7] 2:map[4:8yWkiC-seVH4xlt_ft_0] 3:map[5:e9gQ2mFdMTtqMOtQNXyc] 4:map[6:rqk2t3MNu-P8Gyv7mwZz]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:01:49 {Node 1}{Group 101} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:aKwId2Kz4OPQF_tXdB8Q] 1:map[3:AffdjWa6dFZ1eQKapYZ7] 2:map[4:8yWkiC-seVH4xlt_ft_0] 3:map[5:e9gQ2mFdMTtqMOtQNXyc] 4:map[6:rqk2t3MNu-P8Gyv7mwZz]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 2
2025/01/04 13:01:49 {Node 1}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 2 map[0:map[2:aKwId2Kz4OPQF_tXdB8Q] 1:map[3:AffdjWa6dFZ1eQKapYZ7] 2:map[4:8yWkiC-seVH4xlt_ft_0] 3:map[5:e9gQ2mFdMTtqMOtQNXyc] 4:map[6:rqk2t3MNu-P8Gyv7mwZz]] map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 4 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:aKwId2Kz4OPQF_tXdB8Q] 1:map[3:AffdjWa6dFZ1eQKapYZ7] 2:map[4:8yWkiC-seVH4xlt_ft_0] 3:map[5:e9gQ2mFdMTtqMOtQNXyc] 4:map[6:rqk2t3MNu-P8Gyv7mwZz]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101} Execute Command Command{commandType: InsertShards, Data: {OK 2 map[0:map[2:aKwId2Kz4OPQF_tXdB8Q] 1:map[3:AffdjWa6dFZ1eQKapYZ7] 2:map[4:8yWkiC-seVH4xlt_ft_0] 3:map[5:e9gQ2mFdMTtqMOtQNXyc] 4:map[6:rqk2t3MNu-P8Gyv7mwZz]] map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:01:49 {Node 2}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 2 map[0:map[2:aKwId2Kz4OPQF_tXdB8Q] 1:map[3:AffdjWa6dFZ1eQKapYZ7] 2:map[4:8yWkiC-seVH4xlt_ft_0] 3:map[5:e9gQ2mFdMTtqMOtQNXyc] 4:map[6:rqk2t3MNu-P8Gyv7mwZz]] map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 4 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:aKwId2Kz4OPQF_tXdB8Q] 1:map[3:AffdjWa6dFZ1eQKapYZ7] 2:map[4:8yWkiC-seVH4xlt_ft_0] 3:map[5:e9gQ2mFdMTtqMOtQNXyc] 4:map[6:rqk2t3MNu-P8Gyv7mwZz]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:01:49 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 JIqonzs_5NctFum2lyTo Append 4303123714949458277 21}} 25 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 JIqonzs_5NctFum2lyTo Append 4303123714949458277 21}} 25 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {0 JIqonzs_5NctFum2lyTo Append 4303123714949458277 21}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:49 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} starts a PullTask to get shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} starts a PullTask to get shards [5 6] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101} starts a GCTask to delete shards [3 4 1 2 0] from group 100 when config is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:01:49 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0000fb150 1:0xc0000fb160 2:0xc0000fb170 3:0xc0000fb180 4:0xc0000fb190 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 4303123714949458277 22}} 26 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {1  Get 4303123714949458277 22}} with CommandReply CommandReply{Err: OK, Value: i9Q_z260YazA9t89kAnK}
2025/01/04 13:01:49 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 4303123714949458277 22}} 26 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [3 4 1 2 0]}} 27 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 100}'s shards status are map[0:0xc0000fa5c0 1:0xc0000fa5d0 2:0xc0000fa5e0 3:0xc0000fa5f0 4:0xc0000fa600 5:0xc0000fa610 6:0xc0000fa620 7:0xc0000fa630 8:0xc0000fa640 9:0xc0000fa650] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [3 4 1 2 0]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100}'s shards status are map[0:0xc000352e60 1:0xc000352e40 2:0xc000352e50 3:0xc000352e20 4:0xc000352e30 5:0xc0000fa610 6:0xc0000fa620 7:0xc0000fa630 8:0xc0000fa640 9:0xc0000fa650] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [3 4 1 2 0]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {2 [3 4 1 2 0]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:49 {Node 1}{Group 100} processes GCTaskRequest ShardOperationArgs{ConfigNum: 2, ShardIDs: [3 4 1 2 0]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:01:49 {Node 1}{Group 101} deletes shards [3 4 1 2 0] in remote group successfully when currentConfigNum is 2
2025/01/04 13:01:49 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [3 4 1 2 0]}} 27 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 100}'s shards status are map[0:0xc0000fa9b0 1:0xc0000fa9c0 2:0xc0000fa9d0 3:0xc0000fa9e0 4:0xc0000fa9f0 5:0xc0000faa00 6:0xc0000faa10 7:0xc0000faa20 8:0xc0000faa30 9:0xc0000faa40] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [3 4 1 2 0]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:01:49 {Node 2}{Group 100}'s shards status are map[0:0xc0003531e0 1:0xc0003531c0 2:0xc0003531d0 3:0xc0003531a0 4:0xc0003531b0 5:0xc0000faa00 6:0xc0000faa10 7:0xc0000faa20 8:0xc0000faa30 9:0xc0000faa40] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [3 4 1 2 0]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100} fetches latest configuration {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 2
2025/01/04 13:01:49 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [3 4 1 2 0]}} 5 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 101}'s shards status are map[0:0xc0000fb150 1:0xc0000fb160 2:0xc0000fb170 3:0xc0000fb180 4:0xc0000fb190 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [3 4 1 2 0]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101}'s shards status are map[0:0xc0000fb150 1:0xc0000fb160 2:0xc0000fb170 3:0xc0000fb180 4:0xc0000fb190 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [3 4 1 2 0]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {2 [3 4 1 2 0]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:49 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [3 4 1 2 0]}} 5 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 101}'s shards status are map[0:0xc0000fb520 1:0xc0000fb530 2:0xc0000fb540 3:0xc0000fb550 4:0xc0000fb560 5:0xc0000fb570 6:0xc0000fb580 7:0xc0000fb590 8:0xc0000fb5a0 9:0xc0000fb5b0] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [3 4 1 2 0]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:01:49 {Node 2}{Group 101}'s shards status are map[0:0xc0000fb520 1:0xc0000fb530 2:0xc0000fb540 3:0xc0000fb550 4:0xc0000fb560 5:0xc0000fb570 6:0xc0000fb580 7:0xc0000fb590 8:0xc0000fb5a0 9:0xc0000fb5b0] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [3 4 1 2 0]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 28 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 100} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 hLvEF7Jm0_UbsvOogZp6 Append 4303123714949458277 23}} 29 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 100} Execute Command Command{commandType: Operation, Data: {1 hLvEF7Jm0_UbsvOogZp6 Append 4303123714949458277 23}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:49 {Node 1}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:49 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 28 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 100} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 hLvEF7Jm0_UbsvOogZp6 Append 4303123714949458277 23}} 29 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:01:49 {Node 2}{Group 102} starts a PullTask to get shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} starts a PullTask to get shards [5 6] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101} fetches latest configuration {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 2
2025/01/04 13:01:49 {Node 1}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc000352e60 1:0xc000352e40 2:0xc000352e50 3:0xc000352e20 4:0xc000352e30 5:0xc0000fa610 6:0xc0000fa620 7:0xc0000fa630 8:0xc0000fa640 9:0xc0000fa650] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 6 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 101} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:49 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 6 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 101} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:pirB73Rqq_SjyCpRirPt] 6:map[8:_LfKaEj0JOtNiGQ7QOOQ]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:01:49 {Node 2}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:pirB73Rqq_SjyCpRirPt] 6:map[8:_LfKaEj0JOtNiGQ7QOOQ]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 3
2025/01/04 13:01:49 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[5:map[7:pirB73Rqq_SjyCpRirPt] 6:map[8:_LfKaEj0JOtNiGQ7QOOQ]] map[4303123714949458277:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} 5 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:pirB73Rqq_SjyCpRirPt] 6:map[8:_LfKaEj0JOtNiGQ7QOOQ]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[5:map[7:pirB73Rqq_SjyCpRirPt] 6:map[8:_LfKaEj0JOtNiGQ7QOOQ]] map[4303123714949458277:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} 5 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:pirB73Rqq_SjyCpRirPt] 6:map[8:_LfKaEj0JOtNiGQ7QOOQ]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 3 map[5:map[7:pirB73Rqq_SjyCpRirPt] 6:map[8:_LfKaEj0JOtNiGQ7QOOQ]] map[4303123714949458277:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:01:49 {Node 1}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:aKwId2Kz4OPQF_tXdB8Q]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:01:49 {Node 2}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:aKwId2Kz4OPQF_tXdB8Q]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 3
2025/01/04 13:01:49 {Node 2}{Group 102} starts a GCTask to delete shards [5 6] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[0:map[2:aKwId2Kz4OPQF_tXdB8Q]] map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 6 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:aKwId2Kz4OPQF_tXdB8Q]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 3 map[0:map[2:aKwId2Kz4OPQF_tXdB8Q]] map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:01:49 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[0:map[2:aKwId2Kz4OPQF_tXdB8Q]] map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 6 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:aKwId2Kz4OPQF_tXdB8Q]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 30 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 100}'s shards status are map[0:0xc000352e60 1:0xc000352e40 2:0xc000352e50 3:0xc000352e20 4:0xc000352e30 5:0xc0000fa610 6:0xc0000fa620 7:0xc0000fa630 8:0xc0000fa640 9:0xc0000fa650] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100}'s shards status are map[0:0xc000352e60 1:0xc000352e40 2:0xc000352e50 3:0xc000352e20 4:0xc000352e30 5:0xc00030fec0 6:0xc00030fed0 7:0xc0000fa630 8:0xc0000fa640 9:0xc0000fa650] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 30 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 100}'s shards status are map[0:0xc0003531e0 1:0xc0003531c0 2:0xc0003531d0 3:0xc0003531a0 4:0xc0003531b0 5:0xc0000faa00 6:0xc0000faa10 7:0xc0000faa20 8:0xc0000faa30 9:0xc0000faa40] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {3 [5 6]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:49 {Node 1}{Group 100} processes GCTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:01:49 {Node 2}{Group 100}'s shards status are map[0:0xc0003531e0 1:0xc0003531c0 2:0xc0003531d0 3:0xc0003531a0 4:0xc0003531b0 5:0xc000412150 6:0xc000412160 7:0xc0000faa20 8:0xc0000faa30 9:0xc0000faa40] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} deletes shards [5 6] in remote group successfully when currentConfigNum is 3
2025/01/04 13:01:49 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 7 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 102}'s shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102}'s shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {3 [5 6]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:49 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 7 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 102}'s shards status are map[0:0xc0000fbcc0 1:0xc0000fbcd0 2:0xc0000fbce0 3:0xc0000fbcf0 4:0xc0000fbd00 5:0xc0000fbd10 6:0xc0000fbd20 7:0xc0000fbd30 8:0xc0000fbd40 9:0xc0000fbd50] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 102}'s shards status are map[0:0xc0000fbcc0 1:0xc0000fbcd0 2:0xc0000fbce0 3:0xc0000fbcf0 4:0xc0000fbd00 5:0xc0000fbd10 6:0xc0000fbd20 7:0xc0000fbd30 8:0xc0000fbd40 9:0xc0000fbd50] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100} fetches latest configuration {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 3
2025/01/04 13:01:49 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0000fb150 1:0xc0000fb160 2:0xc0000fb170 3:0xc0000fb180 4:0xc0000fb190 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2  Get 4303123714949458277 24}} 8 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {2  Get 4303123714949458277 24}} with CommandReply CommandReply{Err: OK, Value: aKwId2Kz4OPQF_tXdB8Q}
2025/01/04 13:01:49 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2  Get 4303123714949458277 24}} 8 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 102} starts a GCTask to delete shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 vXIqgYkDtMSqB3HkAixT Append 4303123714949458277 25}} 9 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {2 vXIqgYkDtMSqB3HkAixT Append 4303123714949458277 25}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:49 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 vXIqgYkDtMSqB3HkAixT Append 4303123714949458277 25}} 9 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 31 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 100} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:49 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 31 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 100} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100} starts a PullTask to get shards [3 1] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 7 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 101}'s shards status are map[0:0xc0000fb150 1:0xc0000fb160 2:0xc0000fb170 3:0xc0000fb180 4:0xc0000fb190 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101}'s shards status are map[0:0xc0001919e0 1:0xc0000fb160 2:0xc0000fb170 3:0xc0000fb180 4:0xc0000fb190 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {3 [0]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:49 {Node 1}{Group 101} processes GCTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:01:49 {Node 2}{Group 102} deletes shards [0] in remote group successfully when currentConfigNum is 3
2025/01/04 13:01:49 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 7 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 101}'s shards status are map[0:0xc0000fb520 1:0xc0000fb530 2:0xc0000fb540 3:0xc0000fb550 4:0xc0000fb560 5:0xc0000fb570 6:0xc0000fb580 7:0xc0000fb590 8:0xc0000fb5a0 9:0xc0000fb5b0] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 101}'s shards status are map[0:0xc000191e00 1:0xc0000fb530 2:0xc0000fb540 3:0xc0000fb550 4:0xc0000fb560 5:0xc0000fb570 6:0xc0000fb580 7:0xc0000fb590 8:0xc0000fb5a0 9:0xc0000fb5b0] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 10 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 102}'s shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102}'s shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {3 [0]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:49 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 10 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 102}'s shards status are map[0:0xc0000fbcc0 1:0xc0000fbcd0 2:0xc0000fbce0 3:0xc0000fbcf0 4:0xc0000fbd00 5:0xc0000fbd10 6:0xc0000fbd20 7:0xc0000fbd30 8:0xc0000fbd40 9:0xc0000fbd50] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 102}'s shards status are map[0:0xc0000fbcc0 1:0xc0000fbcd0 2:0xc0000fbce0 3:0xc0000fbcf0 4:0xc0000fbd00 5:0xc0000fbd10 6:0xc0000fbd20 7:0xc0000fbd30 8:0xc0000fbd40 9:0xc0000fbd50] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101} fetches latest configuration {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 3
2025/01/04 13:01:49 {Node 1}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:01:49 {Node 1}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc000352e60 1:0xc000352e40 2:0xc000352e50 3:0xc000352e20 4:0xc000352e30 5:0xc00030fec0 6:0xc00030fed0 7:0xc0000fa630 8:0xc0000fa640 9:0xc0000fa650] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 8 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 101} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 8 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 101} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:49 {Node 1}{Group 100} starts a PullTask to get shards [3 1] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} fetches latest configuration {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 3
2025/01/04 13:01:49 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 11 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 102} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:49 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 11 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 102} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} starts a PullTask to get shards [4 2] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc000352e60 1:0xc000352e40 2:0xc000352e50 3:0xc000352e20 4:0xc000352e30 5:0xc00030fec0 6:0xc00030fed0 7:0xc0000fa630 8:0xc0000fa640 9:0xc0000fa650] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0001919e0 1:0xc0000fb160 2:0xc0000fb170 3:0xc0000fb180 4:0xc0000fb190 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:AffdjWa6dFZ1eQKapYZ7] 3:map[5:e9gQ2mFdMTtqMOtQNXyc]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:01:49 {Node 1}{Group 100} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:AffdjWa6dFZ1eQKapYZ7] 3:map[5:e9gQ2mFdMTtqMOtQNXyc]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 4
2025/01/04 13:01:49 {Node 1}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [4 2]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:8yWkiC-seVH4xlt_ft_0] 4:map[6:rqk2t3MNu-P8Gyv7mwZz]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:01:49 {Node 2}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:8yWkiC-seVH4xlt_ft_0] 4:map[6:rqk2t3MNu-P8Gyv7mwZz]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 4
2025/01/04 13:01:49 {Node 1}{Group 100} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[1:map[3:AffdjWa6dFZ1eQKapYZ7] 3:map[5:e9gQ2mFdMTtqMOtQNXyc]] map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 32 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 100} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:AffdjWa6dFZ1eQKapYZ7] 3:map[5:e9gQ2mFdMTtqMOtQNXyc]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 100} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[1:map[3:AffdjWa6dFZ1eQKapYZ7] 3:map[5:e9gQ2mFdMTtqMOtQNXyc]] map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 32 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 100} Execute Command Command{commandType: InsertShards, Data: {OK 4 map[1:map[3:AffdjWa6dFZ1eQKapYZ7] 3:map[5:e9gQ2mFdMTtqMOtQNXyc]] map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:01:49 {Node 2}{Group 100} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:AffdjWa6dFZ1eQKapYZ7] 3:map[5:e9gQ2mFdMTtqMOtQNXyc]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100} starts a GCTask to delete shards [3 1] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[2:map[4:8yWkiC-seVH4xlt_ft_0] 4:map[6:rqk2t3MNu-P8Gyv7mwZz]] map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 12 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[2:map[4:8yWkiC-seVH4xlt_ft_0] 4:map[6:rqk2t3MNu-P8Gyv7mwZz]] map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 12 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:8yWkiC-seVH4xlt_ft_0] 4:map[6:rqk2t3MNu-P8Gyv7mwZz]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:8yWkiC-seVH4xlt_ft_0] 4:map[6:rqk2t3MNu-P8Gyv7mwZz]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 4 map[2:map[4:8yWkiC-seVH4xlt_ft_0] 4:map[6:rqk2t3MNu-P8Gyv7mwZz]] map[4303123714949458277:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:01:49 {Node 1}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc000352e60 1:0xc000352e40 2:0xc000352e50 3:0xc000352e20 4:0xc000352e30 5:0xc00030fec0 6:0xc00030fed0 7:0xc0000fa630 8:0xc0000fa640 9:0xc0000fa650] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} starts a GCTask to delete shards [2 4] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0001919e0 1:0xc0000fb160 2:0xc0000fb170 3:0xc0000fb180 4:0xc0000fb190 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [3 1]}} 9 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 101}'s shards status are map[0:0xc0001919e0 1:0xc0000fb160 2:0xc0000fb170 3:0xc0000fb180 4:0xc0000fb190 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101}'s shards status are map[0:0xc0001919e0 1:0xc00030e3b0 2:0xc0000fb170 3:0xc00030e3a0 4:0xc0000fb190 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {4 [3 1]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:49 {Node 1}{Group 101} processes GCTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:01:49 {Node 1}{Group 100} deletes shards [3 1] in remote group successfully when currentConfigNum is 4
2025/01/04 13:01:49 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [3 1]}} 9 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 101}'s shards status are map[0:0xc000191e00 1:0xc0000fb530 2:0xc0000fb540 3:0xc0000fb550 4:0xc0000fb560 5:0xc0000fb570 6:0xc0000fb580 7:0xc0000fb590 8:0xc0000fb5a0 9:0xc0000fb5b0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 101}'s shards status are map[0:0xc000191e00 1:0xc0002c29e0 2:0xc0000fb540 3:0xc0002c29d0 4:0xc0000fb560 5:0xc0000fb570 6:0xc0000fb580 7:0xc0000fb590 8:0xc0000fb5a0 9:0xc0000fb5b0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [3 1]}} 33 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 100}'s shards status are map[0:0xc000352e60 1:0xc000352e40 2:0xc000352e50 3:0xc000352e20 4:0xc000352e30 5:0xc00030fec0 6:0xc00030fed0 7:0xc0000fa630 8:0xc0000fa640 9:0xc0000fa650] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100}'s shards status are map[0:0xc000352e60 1:0xc000352e40 2:0xc000352e50 3:0xc000352e20 4:0xc000352e30 5:0xc00030fec0 6:0xc00030fed0 7:0xc0000fa630 8:0xc0000fa640 9:0xc0000fa650] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {4 [3 1]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:49 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [3 1]}} 33 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 100}'s shards status are map[0:0xc0003531e0 1:0xc0003531c0 2:0xc0003531d0 3:0xc0003531a0 4:0xc0003531b0 5:0xc000412150 6:0xc000412160 7:0xc0000faa20 8:0xc0000faa30 9:0xc0000faa40] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 100}'s shards status are map[0:0xc0003531e0 1:0xc0003531c0 2:0xc0003531d0 3:0xc0003531a0 4:0xc0003531b0 5:0xc000412150 6:0xc000412160 7:0xc0000faa20 8:0xc0000faa30 9:0xc0000faa40] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 10 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 101}'s shards status are map[0:0xc0001919e0 1:0xc00030e3b0 2:0xc0000fb170 3:0xc00030e3a0 4:0xc0000fb190 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101}'s shards status are map[0:0xc0001919e0 1:0xc00030e3b0 2:0xc00030f1b0 3:0xc00030e3a0 4:0xc00030f1c0 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {4 [2 4]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:49 {Node 1}{Group 101} processes GCTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:01:49 {Node 2}{Group 102} deletes shards [2 4] in remote group successfully when currentConfigNum is 4
2025/01/04 13:01:49 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 10 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 101}'s shards status are map[0:0xc000191e00 1:0xc0002c29e0 2:0xc0000fb540 3:0xc0002c29d0 4:0xc0000fb560 5:0xc0000fb570 6:0xc0000fb580 7:0xc0000fb590 8:0xc0000fb5a0 9:0xc0000fb5b0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 101}'s shards status are map[0:0xc000191e00 1:0xc0002c29e0 2:0xc00030f5e0 3:0xc0002c29d0 4:0xc00030f5f0 5:0xc0000fb570 6:0xc0000fb580 7:0xc0000fb590 8:0xc0000fb5a0 9:0xc0000fb5b0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 13 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 102}'s shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102}'s shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {4 [2 4]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:49 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 13 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 102}'s shards status are map[0:0xc0000fbcc0 1:0xc0000fbcd0 2:0xc0000fbce0 3:0xc0000fbcf0 4:0xc0000fbd00 5:0xc0000fbd10 6:0xc0000fbd20 7:0xc0000fbd30 8:0xc0000fbd40 9:0xc0000fbd50] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 102}'s shards status are map[0:0xc0000fbcc0 1:0xc0000fbcd0 2:0xc0000fbce0 3:0xc0000fbcf0 4:0xc0000fbd00 5:0xc0000fbd10 6:0xc0000fbd20 7:0xc0000fbd30 8:0xc0000fbd40 9:0xc0000fbd50] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100} fetches latest configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 4
2025/01/04 13:01:49 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 34 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 100} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 34 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 100} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:49 {Node 1}{Group 101} fetches latest configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 4
2025/01/04 13:01:49 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 11 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 101} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 11 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:49 {Node 2}{Group 101} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} fetches latest configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 4
2025/01/04 13:01:49 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 14 1 false [] 0 0}
2025/01/04 13:01:49 {Node 2}{Group 102} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:49 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 14 1 false [] 0 0}
2025/01/04 13:01:49 {Node 1}{Group 102} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 2}{Group 102} starts a PullTask to get shards [8 9 3 7 1] from group 100 when config is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:49 {Node 1}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc000352e60 1:0xc000352e40 2:0xc000352e50 3:0xc000352e20 4:0xc000352e30 5:0xc00030fec0 6:0xc00030fed0 7:0xc0000fa630 8:0xc0000fa640 9:0xc0000fa650] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:50 {Node 1}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 5, ShardIDs: [8 9 3 7 1]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:AffdjWa6dFZ1eQKapYZ7] 3:map[5:e9gQ2mFdMTtqMOtQNXyc] 7:map[9:dM1iYT58bPMkEdi2AJOn] 8:map[0:iWyfP0eAkxsGaxYn82R2JIqonzs_5NctFum2lyTo] 9:map[1:i9Q_z260YazA9t89kAnKhLvEF7Jm0_UbsvOogZp6]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:01:50 {Node 2}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:AffdjWa6dFZ1eQKapYZ7] 3:map[5:e9gQ2mFdMTtqMOtQNXyc] 7:map[9:dM1iYT58bPMkEdi2AJOn] 8:map[0:iWyfP0eAkxsGaxYn82R2JIqonzs_5NctFum2lyTo] 9:map[1:i9Q_z260YazA9t89kAnKhLvEF7Jm0_UbsvOogZp6]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 5
2025/01/04 13:01:50 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:50 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 5 map[1:map[3:AffdjWa6dFZ1eQKapYZ7] 3:map[5:e9gQ2mFdMTtqMOtQNXyc] 7:map[9:dM1iYT58bPMkEdi2AJOn] 8:map[0:iWyfP0eAkxsGaxYn82R2JIqonzs_5NctFum2lyTo] 9:map[1:i9Q_z260YazA9t89kAnKhLvEF7Jm0_UbsvOogZp6]] map[4303123714949458277:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} 15 1 false [] 0 0}
2025/01/04 13:01:50 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:AffdjWa6dFZ1eQKapYZ7] 3:map[5:e9gQ2mFdMTtqMOtQNXyc] 7:map[9:dM1iYT58bPMkEdi2AJOn] 8:map[0:iWyfP0eAkxsGaxYn82R2JIqonzs_5NctFum2lyTo] 9:map[1:i9Q_z260YazA9t89kAnKhLvEF7Jm0_UbsvOogZp6]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:50 {Node 2}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 5 map[1:map[3:AffdjWa6dFZ1eQKapYZ7] 3:map[5:e9gQ2mFdMTtqMOtQNXyc] 7:map[9:dM1iYT58bPMkEdi2AJOn] 8:map[0:iWyfP0eAkxsGaxYn82R2JIqonzs_5NctFum2lyTo] 9:map[1:i9Q_z260YazA9t89kAnKhLvEF7Jm0_UbsvOogZp6]] map[4303123714949458277:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:01:50 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 5 map[1:map[3:AffdjWa6dFZ1eQKapYZ7] 3:map[5:e9gQ2mFdMTtqMOtQNXyc] 7:map[9:dM1iYT58bPMkEdi2AJOn] 8:map[0:iWyfP0eAkxsGaxYn82R2JIqonzs_5NctFum2lyTo] 9:map[1:i9Q_z260YazA9t89kAnKhLvEF7Jm0_UbsvOogZp6]] map[4303123714949458277:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} 15 1 false [] 0 0}
2025/01/04 13:01:50 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:AffdjWa6dFZ1eQKapYZ7] 3:map[5:e9gQ2mFdMTtqMOtQNXyc] 7:map[9:dM1iYT58bPMkEdi2AJOn] 8:map[0:iWyfP0eAkxsGaxYn82R2JIqonzs_5NctFum2lyTo] 9:map[1:i9Q_z260YazA9t89kAnKhLvEF7Jm0_UbsvOogZp6]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:50 {Node 1}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc000352e60 1:0xc000352e40 2:0xc000352e50 3:0xc000352e20 4:0xc000352e30 5:0xc00030fec0 6:0xc00030fed0 7:0xc0000fa630 8:0xc0000fa640 9:0xc0000fa650] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:50 {Node 2}{Group 102} starts a GCTask to delete shards [9 3 8 7 1] from group 100 when config is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:50 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3  Get 4303123714949458277 26}} 16 1 false [] 0 0}
2025/01/04 13:01:50 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {3  Get 4303123714949458277 26}} with CommandReply CommandReply{Err: OK, Value: AffdjWa6dFZ1eQKapYZ7}
2025/01/04 13:01:50 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3  Get 4303123714949458277 26}} 16 1 false [] 0 0}
2025/01/04 13:01:50 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:50 {Node 1}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc000352e60 1:0xc000352e40 2:0xc000352e50 3:0xc000352e20 4:0xc000352e30 5:0xc00030fec0 6:0xc00030fed0 7:0xc0000fa630 8:0xc0000fa640 9:0xc0000fa650] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:50 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [9 3 8 7 1]}} 35 1 false [] 0 0}
2025/01/04 13:01:50 {Node 1}{Group 100}'s shards status are map[0:0xc000352e60 1:0xc000352e40 2:0xc000352e50 3:0xc000352e20 4:0xc000352e30 5:0xc00030fec0 6:0xc00030fed0 7:0xc0000fa630 8:0xc0000fa640 9:0xc0000fa650] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [9 3 8 7 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:50 {Node 1}{Group 100}'s shards status are map[0:0xc000352e60 1:0xc0001d5370 2:0xc000352e50 3:0xc0001d5340 4:0xc000352e30 5:0xc00030fec0 6:0xc00030fed0 7:0xc0001d5360 8:0xc0001d5350 9:0xc0001d5330] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [9 3 8 7 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:50 {Node 1}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {5 [9 3 8 7 1]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:50 {Node 1}{Group 100} processes GCTaskRequest ShardOperationArgs{ConfigNum: 5, ShardIDs: [9 3 8 7 1]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:01:50 {Node 2}{Group 102} deletes shards [9 3 8 7 1] in remote group successfully when currentConfigNum is 5
2025/01/04 13:01:50 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [9 3 8 7 1]}} 35 1 false [] 0 0}
2025/01/04 13:01:50 {Node 2}{Group 100}'s shards status are map[0:0xc0003531e0 1:0xc0003531c0 2:0xc0003531d0 3:0xc0003531a0 4:0xc0003531b0 5:0xc000412150 6:0xc000412160 7:0xc0000faa20 8:0xc0000faa30 9:0xc0000faa40] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [9 3 8 7 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:50 {Node 2}{Group 100}'s shards status are map[0:0xc0003531e0 1:0xc0001d56f0 2:0xc0003531d0 3:0xc0001d56c0 4:0xc0003531b0 5:0xc000412150 6:0xc000412160 7:0xc0001d56e0 8:0xc0001d56d0 9:0xc0001d56b0] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [9 3 8 7 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:50 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3 KxPMyVnMhp2Afg2COb1S Append 4303123714949458277 27}} 17 1 false [] 0 0}
2025/01/04 13:01:50 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {3 KxPMyVnMhp2Afg2COb1S Append 4303123714949458277 27}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:50 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [9 3 8 7 1]}} 18 1 false [] 0 0}
2025/01/04 13:01:50 {Node 2}{Group 102}'s shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [9 3 8 7 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:50 {Node 2}{Group 102}'s shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [9 3 8 7 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:50 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3 KxPMyVnMhp2Afg2COb1S Append 4303123714949458277 27}} 17 1 false [] 0 0}
2025/01/04 13:01:50 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [9 3 8 7 1]}} 18 1 false [] 0 0}
2025/01/04 13:01:50 {Node 1}{Group 102}'s shards status are map[0:0xc0000fbcc0 1:0xc0000fbcd0 2:0xc0000fbce0 3:0xc0000fbcf0 4:0xc0000fbd00 5:0xc0000fbd10 6:0xc0000fbd20 7:0xc0000fbd30 8:0xc0000fbd40 9:0xc0000fbd50] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [9 3 8 7 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:50 {Node 2}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {5 [9 3 8 7 1]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:50 {Node 1}{Group 102}'s shards status are map[0:0xc0000fbcc0 1:0xc0000fbcd0 2:0xc0000fbce0 3:0xc0000fbcf0 4:0xc0000fbd00 5:0xc0000fbd10 6:0xc0000fbd20 7:0xc0000fbd30 8:0xc0000fbd40 9:0xc0000fbd50] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [9 3 8 7 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:50 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4  Get 4303123714949458277 28}} 19 1 false [] 0 0}
2025/01/04 13:01:50 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {4  Get 4303123714949458277 28}} with CommandReply CommandReply{Err: OK, Value: 8yWkiC-seVH4xlt_ft_0}
2025/01/04 13:01:50 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4  Get 4303123714949458277 28}} 19 1 false [] 0 0}
2025/01/04 13:01:50 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4 0UhkTVeGsNABLHiyLObV Append 4303123714949458277 29}} 20 1 false [] 0 0}
2025/01/04 13:01:50 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {4 0UhkTVeGsNABLHiyLObV Append 4303123714949458277 29}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:50 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4 0UhkTVeGsNABLHiyLObV Append 4303123714949458277 29}} 20 1 false [] 0 0}
2025/01/04 13:01:50 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5  Get 4303123714949458277 30}} 21 1 false [] 0 0}
2025/01/04 13:01:50 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {5  Get 4303123714949458277 30}} with CommandReply CommandReply{Err: OK, Value: e9gQ2mFdMTtqMOtQNXyc}
2025/01/04 13:01:50 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5  Get 4303123714949458277 30}} 21 1 false [] 0 0}
2025/01/04 13:01:50 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5 Y4cqy4UxKIXyskjWbuz3 Append 4303123714949458277 31}} 22 1 false [] 0 0}
2025/01/04 13:01:50 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {5 Y4cqy4UxKIXyskjWbuz3 Append 4303123714949458277 31}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:50 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5 Y4cqy4UxKIXyskjWbuz3 Append 4303123714949458277 31}} 22 1 false [] 0 0}
2025/01/04 13:01:50 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6  Get 4303123714949458277 32}} 23 1 false [] 0 0}
2025/01/04 13:01:50 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {6  Get 4303123714949458277 32}} with CommandReply CommandReply{Err: OK, Value: rqk2t3MNu-P8Gyv7mwZz}
2025/01/04 13:01:50 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6  Get 4303123714949458277 32}} 23 1 false [] 0 0}
2025/01/04 13:01:50 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6 ijp5YMZDRy6FQGJ2QzDQ Append 4303123714949458277 33}} 24 1 false [] 0 0}
2025/01/04 13:01:50 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6 ijp5YMZDRy6FQGJ2QzDQ Append 4303123714949458277 33}} 24 1 false [] 0 0}
2025/01/04 13:01:50 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {6 ijp5YMZDRy6FQGJ2QzDQ Append 4303123714949458277 33}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:50 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 4303123714949458277 34}} 25 1 false [] 0 0}
2025/01/04 13:01:50 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {7  Get 4303123714949458277 34}} with CommandReply CommandReply{Err: OK, Value: pirB73Rqq_SjyCpRirPt}
2025/01/04 13:01:50 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 4303123714949458277 34}} 25 1 false [] 0 0}
2025/01/04 13:01:50 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 YS16dc_LQ1XmanqhRlgE Append 4303123714949458277 35}} 26 1 false [] 0 0}
2025/01/04 13:01:50 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {7 YS16dc_LQ1XmanqhRlgE Append 4303123714949458277 35}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:50 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 YS16dc_LQ1XmanqhRlgE Append 4303123714949458277 35}} 26 1 false [] 0 0}
2025/01/04 13:01:50 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 4303123714949458277 36}} 27 1 false [] 0 0}
2025/01/04 13:01:50 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {8  Get 4303123714949458277 36}} with CommandReply CommandReply{Err: OK, Value: _LfKaEj0JOtNiGQ7QOOQ}
2025/01/04 13:01:50 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 4303123714949458277 36}} 27 1 false [] 0 0}
2025/01/04 13:01:51 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 71YXq4Jg8nOsiHUHhKaB Append 4303123714949458277 37}} 28 1 false [] 0 0}
2025/01/04 13:01:51 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {8 71YXq4Jg8nOsiHUHhKaB Append 4303123714949458277 37}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:51 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 71YXq4Jg8nOsiHUHhKaB Append 4303123714949458277 37}} 28 1 false [] 0 0}
2025/01/04 13:01:51 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4303123714949458277 38}} 29 1 false [] 0 0}
2025/01/04 13:01:51 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {9  Get 4303123714949458277 38}} with CommandReply CommandReply{Err: OK, Value: dM1iYT58bPMkEdi2AJOn}
2025/01/04 13:01:51 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4303123714949458277 38}} 29 1 false [] 0 0}
2025/01/04 13:01:51 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 s797Ws5SlPR_sabIl2B5 Append 4303123714949458277 39}} 30 1 false [] 0 0}
2025/01/04 13:01:51 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 s797Ws5SlPR_sabIl2B5 Append 4303123714949458277 39}} 30 1 false [] 0 0}
2025/01/04 13:01:51 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {9 s797Ws5SlPR_sabIl2B5 Append 4303123714949458277 39}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:51 {Node 2}{Group 102} fetches latest configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 5
2025/01/04 13:01:51 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 4303123714949458277 40}} 31 1 false [] 0 0}
2025/01/04 13:01:51 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 32 1 false [] 0 0}
2025/01/04 13:01:51 {Node 2}{Group 102} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:51 {Node 2}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:51 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 4303123714949458277 40}} 31 1 false [] 0 0}
2025/01/04 13:01:51 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 32 1 false [] 0 0}
2025/01/04 13:01:51 {Node 1}{Group 102} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:51 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {0  Get 4303123714949458277 40}} with CommandReply CommandReply{Err: OK, Value: iWyfP0eAkxsGaxYn82R2JIqonzs_5NctFum2lyTo}
2025/01/04 13:01:51 {Node 1}{Group 101} fetches latest configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 5
2025/01/04 13:01:51 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 12 1 false [] 0 0}
2025/01/04 13:01:51 {Node 1}{Group 101} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:51 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:51 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 12 1 false [] 0 0}
2025/01/04 13:01:51 {Node 2}{Group 101} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:51 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 o3PCv6kpNR9FC3OGjkXu Append 4303123714949458277 41}} 33 1 false [] 0 0}
2025/01/04 13:01:51 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 o3PCv6kpNR9FC3OGjkXu Append 4303123714949458277 41}} 33 1 false [] 0 0}
2025/01/04 13:01:51 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {0 o3PCv6kpNR9FC3OGjkXu Append 4303123714949458277 41}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:51 {Node 1}{Group 101} starts a PullTask to get shards [1 2 3 4 0] from group 102 when config is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:51 {Node 1}{Group 100} fetches latest configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 5
2025/01/04 13:01:51 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 36 1 false [] 0 0}
2025/01/04 13:01:51 {Node 1}{Group 100} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:51 {Node 1}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:51 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 36 1 false [] 0 0}
2025/01/04 13:01:51 {Node 2}{Group 100} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:51 {Node 2}{Group 102} processes PullTaskRequest ShardOperationArgs{ConfigNum: 6, ShardIDs: [1 2 3 4 0]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:aKwId2Kz4OPQF_tXdB8QvXIqgYkDtMSqB3HkAixT] 1:map[3:AffdjWa6dFZ1eQKapYZ7KxPMyVnMhp2Afg2COb1S] 2:map[4:8yWkiC-seVH4xlt_ft_00UhkTVeGsNABLHiyLObV] 3:map[5:e9gQ2mFdMTtqMOtQNXycY4cqy4UxKIXyskjWbuz3] 4:map[6:rqk2t3MNu-P8Gyv7mwZzijp5YMZDRy6FQGJ2QzDQ]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:01:51 {Node 1}{Group 101} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:aKwId2Kz4OPQF_tXdB8QvXIqgYkDtMSqB3HkAixT] 1:map[3:AffdjWa6dFZ1eQKapYZ7KxPMyVnMhp2Afg2COb1S] 2:map[4:8yWkiC-seVH4xlt_ft_00UhkTVeGsNABLHiyLObV] 3:map[5:e9gQ2mFdMTtqMOtQNXycY4cqy4UxKIXyskjWbuz3] 4:map[6:rqk2t3MNu-P8Gyv7mwZzijp5YMZDRy6FQGJ2QzDQ]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 6
2025/01/04 13:01:51 {Node 1}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 6 map[0:map[2:aKwId2Kz4OPQF_tXdB8QvXIqgYkDtMSqB3HkAixT] 1:map[3:AffdjWa6dFZ1eQKapYZ7KxPMyVnMhp2Afg2COb1S] 2:map[4:8yWkiC-seVH4xlt_ft_00UhkTVeGsNABLHiyLObV] 3:map[5:e9gQ2mFdMTtqMOtQNXycY4cqy4UxKIXyskjWbuz3] 4:map[6:rqk2t3MNu-P8Gyv7mwZzijp5YMZDRy6FQGJ2QzDQ]] map[4303123714949458277:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]}} 13 1 false [] 0 0}
2025/01/04 13:01:51 {Node 1}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:aKwId2Kz4OPQF_tXdB8QvXIqgYkDtMSqB3HkAixT] 1:map[3:AffdjWa6dFZ1eQKapYZ7KxPMyVnMhp2Afg2COb1S] 2:map[4:8yWkiC-seVH4xlt_ft_00UhkTVeGsNABLHiyLObV] 3:map[5:e9gQ2mFdMTtqMOtQNXycY4cqy4UxKIXyskjWbuz3] 4:map[6:rqk2t3MNu-P8Gyv7mwZzijp5YMZDRy6FQGJ2QzDQ]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:51 {Node 1}{Group 101} Execute Command Command{commandType: InsertShards, Data: {OK 6 map[0:map[2:aKwId2Kz4OPQF_tXdB8QvXIqgYkDtMSqB3HkAixT] 1:map[3:AffdjWa6dFZ1eQKapYZ7KxPMyVnMhp2Afg2COb1S] 2:map[4:8yWkiC-seVH4xlt_ft_00UhkTVeGsNABLHiyLObV] 3:map[5:e9gQ2mFdMTtqMOtQNXycY4cqy4UxKIXyskjWbuz3] 4:map[6:rqk2t3MNu-P8Gyv7mwZzijp5YMZDRy6FQGJ2QzDQ]] map[4303123714949458277:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:01:51 {Node 2}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 6 map[0:map[2:aKwId2Kz4OPQF_tXdB8QvXIqgYkDtMSqB3HkAixT] 1:map[3:AffdjWa6dFZ1eQKapYZ7KxPMyVnMhp2Afg2COb1S] 2:map[4:8yWkiC-seVH4xlt_ft_00UhkTVeGsNABLHiyLObV] 3:map[5:e9gQ2mFdMTtqMOtQNXycY4cqy4UxKIXyskjWbuz3] 4:map[6:rqk2t3MNu-P8Gyv7mwZzijp5YMZDRy6FQGJ2QzDQ]] map[4303123714949458277:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]}} 13 1 false [] 0 0}
2025/01/04 13:01:51 {Node 2}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:aKwId2Kz4OPQF_tXdB8QvXIqgYkDtMSqB3HkAixT] 1:map[3:AffdjWa6dFZ1eQKapYZ7KxPMyVnMhp2Afg2COb1S] 2:map[4:8yWkiC-seVH4xlt_ft_00UhkTVeGsNABLHiyLObV] 3:map[5:e9gQ2mFdMTtqMOtQNXycY4cqy4UxKIXyskjWbuz3] 4:map[6:rqk2t3MNu-P8Gyv7mwZzijp5YMZDRy6FQGJ2QzDQ]], LastOperations: map[4303123714949458277:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:51 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:51 {Node 1}{Group 101} starts a GCTask to delete shards [1 2 3 4 0] from group 102 when config is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:51 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0001919e0 1:0xc00030e3b0 2:0xc00030f1b0 3:0xc00030e3a0 4:0xc00030f1c0 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:51 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1  Get 4303123714949458277 42}} 34 1 false [] 0 0}
2025/01/04 13:01:51 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [1 2 3 4 0]}} 35 1 false [] 0 0}
2025/01/04 13:01:51 {Node 2}{Group 102}'s shards status are map[0:0xc00014a130 1:0xc00014a140 2:0xc00014a150 3:0xc00014a160 4:0xc00014a170 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [1 2 3 4 0]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:51 {Node 2}{Group 102}'s shards status are map[0:0xc0000fb880 1:0xc0000fb840 2:0xc0000fb850 3:0xc0000fb860 4:0xc0000fb870 5:0xc00014a180 6:0xc00014a190 7:0xc00014a1a0 8:0xc00014a1b0 9:0xc00014a1c0] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [1 2 3 4 0]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:51 {Node 2}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {6 [1 2 3 4 0]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:51 {Node 2}{Group 102} processes GCTaskRequest ShardOperationArgs{ConfigNum: 6, ShardIDs: [1 2 3 4 0]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:01:51 {Node 1}{Group 101} deletes shards [1 2 3 4 0] in remote group successfully when currentConfigNum is 6
2025/01/04 13:01:51 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1  Get 4303123714949458277 42}} 34 1 false [] 0 0}
2025/01/04 13:01:51 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [1 2 3 4 0]}} 35 1 false [] 0 0}
2025/01/04 13:01:51 {Node 1}{Group 102}'s shards status are map[0:0xc0000fbcc0 1:0xc0000fbcd0 2:0xc0000fbce0 3:0xc0000fbcf0 4:0xc0000fbd00 5:0xc0000fbd10 6:0xc0000fbd20 7:0xc0000fbd30 8:0xc0000fbd40 9:0xc0000fbd50] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [1 2 3 4 0]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:51 {Node 1}{Group 102}'s shards status are map[0:0xc00014a240 1:0xc00014a120 2:0xc00014a1d0 3:0xc00014a220 4:0xc00014a230 5:0xc0000fbd10 6:0xc0000fbd20 7:0xc0000fbd30 8:0xc0000fbd40 9:0xc0000fbd50] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [1 2 3 4 0]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:51 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {1  Get 4303123714949458277 42}} with CommandReply CommandReply{Err: OK, Value: i9Q_z260YazA9t89kAnKhLvEF7Jm0_UbsvOogZp6}
2025/01/04 13:01:51 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [1 2 3 4 0]}} 14 1 false [] 0 0}
2025/01/04 13:01:51 {Node 1}{Group 101}'s shards status are map[0:0xc0001919e0 1:0xc00030e3b0 2:0xc00030f1b0 3:0xc00030e3a0 4:0xc00030f1c0 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [1 2 3 4 0]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:51 {Node 1}{Group 101}'s shards status are map[0:0xc0001919e0 1:0xc00030e3b0 2:0xc00030f1b0 3:0xc00030e3a0 4:0xc00030f1c0 5:0xc0000fb1a0 6:0xc0000fb1b0 7:0xc0000fb1c0 8:0xc0000fb1d0 9:0xc0000fb1e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [1 2 3 4 0]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:51 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [1 2 3 4 0]}} 14 1 false [] 0 0}
2025/01/04 13:01:51 {Node 2}{Group 101}'s shards status are map[0:0xc000191e00 1:0xc0002c29e0 2:0xc00030f5e0 3:0xc0002c29d0 4:0xc00030f5f0 5:0xc0000fb570 6:0xc0000fb580 7:0xc0000fb590 8:0xc0000fb5a0 9:0xc0000fb5b0] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [1 2 3 4 0]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:51 {Node 2}{Group 101}'s shards status are map[0:0xc000191e00 1:0xc0002c29e0 2:0xc00030f5e0 3:0xc0002c29d0 4:0xc00030f5f0 5:0xc0000fb570 6:0xc0000fb580 7:0xc0000fb590 8:0xc0000fb5a0 9:0xc0000fb5b0] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [1 2 3 4 0]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:01:51 {Node 1}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {6 [1 2 3 4 0]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:51 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1 KB_RlZ5YgGKIoCGZyqW2 Append 4303123714949458277 43}} 36 1 false [] 0 0}
2025/01/04 13:01:51 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1 KB_RlZ5YgGKIoCGZyqW2 Append 4303123714949458277 43}} 36 1 false [] 0 0}
2025/01/04 13:01:51 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {1 KB_RlZ5YgGKIoCGZyqW2 Append 4303123714949458277 43}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:51 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2  Get 4303123714949458277 44}} 15 1 false [] 0 0}
2025/01/04 13:01:51 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {2  Get 4303123714949458277 44}} with CommandReply CommandReply{Err: OK, Value: aKwId2Kz4OPQF_tXdB8QvXIqgYkDtMSqB3HkAixT}
2025/01/04 13:01:51 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2  Get 4303123714949458277 44}} 15 1 false [] 0 0}
2025/01/04 13:01:51 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2 yM5V_7V5iGrxFcLKzks3 Append 4303123714949458277 45}} 16 1 false [] 0 0}
2025/01/04 13:01:51 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {2 yM5V_7V5iGrxFcLKzks3 Append 4303123714949458277 45}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:51 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2 yM5V_7V5iGrxFcLKzks3 Append 4303123714949458277 45}} 16 1 false [] 0 0}
2025/01/04 13:01:51 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3  Get 4303123714949458277 46}} 17 1 false [] 0 0}
2025/01/04 13:01:51 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {3  Get 4303123714949458277 46}} with CommandReply CommandReply{Err: OK, Value: AffdjWa6dFZ1eQKapYZ7KxPMyVnMhp2Afg2COb1S}
2025/01/04 13:01:51 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3  Get 4303123714949458277 46}} 17 1 false [] 0 0}
2025/01/04 13:01:51 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3 41cjxnnSHsu1Cp76j_Tk Append 4303123714949458277 47}} 18 1 false [] 0 0}
2025/01/04 13:01:51 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {3 41cjxnnSHsu1Cp76j_Tk Append 4303123714949458277 47}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:51 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3 41cjxnnSHsu1Cp76j_Tk Append 4303123714949458277 47}} 18 1 false [] 0 0}
2025/01/04 13:01:52 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 4303123714949458277 48}} 19 1 false [] 0 0}
2025/01/04 13:01:52 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {4  Get 4303123714949458277 48}} with CommandReply CommandReply{Err: OK, Value: 8yWkiC-seVH4xlt_ft_00UhkTVeGsNABLHiyLObV}
2025/01/04 13:01:52 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 4303123714949458277 48}} 19 1 false [] 0 0}
2025/01/04 13:01:52 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4 yqkMZbnh2SzgyFjNeHmg Append 4303123714949458277 49}} 20 1 false [] 0 0}
2025/01/04 13:01:52 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {4 yqkMZbnh2SzgyFjNeHmg Append 4303123714949458277 49}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:52 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4 yqkMZbnh2SzgyFjNeHmg Append 4303123714949458277 49}} 20 1 false [] 0 0}
2025/01/04 13:01:52 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5  Get 4303123714949458277 50}} 21 1 false [] 0 0}
2025/01/04 13:01:52 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {5  Get 4303123714949458277 50}} with CommandReply CommandReply{Err: OK, Value: e9gQ2mFdMTtqMOtQNXycY4cqy4UxKIXyskjWbuz3}
2025/01/04 13:01:52 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5  Get 4303123714949458277 50}} 21 1 false [] 0 0}
2025/01/04 13:01:52 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 YKxsO4w9KN8ambTdZyLg Append 4303123714949458277 51}} 22 1 false [] 0 0}
2025/01/04 13:01:52 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 YKxsO4w9KN8ambTdZyLg Append 4303123714949458277 51}} 22 1 false [] 0 0}
2025/01/04 13:01:52 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {5 YKxsO4w9KN8ambTdZyLg Append 4303123714949458277 51}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:52 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 4303123714949458277 52}} 23 1 false [] 0 0}
2025/01/04 13:01:52 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {6  Get 4303123714949458277 52}} with CommandReply CommandReply{Err: OK, Value: rqk2t3MNu-P8Gyv7mwZzijp5YMZDRy6FQGJ2QzDQ}
2025/01/04 13:01:52 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 4303123714949458277 52}} 23 1 false [] 0 0}
2025/01/04 13:01:52 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 gq3Ab5RXMnTWigUAsCd9 Append 4303123714949458277 53}} 24 1 false [] 0 0}
2025/01/04 13:01:52 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {6 gq3Ab5RXMnTWigUAsCd9 Append 4303123714949458277 53}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:52 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 gq3Ab5RXMnTWigUAsCd9 Append 4303123714949458277 53}} 24 1 false [] 0 0}
2025/01/04 13:01:52 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 4303123714949458277 54}} 37 1 false [] 0 0}
2025/01/04 13:01:52 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {7  Get 4303123714949458277 54}} with CommandReply CommandReply{Err: OK, Value: pirB73Rqq_SjyCpRirPtYS16dc_LQ1XmanqhRlgE}
2025/01/04 13:01:52 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 4303123714949458277 54}} 37 1 false [] 0 0}
2025/01/04 13:01:52 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 C3nX1wUk9lGZSXp0gwZG Append 4303123714949458277 55}} 38 1 false [] 0 0}
2025/01/04 13:01:52 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {7 C3nX1wUk9lGZSXp0gwZG Append 4303123714949458277 55}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:52 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 C3nX1wUk9lGZSXp0gwZG Append 4303123714949458277 55}} 38 1 false [] 0 0}
2025/01/04 13:01:52 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 4303123714949458277 56}} 39 1 false [] 0 0}
2025/01/04 13:01:52 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {8  Get 4303123714949458277 56}} with CommandReply CommandReply{Err: OK, Value: _LfKaEj0JOtNiGQ7QOOQ71YXq4Jg8nOsiHUHhKaB}
2025/01/04 13:01:52 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 4303123714949458277 56}} 39 1 false [] 0 0}
2025/01/04 13:01:52 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 kYMJf-jadhjKIFf9thMu Append 4303123714949458277 57}} 40 1 false [] 0 0}
2025/01/04 13:01:52 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {8 kYMJf-jadhjKIFf9thMu Append 4303123714949458277 57}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:52 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 kYMJf-jadhjKIFf9thMu Append 4303123714949458277 57}} 40 1 false [] 0 0}
2025/01/04 13:01:52 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4303123714949458277 58}} 41 1 false [] 0 0}
2025/01/04 13:01:52 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {9  Get 4303123714949458277 58}} with CommandReply CommandReply{Err: OK, Value: dM1iYT58bPMkEdi2AJOns797Ws5SlPR_sabIl2B5}
2025/01/04 13:01:52 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4303123714949458277 58}} 41 1 false [] 0 0}
2025/01/04 13:01:52 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 0lU_MJD2rkafTiRnC5YZ Append 4303123714949458277 59}} 42 1 false [] 0 0}
2025/01/04 13:01:52 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {9 0lU_MJD2rkafTiRnC5YZ Append 4303123714949458277 59}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:01:52 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 0lU_MJD2rkafTiRnC5YZ Append 4303123714949458277 59}} 42 1 false [] 0 0}
2025/01/04 13:01:52 {Node 0}{Group 100} started
2025/01/04 13:01:52 {Node 0}{Group 101} started
2025/01/04 13:01:52 {Node 0}{Group 102} started
2025/01/04 13:01:52 {Node 0}{Group 101} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 71 255 138 1 10 1 10 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 1 1 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 113 255 138 1 12 1 10 255 202 255 202 255 202 255 202 255 202 255 204 255 204 255 204 255 204 255 204 1 2 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 0 15 255 165 4 1 2 255 166 0 1 4 1 255 162 0 0 31 255 161 3 1 2 255 162 0 1 2 1 2 75 86 1 255 164 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 163 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 164 0 1 12 1 12 0 0 254 1 63 255 166 0 10 12 1 0 0 16 1 0 0 2 1 1 1 51 60 65 102 102 100 106 87 97 54 100 70 90 49 101 81 75 97 112 89 90 55 75 120 80 77 121 86 110 77 104 112 50 65 102 103 50 67 79 98 49 83 52 49 99 106 120 110 110 83 72 115 117 49 67 112 55 54 106 95 84 107 0 4 1 1 1 52 60 56 121 87 107 105 67 45 115 101 86 72 52 120 108 116 95 102 116 95 48 48 85 104 107 84 86 101 71 115 78 65 66 76 72 105 121 76 79 98 86 121 113 107 77 90 98 110 104 50 83 122 103 121 70 106 78 101 72 109 103 0 6 1 1 1 53 40 101 57 103 81 50 109 70 100 77 84 116 113 77 79 116 81 78 88 121 99 89 52 99 113 121 52 85 120 75 73 88 121 115 107 106 87 98 117 122 51 0 8 1 1 1 54 40 114 113 107 50 116 51 77 78 117 45 80 56 71 121 118 55 109 119 90 122 105 106 112 53 89 77 90 68 82 121 54 70 81 71 74 50 81 122 68 81 0 0 1 1 1 50 60 97 75 119 73 100 50 75 122 52 79 80 81 70 95 116 88 100 66 56 81 118 88 73 113 103 89 107 68 116 77 83 113 66 51 72 107 65 105 120 84 121 77 53 86 95 55 86 53 105 71 114 120 70 99 76 75 122 107 115 51 0 10 1 0 0 14 1 0 0 18 1 0 0 15 255 169 4 1 2 255 170 0 1 4 1 255 168 0 0 51 255 167 3 1 2 255 168 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 160 0 0 0 44 255 159 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 160 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 22 255 170 0 1 248 119 111 136 112 140 62 82 202 1 98 1 1 2 79 75 0 0] 1 21}
2025/01/04 13:01:52 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 YKxsO4w9KN8ambTdZyLg Append 4303123714949458277 51}} 22 1 false [] 0 0}
2025/01/04 13:01:52 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 4303123714949458277 52}} 23 1 false [] 0 0}
2025/01/04 13:01:52 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 gq3Ab5RXMnTWigUAsCd9 Append 4303123714949458277 53}} 24 1 false [] 0 0}
2025/01/04 13:01:52 {Node 0}{Group 100} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 255 155 255 138 1 6 1 10 255 204 255 202 255 202 255 202 255 202 255 204 255 204 255 200 255 200 255 200 1 3 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 113 255 138 1 8 1 10 255 204 255 200 255 204 255 200 255 204 255 204 255 204 255 200 255 200 255 200 1 2 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 15 255 165 4 1 2 255 166 0 1 4 1 255 162 0 0 31 255 161 3 1 2 255 162 0 1 2 1 2 75 86 1 255 164 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 163 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 164 0 1 12 1 12 0 0 255 203 255 166 0 10 14 1 1 1 57 20 100 77 49 105 89 84 53 56 98 80 77 107 69 100 105 50 65 74 79 110 0 18 1 1 1 49 40 105 57 81 95 122 50 54 48 89 97 122 65 57 116 56 57 107 65 110 75 104 76 118 69 70 55 74 109 48 95 85 98 115 118 79 111 103 90 112 54 0 0 1 0 0 6 1 1 1 53 20 101 57 103 81 50 109 70 100 77 84 116 113 77 79 116 81 78 88 121 99 1 3 0 8 1 0 0 10 1 0 0 12 1 0 0 2 1 1 1 51 20 65 102 102 100 106 87 97 54 100 70 90 49 101 81 75 97 112 89 90 55 1 3 0 4 1 0 0 16 1 1 1 48 40 105 87 121 102 80 48 101 65 107 120 115 71 97 120 89 110 56 50 82 50 74 73 113 111 110 122 115 95 53 78 99 116 70 117 109 50 108 121 84 111 0 15 255 169 4 1 2 255 170 0 1 4 1 255 168 0 0 51 255 167 3 1 2 255 168 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 160 0 0 0 44 255 159 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 160 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 22 255 170 0 1 248 119 111 136 112 140 62 82 202 1 46 1 1 2 79 75 0 0] 1 32}
2025/01/04 13:01:52 {Node 0}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [3 1]}} 33 1 false [] 0 0}
2025/01/04 13:01:52 {Node 0}{Group 100} discards outdated shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:01:52 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 34 1 false [] 0 0}
2025/01/04 13:01:52 {Node 0}{Group 100} discards outdated configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:01:52 {Node 0}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [9 3 8 7 1]}} 35 1 false [] 0 0}
2025/01/04 13:01:52 {Node 0}{Group 100} discards outdated shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [9 3 8 7 1]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:01:52 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 36 1 false [] 0 0}
2025/01/04 13:01:52 {Node 0}{Group 100} discards outdated configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:01:52 {Node 0}{Group 102} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 71 255 138 1 10 1 10 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 1 1 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 113 255 138 1 12 1 10 255 202 255 202 255 202 255 202 255 202 255 204 255 204 255 204 255 204 255 204 1 2 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 15 255 165 4 1 2 255 166 0 1 4 1 255 162 0 0 31 255 161 3 1 2 255 162 0 1 2 1 2 75 86 1 255 164 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 163 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 164 0 1 12 1 12 0 0 254 1 43 255 166 0 10 8 1 0 0 16 1 1 1 48 60 105 87 121 102 80 48 101 65 107 120 115 71 97 120 89 110 56 50 82 50 74 73 113 111 110 122 115 95 53 78 99 116 70 117 109 50 108 121 84 111 111 51 80 67 118 54 107 112 78 82 57 70 67 51 79 71 106 107 88 117 0 18 1 1 1 49 60 105 57 81 95 122 50 54 48 89 97 122 65 57 116 56 57 107 65 110 75 104 76 118 69 70 55 74 109 48 95 85 98 115 118 79 111 103 90 112 54 75 66 95 82 108 90 53 89 103 71 75 73 111 67 71 90 121 113 87 50 0 0 1 0 0 6 1 0 0 10 1 1 1 55 40 112 105 114 66 55 51 82 113 113 95 83 106 121 67 112 82 105 114 80 116 89 83 49 54 100 99 95 76 81 49 88 109 97 110 113 104 82 108 103 69 0 12 1 1 1 56 40 95 76 102 75 97 69 106 48 74 79 116 78 105 71 81 55 81 79 79 81 55 49 89 88 113 52 74 103 56 110 79 115 105 72 85 72 104 75 97 66 0 14 1 1 1 57 40 100 77 49 105 89 84 53 56 98 80 77 107 69 100 105 50 65 74 79 110 115 55 57 55 87 115 53 83 108 80 82 95 115 97 98 73 108 50 66 53 0 2 1 0 0 4 1 0 0 15 255 169 4 1 2 255 170 0 1 4 1 255 168 0 0 51 255 167 3 1 2 255 168 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 160 0 0 0 44 255 159 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 160 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 22 255 170 0 1 248 119 111 136 112 140 62 82 202 1 86 1 1 2 79 75 0 0] 1 37}
2025/01/04 13:01:52 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 C3nX1wUk9lGZSXp0gwZG Append 4303123714949458277 55}} 38 1 false [] 0 0}
2025/01/04 13:01:52 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 4303123714949458277 56}} 39 1 false [] 0 0}
2025/01/04 13:01:52 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 kYMJf-jadhjKIFf9thMu Append 4303123714949458277 57}} 40 1 false [] 0 0}
2025/01/04 13:01:52 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4303123714949458277 58}} 41 1 false [] 0 0}
2025/01/04 13:01:52 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 0lU_MJD2rkafTiRnC5YZ Append 4303123714949458277 59}} 42 1 false [] 0 0}
panic: test timed out after 30s
	running tests:
		TestMissChange5B (30s)

goroutine 16564 [running]:
testing.(*M).startAlarm.func1()
	/usr/local/go/src/testing/testing.go:2373 +0x385
created by time.goFunc
	/usr/local/go/src/time/sleep.go:215 +0x2d

goroutine 1 [chan receive]:
testing.(*T).Run(0xc0000a6b60, {0x692c32?, 0x0?}, 0x6aa390)
	/usr/local/go/src/testing/testing.go:1751 +0x3ab
testing.runTests.func1(0xc0000a6b60)
	/usr/local/go/src/testing/testing.go:2168 +0x37
testing.tRunner(0xc0000a6b60, 0xc0000c3c70)
	/usr/local/go/src/testing/testing.go:1690 +0xf4
testing.runTests(0xc000010408, {0x87a3c0, 0xe, 0xe}, {0x471ad0?, 0x47173a?, 0x87f260?})
	/usr/local/go/src/testing/testing.go:2166 +0x43d
testing.(*M).Run(0xc0000a80a0)
	/usr/local/go/src/testing/testing.go:2034 +0x64a
main.main()
	_testmain.go:71 +0x9b

goroutine 6 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*Clerk).Command(0xc000102510, 0xc0001d1600)
	/home/ubuntu/my_6.5840/src/shardkv/client.go:106 +0xff
6.5840/shardkv.(*Clerk).Get(...)
	/home/ubuntu/my_6.5840/src/shardkv/client.go:73
6.5840/shardkv.check(0xc0000a6d00, 0xc000102510, {0x69a869, 0x1}, {0xc000228c80, 0x3c})
	/home/ubuntu/my_6.5840/src/shardkv/test_test.go:17 +0x95
6.5840/shardkv.TestMissChange5B(0xc0000a6d00)
	/home/ubuntu/my_6.5840/src/shardkv/test_test.go:351 +0x7b5
testing.tRunner(0xc0000a6d00, 0x6aa390)
	/usr/local/go/src/testing/testing.go:1690 +0xf4
created by testing.(*T).Run in goroutine 1
	/usr/local/go/src/testing/testing.go:1743 +0x390

goroutine 7 [select]:
6.5840/labrpc.MakeNetwork.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:160 +0xea
created by 6.5840/labrpc.MakeNetwork in goroutine 6
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:158 +0x196

goroutine 8 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0000e8120)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 9 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000015750, 0x195)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000506e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e8120)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 10 [chan receive]:
6.5840/shardctrler.(*ShardCtrler).applier(0xc00007c300)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:70 +0x87
created by 6.5840/shardctrler.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:62 +0x28a

goroutine 11 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0000e8240)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 12 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000015c10, 0x188)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0000e8240?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e8240)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 13 [chan receive]:
6.5840/shardctrler.(*ShardCtrler).applier(0xc00007c780)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:70 +0x87
created by 6.5840/shardctrler.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:62 +0x28a

goroutine 14 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0000e8360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 15 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000015dd0, 0x199)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000098e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e8360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 16 [chan receive]:
6.5840/shardctrler.(*ShardCtrler).applier(0xc00007c9c0)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:70 +0x87
created by 6.5840/shardctrler.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:62 +0x28a

goroutine 18 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000f8150, 0x16)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000057e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e85a0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 19 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000fe000)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 5101 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00062e2c0, 0xc0001d54b0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 5099 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00062e2c0, 0xc0001d5490, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 24 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0000e8900)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 25 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000f8310, 0x23)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00010b690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e8900)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 26 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000fe160)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 27 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe160, 0xc0000fa670, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 28 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe160, 0xc0000fa680, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 29 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe160, 0xc0000fa690, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 30 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe160, 0xc0000fa6a0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 31 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0000e8b40)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 32 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000f84d0, 0x23)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000106e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e8b40)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 33 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000fe2c0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 34 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe2c0, 0xc0000faa60, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 35 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe2c0, 0xc0000faa70, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 36 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe2c0, 0xc0000faa80, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 37 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe2c0, 0xc0000faa90, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 39 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000f8690, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000124690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e8ea0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 40 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000fe420)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 5178 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00062e580, 0xc000412490, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 45 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0000e90e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 46 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000f8850, 0x18)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00011fe90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e90e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 47 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000fe580)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 48 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe580, 0xc0000fb200, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 49 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe580, 0xc0000fb210, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 50 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe580, 0xc0000fb220, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 51 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe580, 0xc0000fb230, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 52 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0000e9320)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 53 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000f8a10, 0x18)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0004c6e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e9320)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 54 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000fe6e0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 55 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe6e0, 0xc0000fb5d0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 56 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe6e0, 0xc0000fb5e0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 57 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe6e0, 0xc0000fb5f0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 58 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe6e0, 0xc0000fb600, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 5104 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc00062e420)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 60 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000f8bd0, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000128e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e9560)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 61 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000fe840)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 5173 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00058c000)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 66 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0000e97a0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 67 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000f8d90, 0x27)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00009fe90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e97a0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 68 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000fe9a0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 69 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe9a0, 0xc0000fbd70, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 70 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe9a0, 0xc0000fbd80, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 71 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe9a0, 0xc0000fbd90, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 72 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000fe9a0, 0xc0000fbda0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 73 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0000e99e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 74 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0000f8f50, 0x27)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000149e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0000e99e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 75 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0000feb00)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 76 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000feb00, 0xc00014a1e0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 77 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000feb00, 0xc00014a1f0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 78 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000feb00, 0xc00014a200, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 79 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0000feb00, 0xc00014a210, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 5172 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00062e420, 0xc0001d5ce0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 5102 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0003b5c20)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 5175 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc00062e580)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 5170 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00062e420, 0xc0001d5cc0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 5169 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00062e420, 0xc0001d5cb0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 5177 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00062e580, 0xc000412480, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 5174 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0001d1010, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00031a420?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00058c000)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 5176 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00062e580, 0xc000412470, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 5171 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00062e420, 0xc0001d5cd0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 5179 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00062e580, 0xc0004124a0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 5103 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0001d09d0, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0001cebb0?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0003b5c20)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 5098 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00062e2c0, 0xc0001d5480, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 5096 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0003b2dd0, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000318370?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0003b4360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 5095 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0003b4360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 5100 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00062e2c0, 0xc0001d54a0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 5097 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc00062e2c0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8
exit status 2
FAIL	6.5840/shardkv	30.049s
