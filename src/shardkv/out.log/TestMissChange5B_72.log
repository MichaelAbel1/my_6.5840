Test (5B): servers miss configuration changes...
2025/01/04 13:02:12 {Node 0}{Group 100} started
2025/01/04 13:02:12 {Node 1}{Group 100} started
2025/01/04 13:02:12 {Node 2}{Group 100} started
2025/01/04 13:02:12 {Node 0}{Group 101} started
2025/01/04 13:02:12 {Node 1}{Group 101} started
2025/01/04 13:02:12 {Node 2}{Group 101} started
2025/01/04 13:02:12 {Node 0}{Group 102} started
2025/01/04 13:02:12 {Node 1}{Group 102} started
2025/01/04 13:02:12 {Node 2}{Group 102} started
2025/01/04 13:02:13 {Node 2}{Group 101} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 101} Execute Command Command{commandType: EmptyShards, Data: <nil>} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:13 {Node 0}{Group 101} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:13 {Node 1}{Group 101} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:13 {Node 1}{Group 102} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:13 {Node 1}{Group 102} Execute Command Command{commandType: EmptyShards, Data: <nil>} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: EmptyShards, Data: <nil>} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:13 {Node 0}{Group 100} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 102} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:13 {Node 0}{Group 102} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} fetches latest configuration {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} when currentConfigNum is 0
2025/01/04 13:02:13 {Node 1}{Group 102} fetches latest configuration {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} when currentConfigNum is 0
2025/01/04 13:02:13 {Node 2}{Group 101} fetches latest configuration {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} when currentConfigNum is 0
2025/01/04 13:02:13 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:13 {Node 1}{Group 102} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:13 {Node 1}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:13 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 101} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:13 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 102} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:13 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:13 {Node 1}{Group 101} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:13 {Node 0}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:13 {Node 0}{Group 102} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:13 {Node 0}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:13 {Node 0}{Group 101} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:13 {Node 2}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:13 {Node 1}{Group 100} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:13 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:13 {Node 0}{Group 100} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 6WmoDvnU9r97zFjzD9Ub Put 1192216819610779660 0}} 3 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {0 6WmoDvnU9r97zFjzD9Ub Put 1192216819610779660 0}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 6WmoDvnU9r97zFjzD9Ub Put 1192216819610779660 0}} 3 1 false [] 0 0}
2025/01/04 13:02:13 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 6WmoDvnU9r97zFjzD9Ub Put 1192216819610779660 0}} 3 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 Az1fL9IDHYWSSqQgbEou Put 1192216819610779660 1}} 4 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {1 Az1fL9IDHYWSSqQgbEou Put 1192216819610779660 1}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 Az1fL9IDHYWSSqQgbEou Put 1192216819610779660 1}} 4 1 false [] 0 0}
2025/01/04 13:02:13 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 Az1fL9IDHYWSSqQgbEou Put 1192216819610779660 1}} 4 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 qCn47shAXg222MdxUu_3 Put 1192216819610779660 2}} 5 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {2 qCn47shAXg222MdxUu_3 Put 1192216819610779660 2}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:13 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 qCn47shAXg222MdxUu_3 Put 1192216819610779660 2}} 5 1 false [] 0 0}
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 qCn47shAXg222MdxUu_3 Put 1192216819610779660 2}} 5 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 9N0XmIl72KhbudaZN4q0 Put 1192216819610779660 3}} 6 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {3 9N0XmIl72KhbudaZN4q0 Put 1192216819610779660 3}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 9N0XmIl72KhbudaZN4q0 Put 1192216819610779660 3}} 6 1 false [] 0 0}
2025/01/04 13:02:13 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 9N0XmIl72KhbudaZN4q0 Put 1192216819610779660 3}} 6 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4 TKKDcV2W_bGc6-KGdGxw Put 1192216819610779660 4}} 7 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {4 TKKDcV2W_bGc6-KGdGxw Put 1192216819610779660 4}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4 TKKDcV2W_bGc6-KGdGxw Put 1192216819610779660 4}} 7 1 false [] 0 0}
2025/01/04 13:02:13 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4 TKKDcV2W_bGc6-KGdGxw Put 1192216819610779660 4}} 7 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5 X2f1-9lz4Yq7P-PdZkxk Put 1192216819610779660 5}} 8 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {5 X2f1-9lz4Yq7P-PdZkxk Put 1192216819610779660 5}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5 X2f1-9lz4Yq7P-PdZkxk Put 1192216819610779660 5}} 8 1 false [] 0 0}
2025/01/04 13:02:13 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5 X2f1-9lz4Yq7P-PdZkxk Put 1192216819610779660 5}} 8 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6 ywDo-jfda4us3BuEIec8 Put 1192216819610779660 6}} 9 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {6 ywDo-jfda4us3BuEIec8 Put 1192216819610779660 6}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6 ywDo-jfda4us3BuEIec8 Put 1192216819610779660 6}} 9 1 false [] 0 0}
2025/01/04 13:02:13 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6 ywDo-jfda4us3BuEIec8 Put 1192216819610779660 6}} 9 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 HSMk8qro2OmWoCdhy_lu Put 1192216819610779660 7}} 10 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {7 HSMk8qro2OmWoCdhy_lu Put 1192216819610779660 7}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 HSMk8qro2OmWoCdhy_lu Put 1192216819610779660 7}} 10 1 false [] 0 0}
2025/01/04 13:02:13 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 HSMk8qro2OmWoCdhy_lu Put 1192216819610779660 7}} 10 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8 68l5FwvjK3uEy8hNJll4 Put 1192216819610779660 8}} 11 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {8 68l5FwvjK3uEy8hNJll4 Put 1192216819610779660 8}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8 68l5FwvjK3uEy8hNJll4 Put 1192216819610779660 8}} 11 1 false [] 0 0}
2025/01/04 13:02:13 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8 68l5FwvjK3uEy8hNJll4 Put 1192216819610779660 8}} 11 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 hq_BxrLwIYz9FXGt0Wrf Put 1192216819610779660 9}} 12 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {9 hq_BxrLwIYz9FXGt0Wrf Put 1192216819610779660 9}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 hq_BxrLwIYz9FXGt0Wrf Put 1192216819610779660 9}} 12 1 false [] 0 0}
2025/01/04 13:02:13 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 hq_BxrLwIYz9FXGt0Wrf Put 1192216819610779660 9}} 12 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 1192216819610779660 10}} 13 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {0  Get 1192216819610779660 10}} with CommandReply CommandReply{Err: OK, Value: 6WmoDvnU9r97zFjzD9Ub}
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 1192216819610779660 10}} 13 1 false [] 0 0}
2025/01/04 13:02:13 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 1192216819610779660 10}} 13 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 1192216819610779660 11}} 14 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {1  Get 1192216819610779660 11}} with CommandReply CommandReply{Err: OK, Value: Az1fL9IDHYWSSqQgbEou}
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 1192216819610779660 11}} 14 1 false [] 0 0}
2025/01/04 13:02:13 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 1192216819610779660 11}} 14 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 1192216819610779660 12}} 15 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {2  Get 1192216819610779660 12}} with CommandReply CommandReply{Err: OK, Value: qCn47shAXg222MdxUu_3}
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 1192216819610779660 12}} 15 1 false [] 0 0}
2025/01/04 13:02:13 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 1192216819610779660 12}} 15 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3  Get 1192216819610779660 13}} 16 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {3  Get 1192216819610779660 13}} with CommandReply CommandReply{Err: OK, Value: 9N0XmIl72KhbudaZN4q0}
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3  Get 1192216819610779660 13}} 16 1 false [] 0 0}
2025/01/04 13:02:13 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3  Get 1192216819610779660 13}} 16 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4  Get 1192216819610779660 14}} 17 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {4  Get 1192216819610779660 14}} with CommandReply CommandReply{Err: OK, Value: TKKDcV2W_bGc6-KGdGxw}
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4  Get 1192216819610779660 14}} 17 1 false [] 0 0}
2025/01/04 13:02:13 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4  Get 1192216819610779660 14}} 17 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5  Get 1192216819610779660 15}} 18 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {5  Get 1192216819610779660 15}} with CommandReply CommandReply{Err: OK, Value: X2f1-9lz4Yq7P-PdZkxk}
2025/01/04 13:02:13 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5  Get 1192216819610779660 15}} 18 1 false [] 0 0}
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5  Get 1192216819610779660 15}} 18 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6  Get 1192216819610779660 16}} 19 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {6  Get 1192216819610779660 16}} with CommandReply CommandReply{Err: OK, Value: ywDo-jfda4us3BuEIec8}
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6  Get 1192216819610779660 16}} 19 1 false [] 0 0}
2025/01/04 13:02:13 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6  Get 1192216819610779660 16}} 19 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7  Get 1192216819610779660 17}} 20 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {7  Get 1192216819610779660 17}} with CommandReply CommandReply{Err: OK, Value: HSMk8qro2OmWoCdhy_lu}
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7  Get 1192216819610779660 17}} 20 1 false [] 0 0}
2025/01/04 13:02:13 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7  Get 1192216819610779660 17}} 20 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8  Get 1192216819610779660 18}} 21 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {8  Get 1192216819610779660 18}} with CommandReply CommandReply{Err: OK, Value: 68l5FwvjK3uEy8hNJll4}
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8  Get 1192216819610779660 18}} 21 1 false [] 0 0}
2025/01/04 13:02:13 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8  Get 1192216819610779660 18}} 21 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9  Get 1192216819610779660 19}} 22 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {9  Get 1192216819610779660 19}} with CommandReply CommandReply{Err: OK, Value: hq_BxrLwIYz9FXGt0Wrf}
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9  Get 1192216819610779660 19}} 22 1 false [] 0 0}
2025/01/04 13:02:13 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9  Get 1192216819610779660 19}} 22 1 false [] 0 0}
2025/01/04 13:02:13 {Node 1}{Group 102} fetches latest configuration {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} when currentConfigNum is 1
2025/01/04 13:02:13 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:02:13 {Node 1}{Group 102} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:13 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:02:13 {Node 1}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:13 {Node 2}{Group 102} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:13 {Node 2}{Group 100} fetches latest configuration {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} when currentConfigNum is 1
2025/01/04 13:02:13 {Node 2}{Group 101} fetches latest configuration {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} when currentConfigNum is 1
2025/01/04 13:02:13 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 101} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:13 {Node 2}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:13 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:02:13 {Node 1}{Group 101} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:13 {Node 2}{Group 101} starts a PullTask to get shards [1 2 3 4 0] from group 100 when config is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 23 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:13 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 1192216819610779660 20}} 24 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {0  Get 1192216819610779660 20}} with CommandReply CommandReply{Err: OK, Value: 6WmoDvnU9r97zFjzD9Ub}
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 23 1 false [] 0 0}
2025/01/04 13:02:13 {Node 1}{Group 100} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:13 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 1192216819610779660 20}} 24 1 false [] 0 0}
2025/01/04 13:02:13 {Node 2}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:14 {Node 2}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 2, ShardIDs: [1 2 3 4 0]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:qCn47shAXg222MdxUu_3] 1:map[3:9N0XmIl72KhbudaZN4q0] 2:map[4:TKKDcV2W_bGc6-KGdGxw] 3:map[5:X2f1-9lz4Yq7P-PdZkxk] 4:map[6:ywDo-jfda4us3BuEIec8]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:14 {Node 2}{Group 101} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:qCn47shAXg222MdxUu_3] 1:map[3:9N0XmIl72KhbudaZN4q0] 2:map[4:TKKDcV2W_bGc6-KGdGxw] 3:map[5:X2f1-9lz4Yq7P-PdZkxk] 4:map[6:ywDo-jfda4us3BuEIec8]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 2
2025/01/04 13:02:14 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc00019b4e0 1:0xc00019b4f0 2:0xc00019b500 3:0xc00019b510 4:0xc00019b520 5:0xc00019b530 6:0xc00019b540 7:0xc00019b550 8:0xc00019b560 9:0xc00019b570] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 568PfEQJ5JRGJlz-D3Zs Append 1192216819610779660 21}} 25 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {0 568PfEQJ5JRGJlz-D3Zs Append 1192216819610779660 21}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:14 {Node 1}{Group 102} fetches latest configuration {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 2
2025/01/04 13:02:14 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 568PfEQJ5JRGJlz-D3Zs Append 1192216819610779660 21}} 25 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 2 map[0:map[2:qCn47shAXg222MdxUu_3] 1:map[3:9N0XmIl72KhbudaZN4q0] 2:map[4:TKKDcV2W_bGc6-KGdGxw] 3:map[5:X2f1-9lz4Yq7P-PdZkxk] 4:map[6:ywDo-jfda4us3BuEIec8]] map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 4 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:qCn47shAXg222MdxUu_3] 1:map[3:9N0XmIl72KhbudaZN4q0] 2:map[4:TKKDcV2W_bGc6-KGdGxw] 3:map[5:X2f1-9lz4Yq7P-PdZkxk] 4:map[6:ywDo-jfda4us3BuEIec8]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:14 {Node 2}{Group 101} Execute Command Command{commandType: InsertShards, Data: {OK 2 map[0:map[2:qCn47shAXg222MdxUu_3] 1:map[3:9N0XmIl72KhbudaZN4q0] 2:map[4:TKKDcV2W_bGc6-KGdGxw] 3:map[5:X2f1-9lz4Yq7P-PdZkxk] 4:map[6:ywDo-jfda4us3BuEIec8]] map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:02:14 {Node 1}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 2 map[0:map[2:qCn47shAXg222MdxUu_3] 1:map[3:9N0XmIl72KhbudaZN4q0] 2:map[4:TKKDcV2W_bGc6-KGdGxw] 3:map[5:X2f1-9lz4Yq7P-PdZkxk] 4:map[6:ywDo-jfda4us3BuEIec8]] map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 4 1 false [] 0 0}
2025/01/04 13:02:14 {Node 1}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:qCn47shAXg222MdxUu_3] 1:map[3:9N0XmIl72KhbudaZN4q0] 2:map[4:TKKDcV2W_bGc6-KGdGxw] 3:map[5:X2f1-9lz4Yq7P-PdZkxk] 4:map[6:ywDo-jfda4us3BuEIec8]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc00019a970 1:0xc00019a980 2:0xc00019a990 3:0xc00019a9a0 4:0xc00019a9b0 5:0xc00019a9c0 6:0xc00019a9d0 7:0xc00019a9e0 8:0xc00019a9f0 9:0xc00019aa00] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 4 1 false [] 0 0}
2025/01/04 13:02:14 {Node 1}{Group 102} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:14 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 4 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 102} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 1192216819610779660 22}} 26 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {1  Get 1192216819610779660 22}} with CommandReply CommandReply{Err: OK, Value: Az1fL9IDHYWSSqQgbEou}
2025/01/04 13:02:14 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 1192216819610779660 22}} 26 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 101} starts a GCTask to delete shards [0 2 3 4 1] from group 100 when config is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} starts a PullTask to get shards [5 6] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} starts a PullTask to get shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 Npi_jDvy28ldWClT6QXl Append 1192216819610779660 23}} 27 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 100} Execute Command Command{commandType: Operation, Data: {1 Npi_jDvy28ldWClT6QXl Append 1192216819610779660 23}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:14 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 Npi_jDvy28ldWClT6QXl Append 1192216819610779660 23}} 27 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc00019b4e0 1:0xc00019b4f0 2:0xc00019b500 3:0xc00019b510 4:0xc00019b520 5:0xc00019b530 6:0xc00019b540 7:0xc00019b550 8:0xc00019b560 9:0xc00019b570] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:14 {Node 2}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:14 {Node 2}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:14 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc00019a970 1:0xc00019a980 2:0xc00019a990 3:0xc00019a9a0 4:0xc00019a9b0 5:0xc00019a9c0 6:0xc00019a9d0 7:0xc00019a9e0 8:0xc00019a9f0 9:0xc00019aa00] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00019bc80 1:0xc00019bc90 2:0xc00019bca0 3:0xc00019bcb0 4:0xc00019bcc0 5:0xc00019bcd0 6:0xc00019bce0 7:0xc00019bcf0 8:0xc00019bd00 9:0xc00019bd10] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [0 2 3 4 1]}} 28 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 100}'s shards status are map[0:0xc00019a970 1:0xc00019a980 2:0xc00019a990 3:0xc00019a9a0 4:0xc00019a9b0 5:0xc00019a9c0 6:0xc00019a9d0 7:0xc00019a9e0 8:0xc00019a9f0 9:0xc00019aa00] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [0 2 3 4 1]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100}'s shards status are map[0:0xc00002d230 1:0xc00002d270 2:0xc00002d240 3:0xc00002d250 4:0xc00002d260 5:0xc00019a9c0 6:0xc00019a9d0 7:0xc00019a9e0 8:0xc00019a9f0 9:0xc00019aa00] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [0 2 3 4 1]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {2 [0 2 3 4 1]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:14 {Node 2}{Group 100} processes GCTaskRequest ShardOperationArgs{ConfigNum: 2, ShardIDs: [0 2 3 4 1]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:14 {Node 2}{Group 101} deletes shards [0 2 3 4 1] in remote group successfully when currentConfigNum is 2
2025/01/04 13:02:14 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [0 2 3 4 1]}} 28 1 false [] 0 0}
2025/01/04 13:02:14 {Node 1}{Group 100}'s shards status are map[0:0xc00019a580 1:0xc00019a590 2:0xc00019a5a0 3:0xc00019a5b0 4:0xc00019a5c0 5:0xc00019a5d0 6:0xc00019a5e0 7:0xc00019a5f0 8:0xc00019a600 9:0xc00019a610] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [0 2 3 4 1]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:14 {Node 1}{Group 100}'s shards status are map[0:0xc00002d5c0 1:0xc00002d600 2:0xc00002d5d0 3:0xc00002d5e0 4:0xc00002d5f0 5:0xc00019a5d0 6:0xc00019a5e0 7:0xc00019a5f0 8:0xc00019a600 9:0xc00019a610] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [0 2 3 4 1]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:14 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [0 2 3 4 1]}} 5 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 101}'s shards status are map[0:0xc00019b4e0 1:0xc00019b4f0 2:0xc00019b500 3:0xc00019b510 4:0xc00019b520 5:0xc00019b530 6:0xc00019b540 7:0xc00019b550 8:0xc00019b560 9:0xc00019b570] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [0 2 3 4 1]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:14 {Node 2}{Group 101}'s shards status are map[0:0xc00019b4e0 1:0xc00019b4f0 2:0xc00019b500 3:0xc00019b510 4:0xc00019b520 5:0xc00019b530 6:0xc00019b540 7:0xc00019b550 8:0xc00019b560 9:0xc00019b570] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [0 2 3 4 1]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:14 {Node 2}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {2 [0 2 3 4 1]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:14 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [0 2 3 4 1]}} 5 1 false [] 0 0}
2025/01/04 13:02:14 {Node 1}{Group 101}'s shards status are map[0:0xc00019b110 1:0xc00019b120 2:0xc00019b130 3:0xc00019b140 4:0xc00019b150 5:0xc00019b160 6:0xc00019b170 7:0xc00019b180 8:0xc00019b190 9:0xc00019b1a0] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [0 2 3 4 1]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:14 {Node 1}{Group 101}'s shards status are map[0:0xc00019b110 1:0xc00019b120 2:0xc00019b130 3:0xc00019b140 4:0xc00019b150 5:0xc00019b160 6:0xc00019b170 7:0xc00019b180 8:0xc00019b190 9:0xc00019b1a0] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [0 2 3 4 1]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} starts a PullTask to get shards [6 5] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} starts a PullTask to get shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:14 {Node 2}{Group 101} fetches latest configuration {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 2
2025/01/04 13:02:14 {Node 2}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [6 5]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:14 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 6 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 101} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:14 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 6 1 false [] 0 0}
2025/01/04 13:02:14 {Node 1}{Group 101} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00019bc80 1:0xc00019bc90 2:0xc00019bca0 3:0xc00019bcb0 4:0xc00019bcc0 5:0xc00019bcd0 6:0xc00019bce0 7:0xc00019bcf0 8:0xc00019bd00 9:0xc00019bd10] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100} fetches latest configuration {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 2
2025/01/04 13:02:14 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 29 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 100} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:14 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 29 1 false [] 0 0}
2025/01/04 13:02:14 {Node 1}{Group 100} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} starts a PullTask to get shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} starts a PullTask to get shards [5 6] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:qCn47shAXg222MdxUu_3]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:14 {Node 1}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:qCn47shAXg222MdxUu_3]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 3
2025/01/04 13:02:14 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[0:map[2:qCn47shAXg222MdxUu_3]] map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 5 1 false [] 0 0}
2025/01/04 13:02:14 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:qCn47shAXg222MdxUu_3]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 3 map[0:map[2:qCn47shAXg222MdxUu_3]] map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:02:14 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[0:map[2:qCn47shAXg222MdxUu_3]] map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 5 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:qCn47shAXg222MdxUu_3]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc00019b4e0 1:0xc00019b4f0 2:0xc00019b500 3:0xc00019b510 4:0xc00019b520 5:0xc00019b530 6:0xc00019b540 7:0xc00019b550 8:0xc00019b560 9:0xc00019b570] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00019bc80 1:0xc00019bc90 2:0xc00019bca0 3:0xc00019bcb0 4:0xc00019bcc0 5:0xc00019bcd0 6:0xc00019bce0 7:0xc00019bcf0 8:0xc00019bd00 9:0xc00019bd10] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc00002d230 1:0xc00002d270 2:0xc00002d240 3:0xc00002d250 4:0xc00002d260 5:0xc00019a9c0 6:0xc00019a9d0 7:0xc00019a9e0 8:0xc00019a9f0 9:0xc00019aa00] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} starts a GCTask to delete shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:HSMk8qro2OmWoCdhy_lu] 6:map[8:68l5FwvjK3uEy8hNJll4]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:14 {Node 1}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:HSMk8qro2OmWoCdhy_lu] 6:map[8:68l5FwvjK3uEy8hNJll4]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 3
2025/01/04 13:02:14 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2  Get 1192216819610779660 24}} 6 1 false [] 0 0}
2025/01/04 13:02:14 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[5:map[7:HSMk8qro2OmWoCdhy_lu] 6:map[8:68l5FwvjK3uEy8hNJll4]] map[1192216819610779660:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} 7 1 false [] 0 0}
2025/01/04 13:02:14 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:HSMk8qro2OmWoCdhy_lu] 6:map[8:68l5FwvjK3uEy8hNJll4]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 3 map[5:map[7:HSMk8qro2OmWoCdhy_lu] 6:map[8:68l5FwvjK3uEy8hNJll4]] map[1192216819610779660:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:02:14 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {2  Get 1192216819610779660 24}} with CommandReply CommandReply{Err: OK, Value: qCn47shAXg222MdxUu_3}
2025/01/04 13:02:14 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2  Get 1192216819610779660 24}} 6 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[5:map[7:HSMk8qro2OmWoCdhy_lu] 6:map[8:68l5FwvjK3uEy8hNJll4]] map[1192216819610779660:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} 7 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:HSMk8qro2OmWoCdhy_lu] 6:map[8:68l5FwvjK3uEy8hNJll4]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc00019b4e0 1:0xc00019b4f0 2:0xc00019b500 3:0xc00019b510 4:0xc00019b520 5:0xc00019b530 6:0xc00019b540 7:0xc00019b550 8:0xc00019b560 9:0xc00019b570] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00019bc80 1:0xc00019bc90 2:0xc00019bca0 3:0xc00019bcb0 4:0xc00019bcc0 5:0xc00019bcd0 6:0xc00019bce0 7:0xc00019bcf0 8:0xc00019bd00 9:0xc00019bd10] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc00002d230 1:0xc00002d270 2:0xc00002d240 3:0xc00002d250 4:0xc00002d260 5:0xc00019a9c0 6:0xc00019a9d0 7:0xc00019a9e0 8:0xc00019a9f0 9:0xc00019aa00] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 MI2r6I76tVor4-WmureU Append 1192216819610779660 25}} 8 1 false [] 0 0}
2025/01/04 13:02:14 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {2 MI2r6I76tVor4-WmureU Append 1192216819610779660 25}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:14 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 MI2r6I76tVor4-WmureU Append 1192216819610779660 25}} 8 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 7 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 101}'s shards status are map[0:0xc00019b4e0 1:0xc00019b4f0 2:0xc00019b500 3:0xc00019b510 4:0xc00019b520 5:0xc00019b530 6:0xc00019b540 7:0xc00019b550 8:0xc00019b560 9:0xc00019b570] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 101}'s shards status are map[0:0xc00050ee00 1:0xc00019b4f0 2:0xc00019b500 3:0xc00019b510 4:0xc00019b520 5:0xc00019b530 6:0xc00019b540 7:0xc00019b550 8:0xc00019b560 9:0xc00019b570] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {3 [0]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:14 {Node 2}{Group 101} processes GCTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:14 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 7 1 false [] 0 0}
2025/01/04 13:02:14 {Node 1}{Group 101}'s shards status are map[0:0xc00019b110 1:0xc00019b120 2:0xc00019b130 3:0xc00019b140 4:0xc00019b150 5:0xc00019b160 6:0xc00019b170 7:0xc00019b180 8:0xc00019b190 9:0xc00019b1a0] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} deletes shards [0] in remote group successfully when currentConfigNum is 3
2025/01/04 13:02:14 {Node 1}{Group 101}'s shards status are map[0:0xc0002c3240 1:0xc00019b120 2:0xc00019b130 3:0xc00019b140 4:0xc00019b150 5:0xc00019b160 6:0xc00019b170 7:0xc00019b180 8:0xc00019b190 9:0xc00019b1a0] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 9 1 false [] 0 0}
2025/01/04 13:02:14 {Node 1}{Group 102}'s shards status are map[0:0xc00019bc80 1:0xc00019bc90 2:0xc00019bca0 3:0xc00019bcb0 4:0xc00019bcc0 5:0xc00019bcd0 6:0xc00019bce0 7:0xc00019bcf0 8:0xc00019bd00 9:0xc00019bd10] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102}'s shards status are map[0:0xc00019bc80 1:0xc00019bc90 2:0xc00019bca0 3:0xc00019bcb0 4:0xc00019bcc0 5:0xc00019bcd0 6:0xc00019bce0 7:0xc00019bcf0 8:0xc00019bd00 9:0xc00019bd10] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 9 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 102}'s shards status are map[0:0xc0001ee0f0 1:0xc0001ee100 2:0xc0001ee110 3:0xc0001ee120 4:0xc0001ee130 5:0xc0001ee140 6:0xc0001ee150 7:0xc0001ee160 8:0xc0001ee170 9:0xc0001ee180] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 102}'s shards status are map[0:0xc0001ee0f0 1:0xc0001ee100 2:0xc0001ee110 3:0xc0001ee120 4:0xc0001ee130 5:0xc0001ee140 6:0xc0001ee150 7:0xc0001ee160 8:0xc0001ee170 9:0xc0001ee180] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {3 [0]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:14 {Node 2}{Group 101} fetches latest configuration {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 3
2025/01/04 13:02:14 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc00002d230 1:0xc00002d270 2:0xc00002d240 3:0xc00002d250 4:0xc00002d260 5:0xc00019a9c0 6:0xc00019a9d0 7:0xc00019a9e0 8:0xc00019a9f0 9:0xc00019aa00] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00019bc80 1:0xc00019bc90 2:0xc00019bca0 3:0xc00019bcb0 4:0xc00019bcc0 5:0xc00019bcd0 6:0xc00019bce0 7:0xc00019bcf0 8:0xc00019bd00 9:0xc00019bd10] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 8 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 101} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:14 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 8 1 false [] 0 0}
2025/01/04 13:02:14 {Node 1}{Group 101} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} starts a GCTask to delete shards [5 6] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 30 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 100}'s shards status are map[0:0xc00002d230 1:0xc00002d270 2:0xc00002d240 3:0xc00002d250 4:0xc00002d260 5:0xc00019a9c0 6:0xc00019a9d0 7:0xc00019a9e0 8:0xc00019a9f0 9:0xc00019aa00] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100}'s shards status are map[0:0xc00002d230 1:0xc00002d270 2:0xc00002d240 3:0xc00002d250 4:0xc00002d260 5:0xc000275300 6:0xc000275310 7:0xc00019a9e0 8:0xc00019a9f0 9:0xc00019aa00] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {3 [5 6]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:14 {Node 2}{Group 100} processes GCTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:14 {Node 1}{Group 102} deletes shards [5 6] in remote group successfully when currentConfigNum is 3
2025/01/04 13:02:14 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00019bc80 1:0xc00019bc90 2:0xc00019bca0 3:0xc00019bcb0 4:0xc00019bcc0 5:0xc00019bcd0 6:0xc00019bce0 7:0xc00019bcf0 8:0xc00019bd00 9:0xc00019bd10] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 30 1 false [] 0 0}
2025/01/04 13:02:14 {Node 1}{Group 100}'s shards status are map[0:0xc00002d5c0 1:0xc00002d600 2:0xc00002d5d0 3:0xc00002d5e0 4:0xc00002d5f0 5:0xc00019a5d0 6:0xc00019a5e0 7:0xc00019a5f0 8:0xc00019a600 9:0xc00019a610] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 100}'s shards status are map[0:0xc00002d5c0 1:0xc00002d600 2:0xc00002d5d0 3:0xc00002d5e0 4:0xc00002d5f0 5:0xc0003afcb0 6:0xc0003afcc0 7:0xc00019a5f0 8:0xc00019a600 9:0xc00019a610] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc00050ee00 1:0xc00019b4f0 2:0xc00019b500 3:0xc00019b510 4:0xc00019b520 5:0xc00019b530 6:0xc00019b540 7:0xc00019b550 8:0xc00019b560 9:0xc00019b570] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100} fetches latest configuration {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 3
2025/01/04 13:02:14 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 31 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 100} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:14 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 31 1 false [] 0 0}
2025/01/04 13:02:14 {Node 1}{Group 100} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 10 1 false [] 0 0}
2025/01/04 13:02:14 {Node 1}{Group 102}'s shards status are map[0:0xc00019bc80 1:0xc00019bc90 2:0xc00019bca0 3:0xc00019bcb0 4:0xc00019bcc0 5:0xc00019bcd0 6:0xc00019bce0 7:0xc00019bcf0 8:0xc00019bd00 9:0xc00019bd10] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102}'s shards status are map[0:0xc00019bc80 1:0xc00019bc90 2:0xc00019bca0 3:0xc00019bcb0 4:0xc00019bcc0 5:0xc00019bcd0 6:0xc00019bce0 7:0xc00019bcf0 8:0xc00019bd00 9:0xc00019bd10] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {3 [5 6]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:14 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 10 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 102}'s shards status are map[0:0xc0001ee0f0 1:0xc0001ee100 2:0xc0001ee110 3:0xc0001ee120 4:0xc0001ee130 5:0xc0001ee140 6:0xc0001ee150 7:0xc0001ee160 8:0xc0001ee170 9:0xc0001ee180] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 102}'s shards status are map[0:0xc0001ee0f0 1:0xc0001ee100 2:0xc0001ee110 3:0xc0001ee120 4:0xc0001ee130 5:0xc0001ee140 6:0xc0001ee150 7:0xc0001ee160 8:0xc0001ee170 9:0xc0001ee180] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100} starts a PullTask to get shards [1 3] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:9N0XmIl72KhbudaZN4q0] 3:map[5:X2f1-9lz4Yq7P-PdZkxk]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:14 {Node 2}{Group 100} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:9N0XmIl72KhbudaZN4q0] 3:map[5:X2f1-9lz4Yq7P-PdZkxk]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 4
2025/01/04 13:02:14 {Node 2}{Group 100} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[1:map[3:9N0XmIl72KhbudaZN4q0] 3:map[5:X2f1-9lz4Yq7P-PdZkxk]] map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 32 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 100} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:9N0XmIl72KhbudaZN4q0] 3:map[5:X2f1-9lz4Yq7P-PdZkxk]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100} Execute Command Command{commandType: InsertShards, Data: {OK 4 map[1:map[3:9N0XmIl72KhbudaZN4q0] 3:map[5:X2f1-9lz4Yq7P-PdZkxk]] map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:02:14 {Node 1}{Group 100} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[1:map[3:9N0XmIl72KhbudaZN4q0] 3:map[5:X2f1-9lz4Yq7P-PdZkxk]] map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 32 1 false [] 0 0}
2025/01/04 13:02:14 {Node 1}{Group 100} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:9N0XmIl72KhbudaZN4q0] 3:map[5:X2f1-9lz4Yq7P-PdZkxk]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100} starts a GCTask to delete shards [3 1] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc00050ee00 1:0xc00019b4f0 2:0xc00019b500 3:0xc00019b510 4:0xc00019b520 5:0xc00019b530 6:0xc00019b540 7:0xc00019b550 8:0xc00019b560 9:0xc00019b570] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} fetches latest configuration {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 3
2025/01/04 13:02:14 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 11 1 false [] 0 0}
2025/01/04 13:02:14 {Node 1}{Group 102} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:14 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 11 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 102} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc00002d230 1:0xc00002d270 2:0xc00002d240 3:0xc00002d250 4:0xc00002d260 5:0xc000275300 6:0xc000275310 7:0xc00019a9e0 8:0xc00019a9f0 9:0xc00019aa00] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} starts a PullTask to get shards [2 4] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [3 1]}} 9 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 101}'s shards status are map[0:0xc00050ee00 1:0xc00019b4f0 2:0xc00019b500 3:0xc00019b510 4:0xc00019b520 5:0xc00019b530 6:0xc00019b540 7:0xc00019b550 8:0xc00019b560 9:0xc00019b570] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 101}'s shards status are map[0:0xc00050ee00 1:0xc00033a3b0 2:0xc00019b500 3:0xc00033a3a0 4:0xc00019b520 5:0xc00019b530 6:0xc00019b540 7:0xc00019b550 8:0xc00019b560 9:0xc00019b570] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {4 [3 1]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:14 {Node 2}{Group 101} processes GCTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:14 {Node 2}{Group 100} deletes shards [3 1] in remote group successfully when currentConfigNum is 4
2025/01/04 13:02:14 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [3 1]}} 9 1 false [] 0 0}
2025/01/04 13:02:14 {Node 1}{Group 101}'s shards status are map[0:0xc0002c3240 1:0xc00019b120 2:0xc00019b130 3:0xc00019b140 4:0xc00019b150 5:0xc00019b160 6:0xc00019b170 7:0xc00019b180 8:0xc00019b190 9:0xc00019b1a0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 101}'s shards status are map[0:0xc0002c3240 1:0xc00033aba0 2:0xc00019b130 3:0xc00033ab90 4:0xc00019b150 5:0xc00019b160 6:0xc00019b170 7:0xc00019b180 8:0xc00019b190 9:0xc00019b1a0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [3 1]}} 33 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 100}'s shards status are map[0:0xc00002d230 1:0xc00002d270 2:0xc00002d240 3:0xc00002d250 4:0xc00002d260 5:0xc000275300 6:0xc000275310 7:0xc00019a9e0 8:0xc00019a9f0 9:0xc00019aa00] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100}'s shards status are map[0:0xc00002d230 1:0xc00002d270 2:0xc00002d240 3:0xc00002d250 4:0xc00002d260 5:0xc000275300 6:0xc000275310 7:0xc00019a9e0 8:0xc00019a9f0 9:0xc00019aa00] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {4 [3 1]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:14 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [3 1]}} 33 1 false [] 0 0}
2025/01/04 13:02:14 {Node 1}{Group 100}'s shards status are map[0:0xc00002d5c0 1:0xc00002d600 2:0xc00002d5d0 3:0xc00002d5e0 4:0xc00002d5f0 5:0xc0003afcb0 6:0xc0003afcc0 7:0xc00019a5f0 8:0xc00019a600 9:0xc00019a610] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 100}'s shards status are map[0:0xc00002d5c0 1:0xc00002d600 2:0xc00002d5d0 3:0xc00002d5e0 4:0xc00002d5f0 5:0xc0003afcb0 6:0xc0003afcc0 7:0xc00019a5f0 8:0xc00019a600 9:0xc00019a610] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:TKKDcV2W_bGc6-KGdGxw] 4:map[6:ywDo-jfda4us3BuEIec8]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:14 {Node 1}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:TKKDcV2W_bGc6-KGdGxw] 4:map[6:ywDo-jfda4us3BuEIec8]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 4
2025/01/04 13:02:14 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc00050ee00 1:0xc00033a3b0 2:0xc00019b500 3:0xc00033a3a0 4:0xc00019b520 5:0xc00019b530 6:0xc00019b540 7:0xc00019b550 8:0xc00019b560 9:0xc00019b570] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[2:map[4:TKKDcV2W_bGc6-KGdGxw] 4:map[6:ywDo-jfda4us3BuEIec8]] map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 12 1 false [] 0 0}
2025/01/04 13:02:14 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:TKKDcV2W_bGc6-KGdGxw] 4:map[6:ywDo-jfda4us3BuEIec8]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 4 map[2:map[4:TKKDcV2W_bGc6-KGdGxw] 4:map[6:ywDo-jfda4us3BuEIec8]] map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:02:14 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[2:map[4:TKKDcV2W_bGc6-KGdGxw] 4:map[6:ywDo-jfda4us3BuEIec8]] map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 12 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:TKKDcV2W_bGc6-KGdGxw] 4:map[6:ywDo-jfda4us3BuEIec8]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00019bc80 1:0xc00019bc90 2:0xc00019bca0 3:0xc00019bcb0 4:0xc00019bcc0 5:0xc00019bcd0 6:0xc00019bce0 7:0xc00019bcf0 8:0xc00019bd00 9:0xc00019bd10] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 1}{Group 102} starts a GCTask to delete shards [2 4] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100} fetches latest configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 4
2025/01/04 13:02:14 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 34 1 false [] 0 0}
2025/01/04 13:02:14 {Node 2}{Group 100} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:14 {Node 2}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:14 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 34 1 false [] 0 0}
2025/01/04 13:02:14 {Node 1}{Group 100} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc00050ee00 1:0xc00033a3b0 2:0xc00019b500 3:0xc00033a3a0 4:0xc00019b520 5:0xc00019b530 6:0xc00019b540 7:0xc00019b550 8:0xc00019b560 9:0xc00019b570] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00019bc80 1:0xc00019bc90 2:0xc00019bca0 3:0xc00019bcb0 4:0xc00019bcc0 5:0xc00019bcd0 6:0xc00019bce0 7:0xc00019bcf0 8:0xc00019bd00 9:0xc00019bd10] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 10 1 false [] 0 0}
2025/01/04 13:02:15 {Node 2}{Group 101}'s shards status are map[0:0xc00050ee00 1:0xc00033a3b0 2:0xc00019b500 3:0xc00033a3a0 4:0xc00019b520 5:0xc00019b530 6:0xc00019b540 7:0xc00019b550 8:0xc00019b560 9:0xc00019b570] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 2}{Group 101}'s shards status are map[0:0xc00050ee00 1:0xc00033a3b0 2:0xc0002753c0 3:0xc00033a3a0 4:0xc0002753d0 5:0xc00019b530 6:0xc00019b540 7:0xc00019b550 8:0xc00019b560 9:0xc00019b570] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 10 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 101}'s shards status are map[0:0xc0002c3240 1:0xc00033aba0 2:0xc00019b130 3:0xc00033ab90 4:0xc00019b150 5:0xc00019b160 6:0xc00019b170 7:0xc00019b180 8:0xc00019b190 9:0xc00019b1a0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 1}{Group 101}'s shards status are map[0:0xc0002c3240 1:0xc00033aba0 2:0xc0002754e0 3:0xc00033ab90 4:0xc0002754f0 5:0xc00019b160 6:0xc00019b170 7:0xc00019b180 8:0xc00019b190 9:0xc00019b1a0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 2}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {4 [2 4]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:15 {Node 2}{Group 101} processes GCTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:15 {Node 1}{Group 102} deletes shards [2 4] in remote group successfully when currentConfigNum is 4
2025/01/04 13:02:15 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc00002d230 1:0xc00002d270 2:0xc00002d240 3:0xc00002d250 4:0xc00002d260 5:0xc000275300 6:0xc000275310 7:0xc00019a9e0 8:0xc00019a9f0 9:0xc00019aa00] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 13 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 102}'s shards status are map[0:0xc00019bc80 1:0xc00019bc90 2:0xc00019bca0 3:0xc00019bcb0 4:0xc00019bcc0 5:0xc00019bcd0 6:0xc00019bce0 7:0xc00019bcf0 8:0xc00019bd00 9:0xc00019bd10] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 1}{Group 102}'s shards status are map[0:0xc00019bc80 1:0xc00019bc90 2:0xc00019bca0 3:0xc00019bcb0 4:0xc00019bcc0 5:0xc00019bcd0 6:0xc00019bce0 7:0xc00019bcf0 8:0xc00019bd00 9:0xc00019bd10] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 1}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {4 [2 4]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:15 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 13 1 false [] 0 0}
2025/01/04 13:02:15 {Node 2}{Group 102}'s shards status are map[0:0xc0001ee0f0 1:0xc0001ee100 2:0xc0001ee110 3:0xc0001ee120 4:0xc0001ee130 5:0xc0001ee140 6:0xc0001ee150 7:0xc0001ee160 8:0xc0001ee170 9:0xc0001ee180] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 2}{Group 102}'s shards status are map[0:0xc0001ee0f0 1:0xc0001ee100 2:0xc0001ee110 3:0xc0001ee120 4:0xc0001ee130 5:0xc0001ee140 6:0xc0001ee150 7:0xc0001ee160 8:0xc0001ee170 9:0xc0001ee180] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 2}{Group 101} fetches latest configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 4
2025/01/04 13:02:15 {Node 1}{Group 102} fetches latest configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 4
2025/01/04 13:02:15 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 11 1 false [] 0 0}
2025/01/04 13:02:15 {Node 2}{Group 101} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 2}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:15 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 11 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 101} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc00002d230 1:0xc00002d270 2:0xc00002d240 3:0xc00002d250 4:0xc00002d260 5:0xc000275300 6:0xc000275310 7:0xc00019a9e0 8:0xc00019a9f0 9:0xc00019aa00] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 14 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 102} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 1}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:15 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 14 1 false [] 0 0}
2025/01/04 13:02:15 {Node 2}{Group 102} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 1}{Group 102} starts a PullTask to get shards [9 8 1 3 7] from group 100 when config is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 2}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 5, ShardIDs: [9 8 1 3 7]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:9N0XmIl72KhbudaZN4q0] 3:map[5:X2f1-9lz4Yq7P-PdZkxk] 7:map[9:hq_BxrLwIYz9FXGt0Wrf] 8:map[0:6WmoDvnU9r97zFjzD9Ub568PfEQJ5JRGJlz-D3Zs] 9:map[1:Az1fL9IDHYWSSqQgbEouNpi_jDvy28ldWClT6QXl]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:15 {Node 1}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:9N0XmIl72KhbudaZN4q0] 3:map[5:X2f1-9lz4Yq7P-PdZkxk] 7:map[9:hq_BxrLwIYz9FXGt0Wrf] 8:map[0:6WmoDvnU9r97zFjzD9Ub568PfEQJ5JRGJlz-D3Zs] 9:map[1:Az1fL9IDHYWSSqQgbEouNpi_jDvy28ldWClT6QXl]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 5
2025/01/04 13:02:15 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 5 map[1:map[3:9N0XmIl72KhbudaZN4q0] 3:map[5:X2f1-9lz4Yq7P-PdZkxk] 7:map[9:hq_BxrLwIYz9FXGt0Wrf] 8:map[0:6WmoDvnU9r97zFjzD9Ub568PfEQJ5JRGJlz-D3Zs] 9:map[1:Az1fL9IDHYWSSqQgbEouNpi_jDvy28ldWClT6QXl]] map[1192216819610779660:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} 15 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:9N0XmIl72KhbudaZN4q0] 3:map[5:X2f1-9lz4Yq7P-PdZkxk] 7:map[9:hq_BxrLwIYz9FXGt0Wrf] 8:map[0:6WmoDvnU9r97zFjzD9Ub568PfEQJ5JRGJlz-D3Zs] 9:map[1:Az1fL9IDHYWSSqQgbEouNpi_jDvy28ldWClT6QXl]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 1}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 5 map[1:map[3:9N0XmIl72KhbudaZN4q0] 3:map[5:X2f1-9lz4Yq7P-PdZkxk] 7:map[9:hq_BxrLwIYz9FXGt0Wrf] 8:map[0:6WmoDvnU9r97zFjzD9Ub568PfEQJ5JRGJlz-D3Zs] 9:map[1:Az1fL9IDHYWSSqQgbEouNpi_jDvy28ldWClT6QXl]] map[1192216819610779660:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:02:15 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 5 map[1:map[3:9N0XmIl72KhbudaZN4q0] 3:map[5:X2f1-9lz4Yq7P-PdZkxk] 7:map[9:hq_BxrLwIYz9FXGt0Wrf] 8:map[0:6WmoDvnU9r97zFjzD9Ub568PfEQJ5JRGJlz-D3Zs] 9:map[1:Az1fL9IDHYWSSqQgbEouNpi_jDvy28ldWClT6QXl]] map[1192216819610779660:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]}} 15 1 false [] 0 0}
2025/01/04 13:02:15 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:9N0XmIl72KhbudaZN4q0] 3:map[5:X2f1-9lz4Yq7P-PdZkxk] 7:map[9:hq_BxrLwIYz9FXGt0Wrf] 8:map[0:6WmoDvnU9r97zFjzD9Ub568PfEQJ5JRGJlz-D3Zs] 9:map[1:Az1fL9IDHYWSSqQgbEouNpi_jDvy28ldWClT6QXl]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 23, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 1}{Group 102} starts a GCTask to delete shards [9 1 3 7 8] from group 100 when config is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc00002d230 1:0xc00002d270 2:0xc00002d240 3:0xc00002d250 4:0xc00002d260 5:0xc000275300 6:0xc000275310 7:0xc00019a9e0 8:0xc00019a9f0 9:0xc00019aa00] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00019bc80 1:0xc00019bc90 2:0xc00019bca0 3:0xc00019bcb0 4:0xc00019bcc0 5:0xc00019bcd0 6:0xc00019bce0 7:0xc00019bcf0 8:0xc00019bd00 9:0xc00019bd10] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [9 1 3 7 8]}} 35 1 false [] 0 0}
2025/01/04 13:02:15 {Node 2}{Group 100}'s shards status are map[0:0xc00002d230 1:0xc00002d270 2:0xc00002d240 3:0xc00002d250 4:0xc00002d260 5:0xc000275300 6:0xc000275310 7:0xc00019a9e0 8:0xc00019a9f0 9:0xc00019aa00] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [9 1 3 7 8]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 2}{Group 100}'s shards status are map[0:0xc00002d230 1:0xc00002c820 2:0xc00002d240 3:0xc00002c830 4:0xc00002d260 5:0xc000275300 6:0xc000275310 7:0xc00002c840 8:0xc00002c850 9:0xc00002c810] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [9 1 3 7 8]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 2}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {5 [9 1 3 7 8]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:15 {Node 2}{Group 100} processes GCTaskRequest ShardOperationArgs{ConfigNum: 5, ShardIDs: [9 1 3 7 8]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:15 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [9 1 3 7 8]}} 35 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 100}'s shards status are map[0:0xc00002d5c0 1:0xc00002d600 2:0xc00002d5d0 3:0xc00002d5e0 4:0xc00002d5f0 5:0xc0003afcb0 6:0xc0003afcc0 7:0xc00019a5f0 8:0xc00019a600 9:0xc00019a610] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [9 1 3 7 8]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 1}{Group 100}'s shards status are map[0:0xc00002d5c0 1:0xc0003869f0 2:0xc00002d5d0 3:0xc000386a00 4:0xc00002d5f0 5:0xc0003afcb0 6:0xc0003afcc0 7:0xc000386a10 8:0xc000386a20 9:0xc0003869e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [9 1 3 7 8]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 1}{Group 102} deletes shards [9 1 3 7 8] in remote group successfully when currentConfigNum is 5
2025/01/04 13:02:15 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [9 1 3 7 8]}} 16 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 102}'s shards status are map[0:0xc00019bc80 1:0xc00019bc90 2:0xc00019bca0 3:0xc00019bcb0 4:0xc00019bcc0 5:0xc00019bcd0 6:0xc00019bce0 7:0xc00019bcf0 8:0xc00019bd00 9:0xc00019bd10] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [9 1 3 7 8]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 1}{Group 102}'s shards status are map[0:0xc00019bc80 1:0xc00019bc90 2:0xc00019bca0 3:0xc00019bcb0 4:0xc00019bcc0 5:0xc00019bcd0 6:0xc00019bce0 7:0xc00019bcf0 8:0xc00019bd00 9:0xc00019bd10] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [9 1 3 7 8]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 1}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {5 [9 1 3 7 8]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:15 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [9 1 3 7 8]}} 16 1 false [] 0 0}
2025/01/04 13:02:15 {Node 2}{Group 102}'s shards status are map[0:0xc0001ee0f0 1:0xc0001ee100 2:0xc0001ee110 3:0xc0001ee120 4:0xc0001ee130 5:0xc0001ee140 6:0xc0001ee150 7:0xc0001ee160 8:0xc0001ee170 9:0xc0001ee180] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [9 1 3 7 8]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 2}{Group 102}'s shards status are map[0:0xc0001ee0f0 1:0xc0001ee100 2:0xc0001ee110 3:0xc0001ee120 4:0xc0001ee130 5:0xc0001ee140 6:0xc0001ee150 7:0xc0001ee160 8:0xc0001ee170 9:0xc0001ee180] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [9 1 3 7 8]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:15 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3  Get 1192216819610779660 26}} 17 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {3  Get 1192216819610779660 26}} with CommandReply CommandReply{Err: OK, Value: 9N0XmIl72KhbudaZN4q0}
2025/01/04 13:02:15 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3  Get 1192216819610779660 26}} 17 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3 YdhAxSQ8fI9kZD8uNEqk Append 1192216819610779660 27}} 18 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {3 YdhAxSQ8fI9kZD8uNEqk Append 1192216819610779660 27}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:15 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3 YdhAxSQ8fI9kZD8uNEqk Append 1192216819610779660 27}} 18 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4  Get 1192216819610779660 28}} 19 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {4  Get 1192216819610779660 28}} with CommandReply CommandReply{Err: OK, Value: TKKDcV2W_bGc6-KGdGxw}
2025/01/04 13:02:15 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4  Get 1192216819610779660 28}} 19 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4 sqtgAZjIAueJsyQ4dUGS Append 1192216819610779660 29}} 20 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {4 sqtgAZjIAueJsyQ4dUGS Append 1192216819610779660 29}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:15 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4 sqtgAZjIAueJsyQ4dUGS Append 1192216819610779660 29}} 20 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5  Get 1192216819610779660 30}} 21 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {5  Get 1192216819610779660 30}} with CommandReply CommandReply{Err: OK, Value: X2f1-9lz4Yq7P-PdZkxk}
2025/01/04 13:02:15 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5  Get 1192216819610779660 30}} 21 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5 LIQJEkPiHsJxZZ2Dlt5R Append 1192216819610779660 31}} 22 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {5 LIQJEkPiHsJxZZ2Dlt5R Append 1192216819610779660 31}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:15 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5 LIQJEkPiHsJxZZ2Dlt5R Append 1192216819610779660 31}} 22 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6  Get 1192216819610779660 32}} 23 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {6  Get 1192216819610779660 32}} with CommandReply CommandReply{Err: OK, Value: ywDo-jfda4us3BuEIec8}
2025/01/04 13:02:15 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6  Get 1192216819610779660 32}} 23 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6 HT_u4hga8eMPj111FFFR Append 1192216819610779660 33}} 24 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {6 HT_u4hga8eMPj111FFFR Append 1192216819610779660 33}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:15 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6 HT_u4hga8eMPj111FFFR Append 1192216819610779660 33}} 24 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 1192216819610779660 34}} 25 1 false [] 0 0}
2025/01/04 13:02:15 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 1192216819610779660 34}} 25 1 false [] 0 0}
2025/01/04 13:02:15 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {7  Get 1192216819610779660 34}} with CommandReply CommandReply{Err: OK, Value: HSMk8qro2OmWoCdhy_lu}
2025/01/04 13:02:16 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 rVQoN5U36WMt-vdHn-Sm Append 1192216819610779660 35}} 26 1 false [] 0 0}
2025/01/04 13:02:16 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {7 rVQoN5U36WMt-vdHn-Sm Append 1192216819610779660 35}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:16 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 rVQoN5U36WMt-vdHn-Sm Append 1192216819610779660 35}} 26 1 false [] 0 0}
2025/01/04 13:02:16 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 1192216819610779660 36}} 27 1 false [] 0 0}
2025/01/04 13:02:16 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {8  Get 1192216819610779660 36}} with CommandReply CommandReply{Err: OK, Value: 68l5FwvjK3uEy8hNJll4}
2025/01/04 13:02:16 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 1192216819610779660 36}} 27 1 false [] 0 0}
2025/01/04 13:02:16 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 Gky6mKeeduK_ImGEt3Hv Append 1192216819610779660 37}} 28 1 false [] 0 0}
2025/01/04 13:02:16 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {8 Gky6mKeeduK_ImGEt3Hv Append 1192216819610779660 37}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:16 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 Gky6mKeeduK_ImGEt3Hv Append 1192216819610779660 37}} 28 1 false [] 0 0}
2025/01/04 13:02:16 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 1192216819610779660 38}} 29 1 false [] 0 0}
2025/01/04 13:02:16 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {9  Get 1192216819610779660 38}} with CommandReply CommandReply{Err: OK, Value: hq_BxrLwIYz9FXGt0Wrf}
2025/01/04 13:02:16 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 1192216819610779660 38}} 29 1 false [] 0 0}
2025/01/04 13:02:16 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 Tp8jcPV2SGvXWPICfiZ9 Append 1192216819610779660 39}} 30 1 false [] 0 0}
2025/01/04 13:02:16 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {9 Tp8jcPV2SGvXWPICfiZ9 Append 1192216819610779660 39}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:16 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 Tp8jcPV2SGvXWPICfiZ9 Append 1192216819610779660 39}} 30 1 false [] 0 0}
2025/01/04 13:02:16 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 1192216819610779660 40}} 31 1 false [] 0 0}
2025/01/04 13:02:16 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {0  Get 1192216819610779660 40}} with CommandReply CommandReply{Err: OK, Value: 6WmoDvnU9r97zFjzD9Ub568PfEQJ5JRGJlz-D3Zs}
2025/01/04 13:02:16 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 1192216819610779660 40}} 31 1 false [] 0 0}
2025/01/04 13:02:16 {Node 1}{Group 102} fetches latest configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 5
2025/01/04 13:02:16 {Node 2}{Group 101} fetches latest configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 5
2025/01/04 13:02:16 {Node 2}{Group 100} fetches latest configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 5
2025/01/04 13:02:16 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 32 1 false [] 0 0}
2025/01/04 13:02:16 {Node 1}{Group 102} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:16 {Node 1}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:16 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 32 1 false [] 0 0}
2025/01/04 13:02:16 {Node 2}{Group 102} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:16 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 36 1 false [] 0 0}
2025/01/04 13:02:16 {Node 2}{Group 100} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:16 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 12 1 false [] 0 0}
2025/01/04 13:02:16 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 36 1 false [] 0 0}
2025/01/04 13:02:16 {Node 1}{Group 100} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:16 {Node 2}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:16 {Node 1}{Group 101} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:16 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 12 1 false [] 0 0}
2025/01/04 13:02:16 {Node 2}{Group 101} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:16 {Node 2}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:16 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 sCR50gGCWhgTdDvgay1z Append 1192216819610779660 41}} 33 1 false [] 0 0}
2025/01/04 13:02:16 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {0 sCR50gGCWhgTdDvgay1z Append 1192216819610779660 41}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:16 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 sCR50gGCWhgTdDvgay1z Append 1192216819610779660 41}} 33 1 false [] 0 0}
2025/01/04 13:02:16 {Node 2}{Group 101} starts a PullTask to get shards [0 2 3 4 1] from group 102 when config is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:16 {Node 1}{Group 102} processes PullTaskRequest ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 2 3 4 1]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:qCn47shAXg222MdxUu_3MI2r6I76tVor4-WmureU] 1:map[3:9N0XmIl72KhbudaZN4q0YdhAxSQ8fI9kZD8uNEqk] 2:map[4:TKKDcV2W_bGc6-KGdGxwsqtgAZjIAueJsyQ4dUGS] 3:map[5:X2f1-9lz4Yq7P-PdZkxkLIQJEkPiHsJxZZ2Dlt5R] 4:map[6:ywDo-jfda4us3BuEIec8HT_u4hga8eMPj111FFFR]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:16 {Node 2}{Group 101} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:qCn47shAXg222MdxUu_3MI2r6I76tVor4-WmureU] 1:map[3:9N0XmIl72KhbudaZN4q0YdhAxSQ8fI9kZD8uNEqk] 2:map[4:TKKDcV2W_bGc6-KGdGxwsqtgAZjIAueJsyQ4dUGS] 3:map[5:X2f1-9lz4Yq7P-PdZkxkLIQJEkPiHsJxZZ2Dlt5R] 4:map[6:ywDo-jfda4us3BuEIec8HT_u4hga8eMPj111FFFR]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 6
2025/01/04 13:02:16 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1  Get 1192216819610779660 42}} 34 1 false [] 0 0}
2025/01/04 13:02:16 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {1  Get 1192216819610779660 42}} with CommandReply CommandReply{Err: OK, Value: Az1fL9IDHYWSSqQgbEouNpi_jDvy28ldWClT6QXl}
2025/01/04 13:02:16 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1  Get 1192216819610779660 42}} 34 1 false [] 0 0}
2025/01/04 13:02:16 {Node 1}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00019bc80 1:0xc00019bc90 2:0xc00019bca0 3:0xc00019bcb0 4:0xc00019bcc0 5:0xc00019bcd0 6:0xc00019bce0 7:0xc00019bcf0 8:0xc00019bd00 9:0xc00019bd10] when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:16 {Node 2}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 6 map[0:map[2:qCn47shAXg222MdxUu_3MI2r6I76tVor4-WmureU] 1:map[3:9N0XmIl72KhbudaZN4q0YdhAxSQ8fI9kZD8uNEqk] 2:map[4:TKKDcV2W_bGc6-KGdGxwsqtgAZjIAueJsyQ4dUGS] 3:map[5:X2f1-9lz4Yq7P-PdZkxkLIQJEkPiHsJxZZ2Dlt5R] 4:map[6:ywDo-jfda4us3BuEIec8HT_u4hga8eMPj111FFFR]] map[1192216819610779660:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]}} 13 1 false [] 0 0}
2025/01/04 13:02:16 {Node 2}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:qCn47shAXg222MdxUu_3MI2r6I76tVor4-WmureU] 1:map[3:9N0XmIl72KhbudaZN4q0YdhAxSQ8fI9kZD8uNEqk] 2:map[4:TKKDcV2W_bGc6-KGdGxwsqtgAZjIAueJsyQ4dUGS] 3:map[5:X2f1-9lz4Yq7P-PdZkxkLIQJEkPiHsJxZZ2Dlt5R] 4:map[6:ywDo-jfda4us3BuEIec8HT_u4hga8eMPj111FFFR]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:16 {Node 2}{Group 101} Execute Command Command{commandType: InsertShards, Data: {OK 6 map[0:map[2:qCn47shAXg222MdxUu_3MI2r6I76tVor4-WmureU] 1:map[3:9N0XmIl72KhbudaZN4q0YdhAxSQ8fI9kZD8uNEqk] 2:map[4:TKKDcV2W_bGc6-KGdGxwsqtgAZjIAueJsyQ4dUGS] 3:map[5:X2f1-9lz4Yq7P-PdZkxkLIQJEkPiHsJxZZ2Dlt5R] 4:map[6:ywDo-jfda4us3BuEIec8HT_u4hga8eMPj111FFFR]] map[1192216819610779660:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:02:16 {Node 1}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 6 map[0:map[2:qCn47shAXg222MdxUu_3MI2r6I76tVor4-WmureU] 1:map[3:9N0XmIl72KhbudaZN4q0YdhAxSQ8fI9kZD8uNEqk] 2:map[4:TKKDcV2W_bGc6-KGdGxwsqtgAZjIAueJsyQ4dUGS] 3:map[5:X2f1-9lz4Yq7P-PdZkxkLIQJEkPiHsJxZZ2Dlt5R] 4:map[6:ywDo-jfda4us3BuEIec8HT_u4hga8eMPj111FFFR]] map[1192216819610779660:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]}} 13 1 false [] 0 0}
2025/01/04 13:02:16 {Node 1}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:qCn47shAXg222MdxUu_3MI2r6I76tVor4-WmureU] 1:map[3:9N0XmIl72KhbudaZN4q0YdhAxSQ8fI9kZD8uNEqk] 2:map[4:TKKDcV2W_bGc6-KGdGxwsqtgAZjIAueJsyQ4dUGS] 3:map[5:X2f1-9lz4Yq7P-PdZkxkLIQJEkPiHsJxZZ2Dlt5R] 4:map[6:ywDo-jfda4us3BuEIec8HT_u4hga8eMPj111FFFR]], LastOperations: map[1192216819610779660:OperationContext{MaxAppliedCommandId: 41, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:16 {Node 2}{Group 101} starts a GCTask to delete shards [0 2 3 4 1] from group 102 when config is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:16 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc00050ee00 1:0xc00033a3b0 2:0xc0002753c0 3:0xc00033a3a0 4:0xc0002753d0 5:0xc00019b530 6:0xc00019b540 7:0xc00019b550 8:0xc00019b560 9:0xc00019b570] when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:16 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1 l2WKGmSUjL0NADgsu2MB Append 1192216819610779660 43}} 35 1 false [] 0 0}
2025/01/04 13:02:16 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [0 2 3 4 1]}} 36 1 false [] 0 0}
2025/01/04 13:02:16 {Node 1}{Group 102}'s shards status are map[0:0xc00019bc80 1:0xc00019bc90 2:0xc00019bca0 3:0xc00019bcb0 4:0xc00019bcc0 5:0xc00019bcd0 6:0xc00019bce0 7:0xc00019bcf0 8:0xc00019bd00 9:0xc00019bd10] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 2 3 4 1]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:16 {Node 1}{Group 102}'s shards status are map[0:0xc000386f50 1:0xc000386f90 2:0xc000386f60 3:0xc000386f70 4:0xc000386f80 5:0xc00019bcd0 6:0xc00019bce0 7:0xc00019bcf0 8:0xc00019bd00 9:0xc00019bd10] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 2 3 4 1]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:16 {Node 1}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {6 [0 2 3 4 1]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:16 {Node 1}{Group 102} processes GCTaskRequest ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 2 3 4 1]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:16 {Node 2}{Group 101} deletes shards [0 2 3 4 1] in remote group successfully when currentConfigNum is 6
2025/01/04 13:02:16 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1 l2WKGmSUjL0NADgsu2MB Append 1192216819610779660 43}} 35 1 false [] 0 0}
2025/01/04 13:02:16 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [0 2 3 4 1]}} 36 1 false [] 0 0}
2025/01/04 13:02:16 {Node 2}{Group 102}'s shards status are map[0:0xc0001ee0f0 1:0xc0001ee100 2:0xc0001ee110 3:0xc0001ee120 4:0xc0001ee130 5:0xc0001ee140 6:0xc0001ee150 7:0xc0001ee160 8:0xc0001ee170 9:0xc0001ee180] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 2 3 4 1]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:16 {Node 2}{Group 102}'s shards status are map[0:0xc000387360 1:0xc0003873a0 2:0xc000387370 3:0xc000387380 4:0xc000387390 5:0xc0001ee140 6:0xc0001ee150 7:0xc0001ee160 8:0xc0001ee170 9:0xc0001ee180] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 2 3 4 1]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:16 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {1 l2WKGmSUjL0NADgsu2MB Append 1192216819610779660 43}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:16 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [0 2 3 4 1]}} 14 1 false [] 0 0}
2025/01/04 13:02:16 {Node 2}{Group 101}'s shards status are map[0:0xc00050ee00 1:0xc00033a3b0 2:0xc0002753c0 3:0xc00033a3a0 4:0xc0002753d0 5:0xc00019b530 6:0xc00019b540 7:0xc00019b550 8:0xc00019b560 9:0xc00019b570] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 2 3 4 1]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:16 {Node 2}{Group 101}'s shards status are map[0:0xc00050ee00 1:0xc00033a3b0 2:0xc0002753c0 3:0xc00033a3a0 4:0xc0002753d0 5:0xc00019b530 6:0xc00019b540 7:0xc00019b550 8:0xc00019b560 9:0xc00019b570] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 2 3 4 1]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:16 {Node 2}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {6 [0 2 3 4 1]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:16 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [0 2 3 4 1]}} 14 1 false [] 0 0}
2025/01/04 13:02:16 {Node 1}{Group 101}'s shards status are map[0:0xc0002c3240 1:0xc00033aba0 2:0xc0002754e0 3:0xc00033ab90 4:0xc0002754f0 5:0xc00019b160 6:0xc00019b170 7:0xc00019b180 8:0xc00019b190 9:0xc00019b1a0] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 2 3 4 1]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:16 {Node 1}{Group 101}'s shards status are map[0:0xc0002c3240 1:0xc00033aba0 2:0xc0002754e0 3:0xc00033ab90 4:0xc0002754f0 5:0xc00019b160 6:0xc00019b170 7:0xc00019b180 8:0xc00019b190 9:0xc00019b1a0] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 2 3 4 1]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:16 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2  Get 1192216819610779660 44}} 15 1 false [] 0 0}
2025/01/04 13:02:16 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {2  Get 1192216819610779660 44}} with CommandReply CommandReply{Err: OK, Value: qCn47shAXg222MdxUu_3MI2r6I76tVor4-WmureU}
2025/01/04 13:02:16 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2  Get 1192216819610779660 44}} 15 1 false [] 0 0}
2025/01/04 13:02:16 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2 DVzhRklnBWKjzGhpB4oW Append 1192216819610779660 45}} 16 1 false [] 0 0}
2025/01/04 13:02:16 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {2 DVzhRklnBWKjzGhpB4oW Append 1192216819610779660 45}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:16 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2 DVzhRklnBWKjzGhpB4oW Append 1192216819610779660 45}} 16 1 false [] 0 0}
2025/01/04 13:02:16 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3  Get 1192216819610779660 46}} 17 1 false [] 0 0}
2025/01/04 13:02:16 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {3  Get 1192216819610779660 46}} with CommandReply CommandReply{Err: OK, Value: 9N0XmIl72KhbudaZN4q0YdhAxSQ8fI9kZD8uNEqk}
2025/01/04 13:02:16 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3  Get 1192216819610779660 46}} 17 1 false [] 0 0}
2025/01/04 13:02:17 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3 ziDveyD8lpPrbhrTRxpY Append 1192216819610779660 47}} 18 1 false [] 0 0}
2025/01/04 13:02:17 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {3 ziDveyD8lpPrbhrTRxpY Append 1192216819610779660 47}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:17 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3 ziDveyD8lpPrbhrTRxpY Append 1192216819610779660 47}} 18 1 false [] 0 0}
2025/01/04 13:02:17 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 1192216819610779660 48}} 19 1 false [] 0 0}
2025/01/04 13:02:17 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {4  Get 1192216819610779660 48}} with CommandReply CommandReply{Err: OK, Value: TKKDcV2W_bGc6-KGdGxwsqtgAZjIAueJsyQ4dUGS}
2025/01/04 13:02:17 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 1192216819610779660 48}} 19 1 false [] 0 0}
2025/01/04 13:02:17 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4 o7jL2F40_o1pEUdaw8hT Append 1192216819610779660 49}} 20 1 false [] 0 0}
2025/01/04 13:02:17 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {4 o7jL2F40_o1pEUdaw8hT Append 1192216819610779660 49}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:17 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4 o7jL2F40_o1pEUdaw8hT Append 1192216819610779660 49}} 20 1 false [] 0 0}
2025/01/04 13:02:17 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5  Get 1192216819610779660 50}} 21 1 false [] 0 0}
2025/01/04 13:02:17 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {5  Get 1192216819610779660 50}} with CommandReply CommandReply{Err: OK, Value: X2f1-9lz4Yq7P-PdZkxkLIQJEkPiHsJxZZ2Dlt5R}
2025/01/04 13:02:17 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5  Get 1192216819610779660 50}} 21 1 false [] 0 0}
2025/01/04 13:02:17 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 H3pBOnXlzNz6TsAhbIzY Append 1192216819610779660 51}} 22 1 false [] 0 0}
2025/01/04 13:02:17 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {5 H3pBOnXlzNz6TsAhbIzY Append 1192216819610779660 51}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:17 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 H3pBOnXlzNz6TsAhbIzY Append 1192216819610779660 51}} 22 1 false [] 0 0}
2025/01/04 13:02:17 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 1192216819610779660 52}} 23 1 false [] 0 0}
2025/01/04 13:02:17 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {6  Get 1192216819610779660 52}} with CommandReply CommandReply{Err: OK, Value: ywDo-jfda4us3BuEIec8HT_u4hga8eMPj111FFFR}
2025/01/04 13:02:17 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 1192216819610779660 52}} 23 1 false [] 0 0}
2025/01/04 13:02:17 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 WFYfvlOs4BCM3kDFKACp Append 1192216819610779660 53}} 24 1 false [] 0 0}
2025/01/04 13:02:17 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {6 WFYfvlOs4BCM3kDFKACp Append 1192216819610779660 53}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:17 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 WFYfvlOs4BCM3kDFKACp Append 1192216819610779660 53}} 24 1 false [] 0 0}
2025/01/04 13:02:17 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 1192216819610779660 54}} 37 1 false [] 0 0}
2025/01/04 13:02:17 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {7  Get 1192216819610779660 54}} with CommandReply CommandReply{Err: OK, Value: HSMk8qro2OmWoCdhy_lurVQoN5U36WMt-vdHn-Sm}
2025/01/04 13:02:17 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 1192216819610779660 54}} 37 1 false [] 0 0}
2025/01/04 13:02:17 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 5tEkweQD9iwPSEhF5wfO Append 1192216819610779660 55}} 38 1 false [] 0 0}
2025/01/04 13:02:17 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {7 5tEkweQD9iwPSEhF5wfO Append 1192216819610779660 55}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:17 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 5tEkweQD9iwPSEhF5wfO Append 1192216819610779660 55}} 38 1 false [] 0 0}
2025/01/04 13:02:17 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 1192216819610779660 56}} 39 1 false [] 0 0}
2025/01/04 13:02:17 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {8  Get 1192216819610779660 56}} with CommandReply CommandReply{Err: OK, Value: 68l5FwvjK3uEy8hNJll4Gky6mKeeduK_ImGEt3Hv}
2025/01/04 13:02:17 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 1192216819610779660 56}} 39 1 false [] 0 0}
2025/01/04 13:02:17 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 _o57tcb6PWkc5ElEUVyh Append 1192216819610779660 57}} 40 1 false [] 0 0}
2025/01/04 13:02:17 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {8 _o57tcb6PWkc5ElEUVyh Append 1192216819610779660 57}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:17 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 _o57tcb6PWkc5ElEUVyh Append 1192216819610779660 57}} 40 1 false [] 0 0}
2025/01/04 13:02:17 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 1192216819610779660 58}} 41 1 false [] 0 0}
2025/01/04 13:02:17 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {9  Get 1192216819610779660 58}} with CommandReply CommandReply{Err: OK, Value: hq_BxrLwIYz9FXGt0WrfTp8jcPV2SGvXWPICfiZ9}
2025/01/04 13:02:17 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 1192216819610779660 58}} 41 1 false [] 0 0}
2025/01/04 13:02:17 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 nEc_mUlBV6FNJgWz65cS Append 1192216819610779660 59}} 42 1 false [] 0 0}
2025/01/04 13:02:17 {Node 1}{Group 102} Execute Command Command{commandType: Operation, Data: {9 nEc_mUlBV6FNJgWz65cS Append 1192216819610779660 59}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:17 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 nEc_mUlBV6FNJgWz65cS Append 1192216819610779660 59}} 42 1 false [] 0 0}
2025/01/04 13:02:17 {Node 0}{Group 100} started
2025/01/04 13:02:17 {Node 0}{Group 101} started
2025/01/04 13:02:17 {Node 0}{Group 102} started
2025/01/04 13:02:17 {Node 0}{Group 101} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 71 255 138 1 10 1 10 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 1 1 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 113 255 138 1 12 1 10 255 202 255 202 255 202 255 202 255 202 255 204 255 204 255 204 255 204 255 204 1 2 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 15 255 165 4 1 2 255 166 0 1 4 1 255 162 0 0 31 255 161 3 1 2 255 162 0 1 2 1 2 75 86 1 255 164 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 163 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 164 0 1 12 1 12 0 0 254 1 63 255 166 0 10 2 1 1 1 51 60 57 78 48 88 109 73 108 55 50 75 104 98 117 100 97 90 78 52 113 48 89 100 104 65 120 83 81 56 102 73 57 107 90 68 56 117 78 69 113 107 122 105 68 118 101 121 68 56 108 112 80 114 98 104 114 84 82 120 112 89 0 14 1 0 0 18 1 0 0 10 1 0 0 12 1 0 0 16 1 0 0 0 1 1 1 50 60 113 67 110 52 55 115 104 65 88 103 50 50 50 77 100 120 85 117 95 51 77 73 50 114 54 73 55 54 116 86 111 114 52 45 87 109 117 114 101 85 68 86 122 104 82 107 108 110 66 87 75 106 122 71 104 112 66 52 111 87 0 4 1 1 1 52 60 84 75 75 68 99 86 50 87 95 98 71 99 54 45 75 71 100 71 120 119 115 113 116 103 65 90 106 73 65 117 101 74 115 121 81 52 100 85 71 83 111 55 106 76 50 70 52 48 95 111 49 112 69 85 100 97 119 56 104 84 0 6 1 1 1 53 40 88 50 102 49 45 57 108 122 52 89 113 55 80 45 80 100 90 107 120 107 76 73 81 74 69 107 80 105 72 115 74 120 90 90 50 68 108 116 53 82 0 8 1 1 1 54 40 121 119 68 111 45 106 102 100 97 52 117 115 51 66 117 69 73 101 99 56 72 84 95 117 52 104 103 97 56 101 77 80 106 49 49 49 70 70 70 82 0 15 255 169 4 1 2 255 170 0 1 4 1 255 168 0 0 51 255 167 3 1 2 255 168 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 160 0 0 0 44 255 159 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 160 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 22 255 170 0 1 248 33 23 53 194 248 75 0 24 1 98 1 1 2 79 75 0 0] 1 21}
2025/01/04 13:02:17 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 H3pBOnXlzNz6TsAhbIzY Append 1192216819610779660 51}} 22 1 false [] 0 0}
2025/01/04 13:02:17 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 1192216819610779660 52}} 23 1 false [] 0 0}
2025/01/04 13:02:17 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 WFYfvlOs4BCM3kDFKACp Append 1192216819610779660 53}} 24 1 false [] 0 0}
2025/01/04 13:02:17 {Node 0}{Group 100} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 255 155 255 138 1 6 1 10 255 204 255 202 255 202 255 202 255 202 255 204 255 204 255 200 255 200 255 200 1 3 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 113 255 138 1 8 1 10 255 204 255 200 255 204 255 200 255 204 255 204 255 204 255 200 255 200 255 200 1 2 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 0 15 255 165 4 1 2 255 166 0 1 4 1 255 162 0 0 31 255 161 3 1 2 255 162 0 1 2 1 2 75 86 1 255 164 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 163 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 164 0 1 12 1 12 0 0 255 203 255 166 0 10 2 1 1 1 51 20 57 78 48 88 109 73 108 55 50 75 104 98 117 100 97 90 78 52 113 48 1 3 0 8 1 0 0 10 1 0 0 12 1 0 0 18 1 1 1 49 40 65 122 49 102 76 57 73 68 72 89 87 83 83 113 81 103 98 69 111 117 78 112 105 95 106 68 118 121 50 56 108 100 87 67 108 84 54 81 88 108 0 0 1 0 0 4 1 0 0 6 1 1 1 53 20 88 50 102 49 45 57 108 122 52 89 113 55 80 45 80 100 90 107 120 107 1 3 0 14 1 1 1 57 20 104 113 95 66 120 114 76 119 73 89 122 57 70 88 71 116 48 87 114 102 0 16 1 1 1 48 40 54 87 109 111 68 118 110 85 57 114 57 55 122 70 106 122 68 57 85 98 53 54 56 80 102 69 81 74 53 74 82 71 74 108 122 45 68 51 90 115 0 15 255 169 4 1 2 255 170 0 1 4 1 255 168 0 0 51 255 167 3 1 2 255 168 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 160 0 0 0 44 255 159 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 160 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 22 255 170 0 1 248 33 23 53 194 248 75 0 24 1 46 1 1 2 79 75 0 0] 1 32}
2025/01/04 13:02:17 {Node 0}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [3 1]}} 33 1 false [] 0 0}
2025/01/04 13:02:17 {Node 0}{Group 100} discards outdated shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:17 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 34 1 false [] 0 0}
2025/01/04 13:02:17 {Node 0}{Group 100} discards outdated configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:17 {Node 0}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [9 1 3 7 8]}} 35 1 false [] 0 0}
2025/01/04 13:02:17 {Node 0}{Group 100} discards outdated shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [9 1 3 7 8]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:17 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 36 1 false [] 0 0}
2025/01/04 13:02:17 {Node 0}{Group 100} discards outdated configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:17 {Node 0}{Group 102} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 71 255 138 1 10 1 10 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 1 1 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 113 255 138 1 12 1 10 255 202 255 202 255 202 255 202 255 202 255 204 255 204 255 204 255 204 255 204 1 2 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 0 15 255 165 4 1 2 255 166 0 1 4 1 255 162 0 0 31 255 161 3 1 2 255 162 0 1 2 1 2 75 86 1 255 164 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 163 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 164 0 1 12 1 12 0 0 254 1 83 255 166 0 10 12 1 1 1 56 60 54 56 108 53 70 119 118 106 75 51 117 69 121 56 104 78 74 108 108 52 71 107 121 54 109 75 101 101 100 117 75 95 73 109 71 69 116 51 72 118 95 111 53 55 116 99 98 54 80 87 107 99 53 69 108 69 85 86 121 104 0 18 1 1 1 49 60 65 122 49 102 76 57 73 68 72 89 87 83 83 113 81 103 98 69 111 117 78 112 105 95 106 68 118 121 50 56 108 100 87 67 108 84 54 81 88 108 108 50 87 75 71 109 83 85 106 76 48 78 65 68 103 115 117 50 77 66 0 0 1 0 0 4 1 0 0 8 1 0 0 10 1 1 1 55 60 72 83 77 107 56 113 114 111 50 79 109 87 111 67 100 104 121 95 108 117 114 86 81 111 78 53 85 51 54 87 77 116 45 118 100 72 110 45 83 109 53 116 69 107 119 101 81 68 57 105 119 80 83 69 104 70 53 119 102 79 0 2 1 0 0 6 1 0 0 14 1 1 1 57 40 104 113 95 66 120 114 76 119 73 89 122 57 70 88 71 116 48 87 114 102 84 112 56 106 99 80 86 50 83 71 118 88 87 80 73 67 102 105 90 57 0 16 1 1 1 48 60 54 87 109 111 68 118 110 85 57 114 57 55 122 70 106 122 68 57 85 98 53 54 56 80 102 69 81 74 53 74 82 71 74 108 122 45 68 51 90 115 115 67 82 53 48 103 71 67 87 104 103 84 100 68 118 103 97 121 49 122 0 15 255 169 4 1 2 255 170 0 1 4 1 255 168 0 0 51 255 167 3 1 2 255 168 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 160 0 0 0 44 255 159 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 160 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 22 255 170 0 1 248 33 23 53 194 248 75 0 24 1 114 1 1 2 79 75 0 0] 1 40}
2025/01/04 13:02:17 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 1192216819610779660 58}} 41 1 false [] 0 0}
2025/01/04 13:02:17 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 nEc_mUlBV6FNJgWz65cS Append 1192216819610779660 59}} 42 1 false [] 0 0}
panic: test timed out after 30s
	running tests:
		TestMissChange5B (30s)

goroutine 16777 [running]:
testing.(*M).startAlarm.func1()
	/usr/local/go/src/testing/testing.go:2373 +0x385
created by time.goFunc
	/usr/local/go/src/time/sleep.go:215 +0x2d

goroutine 1 [chan receive]:
testing.(*T).Run(0xc000128b60, {0x692c32?, 0x0?}, 0x6aa390)
	/usr/local/go/src/testing/testing.go:1751 +0x3ab
testing.runTests.func1(0xc000128b60)
	/usr/local/go/src/testing/testing.go:2168 +0x37
testing.tRunner(0xc000128b60, 0xc00014fc70)
	/usr/local/go/src/testing/testing.go:1690 +0xf4
testing.runTests(0xc0001203f0, {0x87a3c0, 0xe, 0xe}, {0x471ad0?, 0x47173a?, 0x87f260?})
	/usr/local/go/src/testing/testing.go:2166 +0x43d
testing.(*M).Run(0xc00012a140)
	/usr/local/go/src/testing/testing.go:2034 +0x64a
main.main()
	_testmain.go:71 +0x9b

goroutine 34 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*Clerk).Command(0xc0001a2510, 0xc0002fc680)
	/home/ubuntu/my_6.5840/src/shardkv/client.go:106 +0xff
6.5840/shardkv.(*Clerk).Get(...)
	/home/ubuntu/my_6.5840/src/shardkv/client.go:73
6.5840/shardkv.check(0xc000128d00, 0xc0001a2510, {0x69a869, 0x1}, {0xc000025300, 0x3c})
	/home/ubuntu/my_6.5840/src/shardkv/test_test.go:17 +0x95
6.5840/shardkv.TestMissChange5B(0xc000128d00)
	/home/ubuntu/my_6.5840/src/shardkv/test_test.go:351 +0x7b5
testing.tRunner(0xc000128d00, 0x6aa390)
	/usr/local/go/src/testing/testing.go:1690 +0xf4
created by testing.(*T).Run in goroutine 1
	/usr/local/go/src/testing/testing.go:1743 +0x390

goroutine 35 [select]:
6.5840/labrpc.MakeNetwork.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:160 +0xea
created by 6.5840/labrpc.MakeNetwork in goroutine 34
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:158 +0x196

goroutine 36 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00017e120)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 37 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0001336d0, 0x1a5)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0004d3e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00017e120)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 38 [chan receive]:
6.5840/shardctrler.(*ShardCtrler).applier(0xc000134240)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:70 +0x87
created by 6.5840/shardctrler.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:62 +0x28a

goroutine 39 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00017e240)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 40 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000133b90, 0x1a4)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0000aae90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00017e240)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 41 [chan receive]:
6.5840/shardctrler.(*ShardCtrler).applier(0xc0001346c0)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:70 +0x87
created by 6.5840/shardctrler.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:62 +0x28a

goroutine 42 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00017e360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 43 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000133d50, 0x19b)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00011de90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00017e360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 44 [chan receive]:
6.5840/shardctrler.(*ShardCtrler).applier(0xc000134900)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:70 +0x87
created by 6.5840/shardctrler.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:62 +0x28a

goroutine 46 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0001980d0, 0x16)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000181e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00017e6c0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 47 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc00019e000)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 4826 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0005cda20, 0xc0005f0ca0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 4829 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000423990, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00026fad0?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00040d0e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 52 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00017e900)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 53 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000198290, 0x23)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0001ab690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00017e900)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 54 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc00019e160)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 55 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019e160, 0xc00019a630, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 56 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019e160, 0xc00019a640, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 57 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019e160, 0xc00019a650, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 58 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019e160, 0xc00019a660, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 59 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00017eb40)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 60 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000198450, 0x23)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0001a6e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00017eb40)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 61 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc00019e2c0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 62 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019e2c0, 0xc00019aa20, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 63 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019e2c0, 0xc00019aa30, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 64 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019e2c0, 0xc00019aa40, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 65 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019e2c0, 0xc00019aa50, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 67 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000198610, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0001c8690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00017ed80)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 68 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc00019e420)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 4840 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0005cdce0, 0xc0005f1a20, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 73 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00017efc0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 74 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0001987d0, 0x18)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0001cbe90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00017efc0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 75 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc00019e580)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 76 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019e580, 0xc00019b1c0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 77 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019e580, 0xc00019b1d0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 78 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019e580, 0xc00019b1e0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 79 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019e580, 0xc00019b1f0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 80 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00017f320)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 81 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000198990, 0x18)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0001c7690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00017f320)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 82 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc00019e6e0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 83 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019e6e0, 0xc00019b590, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 84 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019e6e0, 0xc00019b5a0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 85 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019e6e0, 0xc00019b5b0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 86 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019e6e0, 0xc00019b5c0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 88 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000198b50, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0001d8e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00017f560)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 89 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc00019e840)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 94 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00017f7a0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 95 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000198d10, 0x28)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0001d4690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00017f7a0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 96 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc00019e9a0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 97 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019e9a0, 0xc00019bd30, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 98 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019e9a0, 0xc00019bd40, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 99 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019e9a0, 0xc00019bd50, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 100 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019e9a0, 0xc00019bd60, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 101 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00017f9e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 102 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000198ed0, 0x28)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0001ebe90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00017f9e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 103 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc00019eb00)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 104 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019eb00, 0xc0001ee1a0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 105 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019eb00, 0xc0001ee1b0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 106 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019eb00, 0xc0001ee1c0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 107 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc00019eb00, 0xc0001ee1d0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 4824 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0005cda20, 0xc0005f0c80, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 4832 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0005cdb80, 0xc0005f13b0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 4838 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0005cdce0, 0xc0005f1a00, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 4828 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00040d0e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 4831 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0005cdb80, 0xc0005f13a0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 4827 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0005cda20, 0xc0005f0cf0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 4821 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0002e7560)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 4822 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000422390, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0004848f0?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0002e7560)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 4834 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0005cdb80, 0xc0005f13d0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 4837 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0005cdce0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 4830 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0005cdb80)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 4839 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0005cdce0, 0xc0005f1a10, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 4841 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0005cdce0, 0xc0005f1a30, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 4825 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0005cda20, 0xc0005f0c90, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 4833 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0005cdb80, 0xc0005f13c0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 4835 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00040d680)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 4836 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0002fc090, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000450fc0?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00040d680)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 34
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 4823 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0005cda20)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 34
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8
exit status 2
FAIL	6.5840/shardkv	30.105s
