Test (5B): servers miss configuration changes...
2025/01/04 13:02:54 {Node 0}{Group 100} started
2025/01/04 13:02:54 {Node 1}{Group 100} started
2025/01/04 13:02:54 {Node 2}{Group 100} started
2025/01/04 13:02:54 {Node 0}{Group 101} started
2025/01/04 13:02:54 {Node 1}{Group 101} started
2025/01/04 13:02:54 {Node 2}{Group 101} started
2025/01/04 13:02:54 {Node 0}{Group 102} started
2025/01/04 13:02:54 {Node 1}{Group 102} started
2025/01/04 13:02:54 {Node 2}{Group 102} started
2025/01/04 13:02:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} Execute Command Command{commandType: EmptyShards, Data: <nil>} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:55 {Node 2}{Group 102} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 102} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 102} Execute Command Command{commandType: EmptyShards, Data: <nil>} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:55 {Node 1}{Group 102} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:55 {Node 1}{Group 101} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:55 {Node 1}{Group 101} Execute Command Command{commandType: EmptyShards, Data: <nil>} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:55 {Node 2}{Group 101} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 101} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 102} fetches latest configuration {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} when currentConfigNum is 0
2025/01/04 13:02:55 {Node 0}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 102} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:55 {Node 0}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:55 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:55 {Node 2}{Group 102} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:55 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:55 {Node 1}{Group 102} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:55 {Node 0}{Group 100} fetches latest configuration {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} when currentConfigNum is 0
2025/01/04 13:02:55 {Node 1}{Group 101} fetches latest configuration {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} when currentConfigNum is 0
2025/01/04 13:02:55 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:55 {Node 2}{Group 101} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:55 {Node 0}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 101} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:55 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:55 {Node 1}{Group 101} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:55 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:55 {Node 0}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:55 {Node 2}{Group 100} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:55 {Node 1}{Group 100} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 5lUzw1dq21uJTHOvIb4T Put 2531500101046315674 0}} 3 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {0 5lUzw1dq21uJTHOvIb4T Put 2531500101046315674 0}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 5lUzw1dq21uJTHOvIb4T Put 2531500101046315674 0}} 3 1 false [] 0 0}
2025/01/04 13:02:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 5lUzw1dq21uJTHOvIb4T Put 2531500101046315674 0}} 3 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 sAGMnjqGwTAmVgXyv2vp Put 2531500101046315674 1}} 4 1 false [] 0 0}
2025/01/04 13:02:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 sAGMnjqGwTAmVgXyv2vp Put 2531500101046315674 1}} 4 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {1 sAGMnjqGwTAmVgXyv2vp Put 2531500101046315674 1}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 sAGMnjqGwTAmVgXyv2vp Put 2531500101046315674 1}} 4 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 hDkBVmoMPzPoMKboMGAy Put 2531500101046315674 2}} 5 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {2 hDkBVmoMPzPoMKboMGAy Put 2531500101046315674 2}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 hDkBVmoMPzPoMKboMGAy Put 2531500101046315674 2}} 5 1 false [] 0 0}
2025/01/04 13:02:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 hDkBVmoMPzPoMKboMGAy Put 2531500101046315674 2}} 5 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 lTRsrzKTSNbgrDvvTs12 Put 2531500101046315674 3}} 6 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {3 lTRsrzKTSNbgrDvvTs12 Put 2531500101046315674 3}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 lTRsrzKTSNbgrDvvTs12 Put 2531500101046315674 3}} 6 1 false [] 0 0}
2025/01/04 13:02:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 lTRsrzKTSNbgrDvvTs12 Put 2531500101046315674 3}} 6 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4 SmG0hqnvr0m9fTvNgiNj Put 2531500101046315674 4}} 7 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {4 SmG0hqnvr0m9fTvNgiNj Put 2531500101046315674 4}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4 SmG0hqnvr0m9fTvNgiNj Put 2531500101046315674 4}} 7 1 false [] 0 0}
2025/01/04 13:02:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4 SmG0hqnvr0m9fTvNgiNj Put 2531500101046315674 4}} 7 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5 GBRQ0PPwRNzvGJyArS7L Put 2531500101046315674 5}} 8 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {5 GBRQ0PPwRNzvGJyArS7L Put 2531500101046315674 5}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5 GBRQ0PPwRNzvGJyArS7L Put 2531500101046315674 5}} 8 1 false [] 0 0}
2025/01/04 13:02:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5 GBRQ0PPwRNzvGJyArS7L Put 2531500101046315674 5}} 8 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6 9pww-46uDSGU41aX7qX9 Put 2531500101046315674 6}} 9 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {6 9pww-46uDSGU41aX7qX9 Put 2531500101046315674 6}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6 9pww-46uDSGU41aX7qX9 Put 2531500101046315674 6}} 9 1 false [] 0 0}
2025/01/04 13:02:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6 9pww-46uDSGU41aX7qX9 Put 2531500101046315674 6}} 9 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 Pos9rP7WslW4gZSvkUhw Put 2531500101046315674 7}} 10 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {7 Pos9rP7WslW4gZSvkUhw Put 2531500101046315674 7}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 Pos9rP7WslW4gZSvkUhw Put 2531500101046315674 7}} 10 1 false [] 0 0}
2025/01/04 13:02:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 Pos9rP7WslW4gZSvkUhw Put 2531500101046315674 7}} 10 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8 IS9WhLgunxUHK5pRmJRc Put 2531500101046315674 8}} 11 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {8 IS9WhLgunxUHK5pRmJRc Put 2531500101046315674 8}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8 IS9WhLgunxUHK5pRmJRc Put 2531500101046315674 8}} 11 1 false [] 0 0}
2025/01/04 13:02:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8 IS9WhLgunxUHK5pRmJRc Put 2531500101046315674 8}} 11 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 octPQWI_LkJf0owi7Ho5 Put 2531500101046315674 9}} 12 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {9 octPQWI_LkJf0owi7Ho5 Put 2531500101046315674 9}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 octPQWI_LkJf0owi7Ho5 Put 2531500101046315674 9}} 12 1 false [] 0 0}
2025/01/04 13:02:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 octPQWI_LkJf0owi7Ho5 Put 2531500101046315674 9}} 12 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 2531500101046315674 10}} 13 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {0  Get 2531500101046315674 10}} with CommandReply CommandReply{Err: OK, Value: 5lUzw1dq21uJTHOvIb4T}
2025/01/04 13:02:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 2531500101046315674 10}} 13 1 false [] 0 0}
2025/01/04 13:02:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 2531500101046315674 10}} 13 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 2531500101046315674 11}} 14 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {1  Get 2531500101046315674 11}} with CommandReply CommandReply{Err: OK, Value: sAGMnjqGwTAmVgXyv2vp}
2025/01/04 13:02:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 2531500101046315674 11}} 14 1 false [] 0 0}
2025/01/04 13:02:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 2531500101046315674 11}} 14 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 2531500101046315674 12}} 15 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {2  Get 2531500101046315674 12}} with CommandReply CommandReply{Err: OK, Value: hDkBVmoMPzPoMKboMGAy}
2025/01/04 13:02:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 2531500101046315674 12}} 15 1 false [] 0 0}
2025/01/04 13:02:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 2531500101046315674 12}} 15 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3  Get 2531500101046315674 13}} 16 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {3  Get 2531500101046315674 13}} with CommandReply CommandReply{Err: OK, Value: lTRsrzKTSNbgrDvvTs12}
2025/01/04 13:02:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3  Get 2531500101046315674 13}} 16 1 false [] 0 0}
2025/01/04 13:02:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3  Get 2531500101046315674 13}} 16 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4  Get 2531500101046315674 14}} 17 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {4  Get 2531500101046315674 14}} with CommandReply CommandReply{Err: OK, Value: SmG0hqnvr0m9fTvNgiNj}
2025/01/04 13:02:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4  Get 2531500101046315674 14}} 17 1 false [] 0 0}
2025/01/04 13:02:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4  Get 2531500101046315674 14}} 17 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5  Get 2531500101046315674 15}} 18 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {5  Get 2531500101046315674 15}} with CommandReply CommandReply{Err: OK, Value: GBRQ0PPwRNzvGJyArS7L}
2025/01/04 13:02:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5  Get 2531500101046315674 15}} 18 1 false [] 0 0}
2025/01/04 13:02:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5  Get 2531500101046315674 15}} 18 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6  Get 2531500101046315674 16}} 19 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {6  Get 2531500101046315674 16}} with CommandReply CommandReply{Err: OK, Value: 9pww-46uDSGU41aX7qX9}
2025/01/04 13:02:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6  Get 2531500101046315674 16}} 19 1 false [] 0 0}
2025/01/04 13:02:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6  Get 2531500101046315674 16}} 19 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7  Get 2531500101046315674 17}} 20 1 false [] 0 0}
2025/01/04 13:02:55 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {7  Get 2531500101046315674 17}} with CommandReply CommandReply{Err: OK, Value: Pos9rP7WslW4gZSvkUhw}
2025/01/04 13:02:55 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7  Get 2531500101046315674 17}} 20 1 false [] 0 0}
2025/01/04 13:02:55 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7  Get 2531500101046315674 17}} 20 1 false [] 0 0}
2025/01/04 13:02:56 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8  Get 2531500101046315674 18}} 21 1 false [] 0 0}
2025/01/04 13:02:56 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {8  Get 2531500101046315674 18}} with CommandReply CommandReply{Err: OK, Value: IS9WhLgunxUHK5pRmJRc}
2025/01/04 13:02:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8  Get 2531500101046315674 18}} 21 1 false [] 0 0}
2025/01/04 13:02:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8  Get 2531500101046315674 18}} 21 1 false [] 0 0}
2025/01/04 13:02:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9  Get 2531500101046315674 19}} 22 1 false [] 0 0}
2025/01/04 13:02:56 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9  Get 2531500101046315674 19}} 22 1 false [] 0 0}
2025/01/04 13:02:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9  Get 2531500101046315674 19}} 22 1 false [] 0 0}
2025/01/04 13:02:56 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {9  Get 2531500101046315674 19}} with CommandReply CommandReply{Err: OK, Value: octPQWI_LkJf0owi7Ho5}
2025/01/04 13:02:56 {Node 1}{Group 101} fetches latest configuration {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} when currentConfigNum is 1
2025/01/04 13:02:56 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:02:56 {Node 1}{Group 101} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:56 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:02:56 {Node 2}{Group 101} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 1}{Group 101} starts a PullTask to get shards [0 1 2 4 3] from group 100 when config is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc000163150 1:0xc000163160 2:0xc000163170 3:0xc000163180 4:0xc000163190 5:0xc0001631a0 6:0xc0001631b0 7:0xc0001631c0 8:0xc0001631d0 9:0xc0001631e0] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 1}{Group 101} starts a PullTask to get shards [3 4 0 1 2] from group 100 when config is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc000163150 1:0xc000163160 2:0xc000163170 3:0xc000163180 4:0xc000163190 5:0xc0001631a0 6:0xc0001631b0 7:0xc0001631c0 8:0xc0001631d0 9:0xc0001631e0] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 1}{Group 101} starts a PullTask to get shards [3 0 1 2 4] from group 100 when config is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc000163150 1:0xc000163160 2:0xc000163170 3:0xc000163180 4:0xc000163190 5:0xc0001631a0 6:0xc0001631b0 7:0xc0001631c0 8:0xc0001631d0 9:0xc0001631e0] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 2}{Group 100} fetches latest configuration {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} when currentConfigNum is 1
2025/01/04 13:02:56 {Node 2}{Group 102} fetches latest configuration {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} when currentConfigNum is 1
2025/01/04 13:02:56 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 2 false [] 0 0}
2025/01/04 13:02:56 {Node 2}{Group 102} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 2}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:56 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 2 false [] 0 0}
2025/01/04 13:02:56 {Node 1}{Group 102} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 23 2 false [] 0 0}
2025/01/04 13:02:56 {Node 2}{Group 100} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 2}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 23 2 false [] 0 0}
2025/01/04 13:02:56 {Node 1}{Group 100} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 2}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 2, ShardIDs: [3 0 1 2 4]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:hDkBVmoMPzPoMKboMGAy] 1:map[3:lTRsrzKTSNbgrDvvTs12] 2:map[4:SmG0hqnvr0m9fTvNgiNj] 3:map[5:GBRQ0PPwRNzvGJyArS7L] 4:map[6:9pww-46uDSGU41aX7qX9]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:56 {Node 1}{Group 101} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:hDkBVmoMPzPoMKboMGAy] 1:map[3:lTRsrzKTSNbgrDvvTs12] 2:map[4:SmG0hqnvr0m9fTvNgiNj] 3:map[5:GBRQ0PPwRNzvGJyArS7L] 4:map[6:9pww-46uDSGU41aX7qX9]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 2
2025/01/04 13:02:56 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc000163150 1:0xc000163160 2:0xc000163170 3:0xc000163180 4:0xc000163190 5:0xc0001631a0 6:0xc0001631b0 7:0xc0001631c0 8:0xc0001631d0 9:0xc0001631e0] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0001629b0 1:0xc0001629c0 2:0xc0001629d0 3:0xc0001629e0 4:0xc0001629f0 5:0xc000162a00 6:0xc000162a10 7:0xc000162a20 8:0xc000162a30 9:0xc000162a40] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 1}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 2 map[0:map[2:hDkBVmoMPzPoMKboMGAy] 1:map[3:lTRsrzKTSNbgrDvvTs12] 2:map[4:SmG0hqnvr0m9fTvNgiNj] 3:map[5:GBRQ0PPwRNzvGJyArS7L] 4:map[6:9pww-46uDSGU41aX7qX9]] map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 4 1 false [] 0 0}
2025/01/04 13:02:56 {Node 1}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:hDkBVmoMPzPoMKboMGAy] 1:map[3:lTRsrzKTSNbgrDvvTs12] 2:map[4:SmG0hqnvr0m9fTvNgiNj] 3:map[5:GBRQ0PPwRNzvGJyArS7L] 4:map[6:9pww-46uDSGU41aX7qX9]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 1}{Group 101} Execute Command Command{commandType: InsertShards, Data: {OK 2 map[0:map[2:hDkBVmoMPzPoMKboMGAy] 1:map[3:lTRsrzKTSNbgrDvvTs12] 2:map[4:SmG0hqnvr0m9fTvNgiNj] 3:map[5:GBRQ0PPwRNzvGJyArS7L] 4:map[6:9pww-46uDSGU41aX7qX9]] map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:02:56 {Node 2}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 2 map[0:map[2:hDkBVmoMPzPoMKboMGAy] 1:map[3:lTRsrzKTSNbgrDvvTs12] 2:map[4:SmG0hqnvr0m9fTvNgiNj] 3:map[5:GBRQ0PPwRNzvGJyArS7L] 4:map[6:9pww-46uDSGU41aX7qX9]] map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 4 1 false [] 0 0}
2025/01/04 13:02:56 {Node 2}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:hDkBVmoMPzPoMKboMGAy] 1:map[3:lTRsrzKTSNbgrDvvTs12] 2:map[4:SmG0hqnvr0m9fTvNgiNj] 3:map[5:GBRQ0PPwRNzvGJyArS7L] 4:map[6:9pww-46uDSGU41aX7qX9]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 2}{Group 102} fetches latest configuration {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 2
2025/01/04 13:02:56 {Node 1}{Group 101} starts a GCTask to delete shards [3 0 1 2 4] from group 100 when config is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 4 2 false [] 0 0}
2025/01/04 13:02:56 {Node 2}{Group 102} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 2}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:56 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 4 2 false [] 0 0}
2025/01/04 13:02:56 {Node 1}{Group 102} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 2}{Group 102} starts a PullTask to get shards [6 5] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 2}{Group 102} starts a PullTask to get shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc000163150 1:0xc000163160 2:0xc000163170 3:0xc000163180 4:0xc000163190 5:0xc0001631a0 6:0xc0001631b0 7:0xc0001631c0 8:0xc0001631d0 9:0xc0001631e0] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0001629b0 1:0xc0001629c0 2:0xc0001629d0 3:0xc0001629e0 4:0xc0001629f0 5:0xc000162a00 6:0xc000162a10 7:0xc000162a20 8:0xc000162a30 9:0xc000162a40] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [3 0 1 2 4]}} 24 2 false [] 0 0}
2025/01/04 13:02:56 {Node 2}{Group 100}'s shards status are map[0:0xc0001629b0 1:0xc0001629c0 2:0xc0001629d0 3:0xc0001629e0 4:0xc0001629f0 5:0xc000162a00 6:0xc000162a10 7:0xc000162a20 8:0xc000162a30 9:0xc000162a40] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [3 0 1 2 4]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 2}{Group 100}'s shards status are map[0:0xc0003bd730 1:0xc0003bd740 2:0xc0003bd750 3:0xc0003bd720 4:0xc0003bd760 5:0xc000162a00 6:0xc000162a10 7:0xc000162a20 8:0xc000162a30 9:0xc000162a40] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [3 0 1 2 4]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 2}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {2 [3 0 1 2 4]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:56 {Node 2}{Group 100} processes GCTaskRequest ShardOperationArgs{ConfigNum: 2, ShardIDs: [3 0 1 2 4]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:56 {Node 1}{Group 101} deletes shards [3 0 1 2 4] in remote group successfully when currentConfigNum is 2
2025/01/04 13:02:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [3 0 1 2 4]}} 24 2 false [] 0 0}
2025/01/04 13:02:56 {Node 1}{Group 100}'s shards status are map[0:0xc0001625c0 1:0xc0001625d0 2:0xc0001625e0 3:0xc0001625f0 4:0xc000162600 5:0xc000162610 6:0xc000162620 7:0xc000162630 8:0xc000162640 9:0xc000162650] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [3 0 1 2 4]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 1}{Group 100}'s shards status are map[0:0xc0003bdac0 1:0xc0003bdad0 2:0xc0003bdae0 3:0xc0003bdab0 4:0xc0003bdaf0 5:0xc000162610 6:0xc000162620 7:0xc000162630 8:0xc000162640 9:0xc000162650] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [3 0 1 2 4]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 1}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:56 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00023a130 1:0xc00023a140 2:0xc00023a150 3:0xc00023a160 4:0xc00023a170 5:0xc00023a180 6:0xc00023a190 7:0xc00023a1a0 8:0xc00023a1b0 9:0xc00023a1c0] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [3 0 1 2 4]}} 5 1 false [] 0 0}
2025/01/04 13:02:56 {Node 1}{Group 101}'s shards status are map[0:0xc000163150 1:0xc000163160 2:0xc000163170 3:0xc000163180 4:0xc000163190 5:0xc0001631a0 6:0xc0001631b0 7:0xc0001631c0 8:0xc0001631d0 9:0xc0001631e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [3 0 1 2 4]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 1}{Group 101}'s shards status are map[0:0xc000163150 1:0xc000163160 2:0xc000163170 3:0xc000163180 4:0xc000163190 5:0xc0001631a0 6:0xc0001631b0 7:0xc0001631c0 8:0xc0001631d0 9:0xc0001631e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [3 0 1 2 4]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 1}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {2 [3 0 1 2 4]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:56 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [3 0 1 2 4]}} 5 1 false [] 0 0}
2025/01/04 13:02:56 {Node 2}{Group 101}'s shards status are map[0:0xc000163520 1:0xc000163530 2:0xc000163540 3:0xc000163550 4:0xc000163560 5:0xc000163570 6:0xc000163580 7:0xc000163590 8:0xc0001635a0 9:0xc0001635b0] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [3 0 1 2 4]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 2}{Group 101}'s shards status are map[0:0xc000163520 1:0xc000163530 2:0xc000163540 3:0xc000163550 4:0xc000163560 5:0xc000163570 6:0xc000163580 7:0xc000163590 8:0xc0001635a0 9:0xc0001635b0] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [3 0 1 2 4]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:56 {Node 2}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [6 5]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:56 {Node 2}{Group 100} fetches latest configuration {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 2
2025/01/04 13:02:56 {Node 1}{Group 101} fetches latest configuration {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 2
2025/01/04 13:02:56 {Node 2}{Group 102} starts a PullTask to get shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 2}{Group 102} starts a PullTask to get shards [5 6] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 2}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:56 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 6 1 false [] 0 0}
2025/01/04 13:02:56 {Node 1}{Group 101} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:56 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 6 1 false [] 0 0}
2025/01/04 13:02:56 {Node 2}{Group 101} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 25 2 false [] 0 0}
2025/01/04 13:02:56 {Node 2}{Group 100} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 2}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:56 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 25 2 false [] 0 0}
2025/01/04 13:02:56 {Node 1}{Group 100} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00023a130 1:0xc00023a140 2:0xc00023a150 3:0xc00023a160 4:0xc00023a170 5:0xc00023a180 6:0xc00023a190 7:0xc00023a1a0 8:0xc00023a1b0 9:0xc00023a1c0] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 1}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:hDkBVmoMPzPoMKboMGAy]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:56 {Node 2}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:hDkBVmoMPzPoMKboMGAy]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 3
2025/01/04 13:02:56 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[0:map[2:hDkBVmoMPzPoMKboMGAy]] map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 5 2 false [] 0 0}
2025/01/04 13:02:56 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:hDkBVmoMPzPoMKboMGAy]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 2}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 3 map[0:map[2:hDkBVmoMPzPoMKboMGAy]] map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:02:56 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[0:map[2:hDkBVmoMPzPoMKboMGAy]] map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 5 2 false [] 0 0}
2025/01/04 13:02:56 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:hDkBVmoMPzPoMKboMGAy]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 2}{Group 102} starts a GCTask to delete shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 7 1 false [] 0 0}
2025/01/04 13:02:56 {Node 1}{Group 101}'s shards status are map[0:0xc000163150 1:0xc000163160 2:0xc000163170 3:0xc000163180 4:0xc000163190 5:0xc0001631a0 6:0xc0001631b0 7:0xc0001631c0 8:0xc0001631d0 9:0xc0001631e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 1}{Group 101}'s shards status are map[0:0xc0005251c0 1:0xc000163160 2:0xc000163170 3:0xc000163180 4:0xc000163190 5:0xc0001631a0 6:0xc0001631b0 7:0xc0001631c0 8:0xc0001631d0 9:0xc0001631e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 1}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {3 [0]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:56 {Node 1}{Group 101} processes GCTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:56 {Node 2}{Group 102} deletes shards [0] in remote group successfully when currentConfigNum is 3
2025/01/04 13:02:56 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 7 1 false [] 0 0}
2025/01/04 13:02:56 {Node 2}{Group 101}'s shards status are map[0:0xc000163520 1:0xc000163530 2:0xc000163540 3:0xc000163550 4:0xc000163560 5:0xc000163570 6:0xc000163580 7:0xc000163590 8:0xc0001635a0 9:0xc0001635b0] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 2}{Group 101}'s shards status are map[0:0xc000396940 1:0xc000163530 2:0xc000163540 3:0xc000163550 4:0xc000163560 5:0xc000163570 6:0xc000163580 7:0xc000163590 8:0xc0001635a0 9:0xc0001635b0] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 6 2 false [] 0 0}
2025/01/04 13:02:56 {Node 2}{Group 102}'s shards status are map[0:0xc00023a130 1:0xc00023a140 2:0xc00023a150 3:0xc00023a160 4:0xc00023a170 5:0xc00023a180 6:0xc00023a190 7:0xc00023a1a0 8:0xc00023a1b0 9:0xc00023a1c0] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 2}{Group 102}'s shards status are map[0:0xc00023a130 1:0xc00023a140 2:0xc00023a150 3:0xc00023a160 4:0xc00023a170 5:0xc00023a180 6:0xc00023a190 7:0xc00023a1a0 8:0xc00023a1b0 9:0xc00023a1c0] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 2}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {3 [0]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:56 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 6 2 false [] 0 0}
2025/01/04 13:02:56 {Node 1}{Group 102}'s shards status are map[0:0xc000163cc0 1:0xc000163cd0 2:0xc000163ce0 3:0xc000163cf0 4:0xc000163d00 5:0xc000163d10 6:0xc000163d20 7:0xc000163d30 8:0xc000163d40 9:0xc000163d50] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 1}{Group 102}'s shards status are map[0:0xc000163cc0 1:0xc000163cd0 2:0xc000163ce0 3:0xc000163cf0 4:0xc000163d00 5:0xc000163d10 6:0xc000163d20 7:0xc000163d30 8:0xc000163d40 9:0xc000163d50] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 2}{Group 102} starts a PullTask to get shards [5 6] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0003bd730 1:0xc0003bd740 2:0xc0003bd750 3:0xc0003bd720 4:0xc0003bd760 5:0xc000162a00 6:0xc000162a10 7:0xc000162a20 8:0xc000162a30 9:0xc000162a40] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00023a130 1:0xc00023a140 2:0xc00023a150 3:0xc00023a160 4:0xc00023a170 5:0xc00023a180 6:0xc00023a190 7:0xc00023a1a0 8:0xc00023a1b0 9:0xc00023a1c0] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 1}{Group 101} fetches latest configuration {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 3
2025/01/04 13:02:56 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 8 1 false [] 0 0}
2025/01/04 13:02:56 {Node 1}{Group 101} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:56 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 8 1 false [] 0 0}
2025/01/04 13:02:56 {Node 2}{Group 101} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 2}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:Pos9rP7WslW4gZSvkUhw] 6:map[8:IS9WhLgunxUHK5pRmJRc]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:56 {Node 2}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:Pos9rP7WslW4gZSvkUhw] 6:map[8:IS9WhLgunxUHK5pRmJRc]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 3
2025/01/04 13:02:56 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[5:map[7:Pos9rP7WslW4gZSvkUhw] 6:map[8:IS9WhLgunxUHK5pRmJRc]] map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 7 2 false [] 0 0}
2025/01/04 13:02:56 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:Pos9rP7WslW4gZSvkUhw] 6:map[8:IS9WhLgunxUHK5pRmJRc]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 2}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 3 map[5:map[7:Pos9rP7WslW4gZSvkUhw] 6:map[8:IS9WhLgunxUHK5pRmJRc]] map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:02:56 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[5:map[7:Pos9rP7WslW4gZSvkUhw] 6:map[8:IS9WhLgunxUHK5pRmJRc]] map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 7 2 false [] 0 0}
2025/01/04 13:02:56 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:Pos9rP7WslW4gZSvkUhw] 6:map[8:IS9WhLgunxUHK5pRmJRc]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:56 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0003bd730 1:0xc0003bd740 2:0xc0003bd750 3:0xc0003bd720 4:0xc0003bd760 5:0xc000162a00 6:0xc000162a10 7:0xc000162a20 8:0xc000162a30 9:0xc000162a40] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00023a130 1:0xc00023a140 2:0xc00023a150 3:0xc00023a160 4:0xc00023a170 5:0xc00023a180 6:0xc00023a190 7:0xc00023a1a0 8:0xc00023a1b0 9:0xc00023a1c0] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} starts a GCTask to delete shards [5 6] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 26 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 100}'s shards status are map[0:0xc0003bd730 1:0xc0003bd740 2:0xc0003bd750 3:0xc0003bd720 4:0xc0003bd760 5:0xc000162a00 6:0xc000162a10 7:0xc000162a20 8:0xc000162a30 9:0xc000162a40] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 100}'s shards status are map[0:0xc0003bd730 1:0xc0003bd740 2:0xc0003bd750 3:0xc0003bd720 4:0xc0003bd760 5:0xc00019c000 6:0xc00019c010 7:0xc000162a20 8:0xc000162a30 9:0xc000162a40] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {3 [5 6]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:57 {Node 2}{Group 100} processes GCTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:57 {Node 2}{Group 102} deletes shards [5 6] in remote group successfully when currentConfigNum is 3
2025/01/04 13:02:57 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 26 2 false [] 0 0}
2025/01/04 13:02:57 {Node 1}{Group 100}'s shards status are map[0:0xc0003bdac0 1:0xc0003bdad0 2:0xc0003bdae0 3:0xc0003bdab0 4:0xc0003bdaf0 5:0xc000162610 6:0xc000162620 7:0xc000162630 8:0xc000162640 9:0xc000162650] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 1}{Group 100}'s shards status are map[0:0xc0003bdac0 1:0xc0003bdad0 2:0xc0003bdae0 3:0xc0003bdab0 4:0xc0003bdaf0 5:0xc00019c850 6:0xc00019c860 7:0xc000162630 8:0xc000162640 9:0xc000162650] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0005251c0 1:0xc000163160 2:0xc000163170 3:0xc000163180 4:0xc000163190 5:0xc0001631a0 6:0xc0001631b0 7:0xc0001631c0 8:0xc0001631d0 9:0xc0001631e0] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 8 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 102}'s shards status are map[0:0xc00023a130 1:0xc00023a140 2:0xc00023a150 3:0xc00023a160 4:0xc00023a170 5:0xc00023a180 6:0xc00023a190 7:0xc00023a1a0 8:0xc00023a1b0 9:0xc00023a1c0] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102}'s shards status are map[0:0xc00023a130 1:0xc00023a140 2:0xc00023a150 3:0xc00023a160 4:0xc00023a170 5:0xc00023a180 6:0xc00023a190 7:0xc00023a1a0 8:0xc00023a1b0 9:0xc00023a1c0] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {3 [5 6]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 8 2 false [] 0 0}
2025/01/04 13:02:57 {Node 1}{Group 102}'s shards status are map[0:0xc000163cc0 1:0xc000163cd0 2:0xc000163ce0 3:0xc000163cf0 4:0xc000163d00 5:0xc000163d10 6:0xc000163d20 7:0xc000163d30 8:0xc000163d40 9:0xc000163d50] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 1}{Group 102}'s shards status are map[0:0xc000163cc0 1:0xc000163cd0 2:0xc000163ce0 3:0xc000163cf0 4:0xc000163d00 5:0xc000163d10 6:0xc000163d20 7:0xc000163d30 8:0xc000163d40 9:0xc000163d50] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 100} fetches latest configuration {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 3
2025/01/04 13:02:57 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 27 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 100} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:57 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 27 2 false [] 0 0}
2025/01/04 13:02:57 {Node 1}{Group 100} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} fetches latest configuration {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 3
2025/01/04 13:02:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 9 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 102} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}} 9 2 false [] 0 0}
2025/01/04 13:02:57 {Node 1}{Group 102} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} starts a PullTask to get shards [2 4] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0005251c0 1:0xc000163160 2:0xc000163170 3:0xc000163180 4:0xc000163190 5:0xc0001631a0 6:0xc0001631b0 7:0xc0001631c0 8:0xc0001631d0 9:0xc0001631e0] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 100} starts a PullTask to get shards [1 3] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 1}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:SmG0hqnvr0m9fTvNgiNj] 4:map[6:9pww-46uDSGU41aX7qX9]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:57 {Node 2}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:SmG0hqnvr0m9fTvNgiNj] 4:map[6:9pww-46uDSGU41aX7qX9]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 4
2025/01/04 13:02:57 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0003bd730 1:0xc0003bd740 2:0xc0003bd750 3:0xc0003bd720 4:0xc0003bd760 5:0xc00019c000 6:0xc00019c010 7:0xc000162a20 8:0xc000162a30 9:0xc000162a40] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 1}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [1 3]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:lTRsrzKTSNbgrDvvTs12] 3:map[5:GBRQ0PPwRNzvGJyArS7L]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:57 {Node 2}{Group 100} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:lTRsrzKTSNbgrDvvTs12] 3:map[5:GBRQ0PPwRNzvGJyArS7L]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 4
2025/01/04 13:02:57 {Node 2}{Group 100} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[1:map[3:lTRsrzKTSNbgrDvvTs12] 3:map[5:GBRQ0PPwRNzvGJyArS7L]] map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 28 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 100} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:lTRsrzKTSNbgrDvvTs12] 3:map[5:GBRQ0PPwRNzvGJyArS7L]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 100} Execute Command Command{commandType: InsertShards, Data: {OK 4 map[1:map[3:lTRsrzKTSNbgrDvvTs12] 3:map[5:GBRQ0PPwRNzvGJyArS7L]] map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:02:57 {Node 1}{Group 100} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[1:map[3:lTRsrzKTSNbgrDvvTs12] 3:map[5:GBRQ0PPwRNzvGJyArS7L]] map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 28 2 false [] 0 0}
2025/01/04 13:02:57 {Node 1}{Group 100} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[1:map[3:lTRsrzKTSNbgrDvvTs12] 3:map[5:GBRQ0PPwRNzvGJyArS7L]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[2:map[4:SmG0hqnvr0m9fTvNgiNj] 4:map[6:9pww-46uDSGU41aX7qX9]] map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 10 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:SmG0hqnvr0m9fTvNgiNj] 4:map[6:9pww-46uDSGU41aX7qX9]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 4 map[2:map[4:SmG0hqnvr0m9fTvNgiNj] 4:map[6:9pww-46uDSGU41aX7qX9]] map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:02:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[2:map[4:SmG0hqnvr0m9fTvNgiNj] 4:map[6:9pww-46uDSGU41aX7qX9]] map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 10 2 false [] 0 0}
2025/01/04 13:02:57 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[2:map[4:SmG0hqnvr0m9fTvNgiNj] 4:map[6:9pww-46uDSGU41aX7qX9]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00023a130 1:0xc00023a140 2:0xc00023a150 3:0xc00023a160 4:0xc00023a170 5:0xc00023a180 6:0xc00023a190 7:0xc00023a1a0 8:0xc00023a1b0 9:0xc00023a1c0] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0005251c0 1:0xc000163160 2:0xc000163170 3:0xc000163180 4:0xc000163190 5:0xc0001631a0 6:0xc0001631b0 7:0xc0001631c0 8:0xc0001631d0 9:0xc0001631e0] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 100} starts a GCTask to delete shards [3 1] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} starts a GCTask to delete shards [2 4] from group 101 when config is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [3 1]}} 9 1 false [] 0 0}
2025/01/04 13:02:57 {Node 1}{Group 101}'s shards status are map[0:0xc0005251c0 1:0xc000163160 2:0xc000163170 3:0xc000163180 4:0xc000163190 5:0xc0001631a0 6:0xc0001631b0 7:0xc0001631c0 8:0xc0001631d0 9:0xc0001631e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 1}{Group 101}'s shards status are map[0:0xc0005251c0 1:0xc00023b820 2:0xc000163170 3:0xc00023b810 4:0xc000163190 5:0xc0001631a0 6:0xc0001631b0 7:0xc0001631c0 8:0xc0001631d0 9:0xc0001631e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 1}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {4 [3 1]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:57 {Node 1}{Group 101} processes GCTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:57 {Node 2}{Group 100} deletes shards [3 1] in remote group successfully when currentConfigNum is 4
2025/01/04 13:02:57 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [3 1]}} 9 1 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 101}'s shards status are map[0:0xc000396940 1:0xc000163530 2:0xc000163540 3:0xc000163550 4:0xc000163560 5:0xc000163570 6:0xc000163580 7:0xc000163590 8:0xc0001635a0 9:0xc0001635b0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 101}'s shards status are map[0:0xc000396940 1:0xc00023bc30 2:0xc000163540 3:0xc00023bc20 4:0xc000163560 5:0xc000163570 6:0xc000163580 7:0xc000163590 8:0xc0001635a0 9:0xc0001635b0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0003bd730 1:0xc0003bd740 2:0xc0003bd750 3:0xc0003bd720 4:0xc0003bd760 5:0xc00019c000 6:0xc00019c010 7:0xc000162a20 8:0xc000162a30 9:0xc000162a40] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [3 1]}} 29 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 100}'s shards status are map[0:0xc0003bd730 1:0xc0003bd740 2:0xc0003bd750 3:0xc0003bd720 4:0xc0003bd760 5:0xc00019c000 6:0xc00019c010 7:0xc000162a20 8:0xc000162a30 9:0xc000162a40] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 100}'s shards status are map[0:0xc0003bd730 1:0xc0003bd740 2:0xc0003bd750 3:0xc0003bd720 4:0xc0003bd760 5:0xc00019c000 6:0xc00019c010 7:0xc000162a20 8:0xc000162a30 9:0xc000162a40] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {4 [3 1]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:57 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [3 1]}} 29 2 false [] 0 0}
2025/01/04 13:02:57 {Node 1}{Group 100}'s shards status are map[0:0xc0003bdac0 1:0xc0003bdad0 2:0xc0003bdae0 3:0xc0003bdab0 4:0xc0003bdaf0 5:0xc00019c850 6:0xc00019c860 7:0xc000162630 8:0xc000162640 9:0xc000162650] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 1}{Group 100}'s shards status are map[0:0xc0003bdac0 1:0xc0003bdad0 2:0xc0003bdae0 3:0xc0003bdab0 4:0xc0003bdaf0 5:0xc00019c850 6:0xc00019c860 7:0xc000162630 8:0xc000162640 9:0xc000162650] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 10 1 false [] 0 0}
2025/01/04 13:02:57 {Node 1}{Group 101}'s shards status are map[0:0xc0005251c0 1:0xc00023b820 2:0xc000163170 3:0xc00023b810 4:0xc000163190 5:0xc0001631a0 6:0xc0001631b0 7:0xc0001631c0 8:0xc0001631d0 9:0xc0001631e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 1}{Group 101}'s shards status are map[0:0xc0005251c0 1:0xc00023b820 2:0xc000487520 3:0xc00023b810 4:0xc000487530 5:0xc0001631a0 6:0xc0001631b0 7:0xc0001631c0 8:0xc0001631d0 9:0xc0001631e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 1}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {4 [2 4]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:57 {Node 1}{Group 101} processes GCTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:57 {Node 2}{Group 102} deletes shards [2 4] in remote group successfully when currentConfigNum is 4
2025/01/04 13:02:57 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 10 1 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 101}'s shards status are map[0:0xc000396940 1:0xc00023bc30 2:0xc000163540 3:0xc00023bc20 4:0xc000163560 5:0xc000163570 6:0xc000163580 7:0xc000163590 8:0xc0001635a0 9:0xc0001635b0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 101}'s shards status are map[0:0xc000396940 1:0xc00023bc30 2:0xc0004878d0 3:0xc00023bc20 4:0xc0004878e0 5:0xc000163570 6:0xc000163580 7:0xc000163590 8:0xc0001635a0 9:0xc0001635b0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00023a130 1:0xc00023a140 2:0xc00023a150 3:0xc00023a160 4:0xc00023a170 5:0xc00023a180 6:0xc00023a190 7:0xc00023a1a0 8:0xc00023a1b0 9:0xc00023a1c0] when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 11 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 102}'s shards status are map[0:0xc00023a130 1:0xc00023a140 2:0xc00023a150 3:0xc00023a160 4:0xc00023a170 5:0xc00023a180 6:0xc00023a190 7:0xc00023a1a0 8:0xc00023a1b0 9:0xc00023a1c0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102}'s shards status are map[0:0xc00023a130 1:0xc00023a140 2:0xc00023a150 3:0xc00023a160 4:0xc00023a170 5:0xc00023a180 6:0xc00023a190 7:0xc00023a1a0 8:0xc00023a1b0 9:0xc00023a1c0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {4 [2 4]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [2 4]}} 11 2 false [] 0 0}
2025/01/04 13:02:57 {Node 1}{Group 102}'s shards status are map[0:0xc000163cc0 1:0xc000163cd0 2:0xc000163ce0 3:0xc000163cf0 4:0xc000163d00 5:0xc000163d10 6:0xc000163d20 7:0xc000163d30 8:0xc000163d40 9:0xc000163d50] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 1}{Group 102}'s shards status are map[0:0xc000163cc0 1:0xc000163cd0 2:0xc000163ce0 3:0xc000163cf0 4:0xc000163d00 5:0xc000163d10 6:0xc000163d20 7:0xc000163d30 8:0xc000163d40 9:0xc000163d50] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [2 4]} when currentConfig is {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 1}{Group 101} fetches latest configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 4
2025/01/04 13:02:57 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 11 1 false [] 0 0}
2025/01/04 13:02:57 {Node 1}{Group 101} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:57 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 11 1 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 101} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 100} fetches latest configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 4
2025/01/04 13:02:57 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 30 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 100} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:57 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 30 2 false [] 0 0}
2025/01/04 13:02:57 {Node 1}{Group 100} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} fetches latest configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 4
2025/01/04 13:02:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 12 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 102} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 12 2 false [] 0 0}
2025/01/04 13:02:57 {Node 1}{Group 102} updates currentConfig from {Num:4,Shards:[102 100 102 100 102 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} starts a PullTask to get shards [8 9 3 1 7] from group 100 when config is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0003bd730 1:0xc0003bd740 2:0xc0003bd750 3:0xc0003bd720 4:0xc0003bd760 5:0xc00019c000 6:0xc00019c010 7:0xc000162a20 8:0xc000162a30 9:0xc000162a40] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 5, ShardIDs: [8 9 3 1 7]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:lTRsrzKTSNbgrDvvTs12] 3:map[5:GBRQ0PPwRNzvGJyArS7L] 7:map[9:octPQWI_LkJf0owi7Ho5] 8:map[0:5lUzw1dq21uJTHOvIb4T] 9:map[1:sAGMnjqGwTAmVgXyv2vp]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:57 {Node 2}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:lTRsrzKTSNbgrDvvTs12] 3:map[5:GBRQ0PPwRNzvGJyArS7L] 7:map[9:octPQWI_LkJf0owi7Ho5] 8:map[0:5lUzw1dq21uJTHOvIb4T] 9:map[1:sAGMnjqGwTAmVgXyv2vp]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 5
2025/01/04 13:02:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 5 map[1:map[3:lTRsrzKTSNbgrDvvTs12] 3:map[5:GBRQ0PPwRNzvGJyArS7L] 7:map[9:octPQWI_LkJf0owi7Ho5] 8:map[0:5lUzw1dq21uJTHOvIb4T] 9:map[1:sAGMnjqGwTAmVgXyv2vp]] map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 13 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:lTRsrzKTSNbgrDvvTs12] 3:map[5:GBRQ0PPwRNzvGJyArS7L] 7:map[9:octPQWI_LkJf0owi7Ho5] 8:map[0:5lUzw1dq21uJTHOvIb4T] 9:map[1:sAGMnjqGwTAmVgXyv2vp]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 5 map[1:map[3:lTRsrzKTSNbgrDvvTs12] 3:map[5:GBRQ0PPwRNzvGJyArS7L] 7:map[9:octPQWI_LkJf0owi7Ho5] 8:map[0:5lUzw1dq21uJTHOvIb4T] 9:map[1:sAGMnjqGwTAmVgXyv2vp]] map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:02:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 5 map[1:map[3:lTRsrzKTSNbgrDvvTs12] 3:map[5:GBRQ0PPwRNzvGJyArS7L] 7:map[9:octPQWI_LkJf0owi7Ho5] 8:map[0:5lUzw1dq21uJTHOvIb4T] 9:map[1:sAGMnjqGwTAmVgXyv2vp]] map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 13 2 false [] 0 0}
2025/01/04 13:02:57 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:lTRsrzKTSNbgrDvvTs12] 3:map[5:GBRQ0PPwRNzvGJyArS7L] 7:map[9:octPQWI_LkJf0owi7Ho5] 8:map[0:5lUzw1dq21uJTHOvIb4T] 9:map[1:sAGMnjqGwTAmVgXyv2vp]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00023a130 1:0xc00023a140 2:0xc00023a150 3:0xc00023a160 4:0xc00023a170 5:0xc00023a180 6:0xc00023a190 7:0xc00023a1a0 8:0xc00023a1b0 9:0xc00023a1c0] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} starts a GCTask to delete shards [8 9 3 7 1] from group 100 when config is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 2531500101046315674 20}} 14 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {0  Get 2531500101046315674 20}} with CommandReply CommandReply{Err: OK, Value: 5lUzw1dq21uJTHOvIb4T}
2025/01/04 13:02:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 2531500101046315674 20}} 14 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0003bd730 1:0xc0003bd740 2:0xc0003bd750 3:0xc0003bd720 4:0xc0003bd760 5:0xc00019c000 6:0xc00019c010 7:0xc000162a20 8:0xc000162a30 9:0xc000162a40] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 b_YprG9D3rEBIxGEbc8G Append 2531500101046315674 21}} 15 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {0 b_YprG9D3rEBIxGEbc8G Append 2531500101046315674 21}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 b_YprG9D3rEBIxGEbc8G Append 2531500101046315674 21}} 15 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00023a130 1:0xc00023a140 2:0xc00023a150 3:0xc00023a160 4:0xc00023a170 5:0xc00023a180 6:0xc00023a190 7:0xc00023a1a0 8:0xc00023a1b0 9:0xc00023a1c0] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1  Get 2531500101046315674 22}} 16 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {1  Get 2531500101046315674 22}} with CommandReply CommandReply{Err: OK, Value: sAGMnjqGwTAmVgXyv2vp}
2025/01/04 13:02:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1  Get 2531500101046315674 22}} 16 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [8 9 3 7 1]}} 31 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 100}'s shards status are map[0:0xc0003bd730 1:0xc0003bd740 2:0xc0003bd750 3:0xc0003bd720 4:0xc0003bd760 5:0xc00019c000 6:0xc00019c010 7:0xc000162a20 8:0xc000162a30 9:0xc000162a40] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [8 9 3 7 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 100}'s shards status are map[0:0xc0003bd730 1:0xc000524b80 2:0xc0003bd750 3:0xc000524b60 4:0xc0003bd760 5:0xc00019c000 6:0xc00019c010 7:0xc000524b70 8:0xc000524b40 9:0xc000524b50] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [8 9 3 7 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {5 [8 9 3 7 1]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:57 {Node 2}{Group 100} processes GCTaskRequest ShardOperationArgs{ConfigNum: 5, ShardIDs: [8 9 3 7 1]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:57 {Node 2}{Group 102} deletes shards [8 9 3 7 1] in remote group successfully when currentConfigNum is 5
2025/01/04 13:02:57 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [8 9 3 7 1]}} 31 2 false [] 0 0}
2025/01/04 13:02:57 {Node 1}{Group 100}'s shards status are map[0:0xc0003bdac0 1:0xc0003bdad0 2:0xc0003bdae0 3:0xc0003bdab0 4:0xc0003bdaf0 5:0xc00019c850 6:0xc00019c860 7:0xc000162630 8:0xc000162640 9:0xc000162650] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [8 9 3 7 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 1}{Group 100}'s shards status are map[0:0xc0003bdac0 1:0xc000524ea0 2:0xc0003bdae0 3:0xc000524e80 4:0xc0003bdaf0 5:0xc00019c850 6:0xc00019c860 7:0xc000524e90 8:0xc000524e60 9:0xc000524e70] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [8 9 3 7 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [8 9 3 7 1]}} 17 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 102}'s shards status are map[0:0xc00023a130 1:0xc00023a140 2:0xc00023a150 3:0xc00023a160 4:0xc00023a170 5:0xc00023a180 6:0xc00023a190 7:0xc00023a1a0 8:0xc00023a1b0 9:0xc00023a1c0] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [8 9 3 7 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102}'s shards status are map[0:0xc00023a130 1:0xc00023a140 2:0xc00023a150 3:0xc00023a160 4:0xc00023a170 5:0xc00023a180 6:0xc00023a190 7:0xc00023a1a0 8:0xc00023a1b0 9:0xc00023a1c0] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [8 9 3 7 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1 bdBVKozuRA9-rnAH0XlS Append 2531500101046315674 23}} 18 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {1 bdBVKozuRA9-rnAH0XlS Append 2531500101046315674 23}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:57 {Node 2}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {5 [8 9 3 7 1]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [8 9 3 7 1]}} 17 2 false [] 0 0}
2025/01/04 13:02:57 {Node 1}{Group 102}'s shards status are map[0:0xc000163cc0 1:0xc000163cd0 2:0xc000163ce0 3:0xc000163cf0 4:0xc000163d00 5:0xc000163d10 6:0xc000163d20 7:0xc000163d30 8:0xc000163d40 9:0xc000163d50] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [8 9 3 7 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 1}{Group 102}'s shards status are map[0:0xc000163cc0 1:0xc000163cd0 2:0xc000163ce0 3:0xc000163cf0 4:0xc000163d00 5:0xc000163d10 6:0xc000163d20 7:0xc000163d30 8:0xc000163d40 9:0xc000163d50] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [8 9 3 7 1]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1 bdBVKozuRA9-rnAH0XlS Append 2531500101046315674 23}} 18 2 false [] 0 0}
2025/01/04 13:02:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2  Get 2531500101046315674 24}} 19 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2  Get 2531500101046315674 24}} 19 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {2  Get 2531500101046315674 24}} with CommandReply CommandReply{Err: OK, Value: hDkBVmoMPzPoMKboMGAy}
2025/01/04 13:02:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 jkQB-WthLB1jhgGBn7Yn Append 2531500101046315674 25}} 20 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {2 jkQB-WthLB1jhgGBn7Yn Append 2531500101046315674 25}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 jkQB-WthLB1jhgGBn7Yn Append 2531500101046315674 25}} 20 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3  Get 2531500101046315674 26}} 21 2 false [] 0 0}
2025/01/04 13:02:57 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {3  Get 2531500101046315674 26}} with CommandReply CommandReply{Err: OK, Value: lTRsrzKTSNbgrDvvTs12}
2025/01/04 13:02:57 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3  Get 2531500101046315674 26}} 21 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3 QqlY14W0JwXxdgErl02V Append 2531500101046315674 27}} 22 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {3 QqlY14W0JwXxdgErl02V Append 2531500101046315674 27}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3 QqlY14W0JwXxdgErl02V Append 2531500101046315674 27}} 22 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4  Get 2531500101046315674 28}} 23 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {4  Get 2531500101046315674 28}} with CommandReply CommandReply{Err: OK, Value: SmG0hqnvr0m9fTvNgiNj}
2025/01/04 13:02:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4  Get 2531500101046315674 28}} 23 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4 uZZIVtQbsmQVdg0KVtZH Append 2531500101046315674 29}} 24 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {4 uZZIVtQbsmQVdg0KVtZH Append 2531500101046315674 29}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4 uZZIVtQbsmQVdg0KVtZH Append 2531500101046315674 29}} 24 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5  Get 2531500101046315674 30}} 25 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {5  Get 2531500101046315674 30}} with CommandReply CommandReply{Err: OK, Value: GBRQ0PPwRNzvGJyArS7L}
2025/01/04 13:02:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5  Get 2531500101046315674 30}} 25 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5 GG93Wj4Na9DdW0_XTkl0 Append 2531500101046315674 31}} 26 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {5 GG93Wj4Na9DdW0_XTkl0 Append 2531500101046315674 31}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {5 GG93Wj4Na9DdW0_XTkl0 Append 2531500101046315674 31}} 26 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6  Get 2531500101046315674 32}} 27 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {6  Get 2531500101046315674 32}} with CommandReply CommandReply{Err: OK, Value: 9pww-46uDSGU41aX7qX9}
2025/01/04 13:02:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6  Get 2531500101046315674 32}} 27 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6 IPG3k-DujmF9b3M5hb3- Append 2531500101046315674 33}} 28 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {6 IPG3k-DujmF9b3M5hb3- Append 2531500101046315674 33}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6 IPG3k-DujmF9b3M5hb3- Append 2531500101046315674 33}} 28 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 2531500101046315674 34}} 29 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {7  Get 2531500101046315674 34}} with CommandReply CommandReply{Err: OK, Value: Pos9rP7WslW4gZSvkUhw}
2025/01/04 13:02:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 2531500101046315674 34}} 29 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 gZkjKP7n9mU2EX6altnP Append 2531500101046315674 35}} 30 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {7 gZkjKP7n9mU2EX6altnP Append 2531500101046315674 35}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 gZkjKP7n9mU2EX6altnP Append 2531500101046315674 35}} 30 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 2531500101046315674 36}} 31 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {8  Get 2531500101046315674 36}} with CommandReply CommandReply{Err: OK, Value: IS9WhLgunxUHK5pRmJRc}
2025/01/04 13:02:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 2531500101046315674 36}} 31 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 dHSLKudbdhegfJrkLqrk Append 2531500101046315674 37}} 32 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {8 dHSLKudbdhegfJrkLqrk Append 2531500101046315674 37}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 dHSLKudbdhegfJrkLqrk Append 2531500101046315674 37}} 32 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 2531500101046315674 38}} 33 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {9  Get 2531500101046315674 38}} with CommandReply CommandReply{Err: OK, Value: octPQWI_LkJf0owi7Ho5}
2025/01/04 13:02:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 2531500101046315674 38}} 33 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 fCQ5iorLzMC6Im8zCDjL Append 2531500101046315674 39}} 34 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {9 fCQ5iorLzMC6Im8zCDjL Append 2531500101046315674 39}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 fCQ5iorLzMC6Im8zCDjL Append 2531500101046315674 39}} 34 2 false [] 0 0}
2025/01/04 13:02:58 {Node 1}{Group 101} fetches latest configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 5
2025/01/04 13:02:58 {Node 2}{Group 100} fetches latest configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 5
2025/01/04 13:02:58 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 12 1 false [] 0 0}
2025/01/04 13:02:58 {Node 1}{Group 101} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:58 {Node 1}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:58 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 12 1 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 101} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:58 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 32 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 100} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:58 {Node 2}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:58 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 32 2 false [] 0 0}
2025/01/04 13:02:58 {Node 1}{Group 100} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:58 {Node 1}{Group 101} starts a PullTask to get shards [0 1 2 4 3] from group 102 when config is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:58 {Node 2}{Group 102} fetches latest configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 5
2025/01/04 13:02:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 35 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:58 {Node 2}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 35 2 false [] 0 0}
2025/01/04 13:02:58 {Node 1}{Group 102} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:58 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 2531500101046315674 40}} 36 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {0  Get 2531500101046315674 40}} with CommandReply CommandReply{Err: OK, Value: 5lUzw1dq21uJTHOvIb4Tb_YprG9D3rEBIxGEbc8G}
2025/01/04 13:02:58 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 2531500101046315674 40}} 36 2 false [] 0 0}
2025/01/04 13:02:58 {Node 2}{Group 102} processes PullTaskRequest ShardOperationArgs{ConfigNum: 6, ShardIDs: [0 1 2 4 3]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:hDkBVmoMPzPoMKboMGAyjkQB-WthLB1jhgGBn7Yn] 1:map[3:lTRsrzKTSNbgrDvvTs12QqlY14W0JwXxdgErl02V] 2:map[4:SmG0hqnvr0m9fTvNgiNjuZZIVtQbsmQVdg0KVtZH] 3:map[5:GBRQ0PPwRNzvGJyArS7LGG93Wj4Na9DdW0_XTkl0] 4:map[6:9pww-46uDSGU41aX7qX9IPG3k-DujmF9b3M5hb3-]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 39, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:58 {Node 1}{Group 101} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:hDkBVmoMPzPoMKboMGAyjkQB-WthLB1jhgGBn7Yn] 1:map[3:lTRsrzKTSNbgrDvvTs12QqlY14W0JwXxdgErl02V] 2:map[4:SmG0hqnvr0m9fTvNgiNjuZZIVtQbsmQVdg0KVtZH] 3:map[5:GBRQ0PPwRNzvGJyArS7LGG93Wj4Na9DdW0_XTkl0] 4:map[6:9pww-46uDSGU41aX7qX9IPG3k-DujmF9b3M5hb3-]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 39, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 6
2025/01/04 13:02:59 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0005251c0 1:0xc00023b820 2:0xc000487520 3:0xc00023b810 4:0xc000487530 5:0xc0001631a0 6:0xc0001631b0 7:0xc0001631c0 8:0xc0001631d0 9:0xc0001631e0] when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:59 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 bmNfh49JzeSbZsvBGGeD Append 2531500101046315674 41}} 37 2 false [] 0 0}
2025/01/04 13:02:59 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {0 bmNfh49JzeSbZsvBGGeD Append 2531500101046315674 41}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:59 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 bmNfh49JzeSbZsvBGGeD Append 2531500101046315674 41}} 37 2 false [] 0 0}
2025/01/04 13:02:59 {Node 1}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 6 map[0:map[2:hDkBVmoMPzPoMKboMGAyjkQB-WthLB1jhgGBn7Yn] 1:map[3:lTRsrzKTSNbgrDvvTs12QqlY14W0JwXxdgErl02V] 2:map[4:SmG0hqnvr0m9fTvNgiNjuZZIVtQbsmQVdg0KVtZH] 3:map[5:GBRQ0PPwRNzvGJyArS7LGG93Wj4Na9DdW0_XTkl0] 4:map[6:9pww-46uDSGU41aX7qX9IPG3k-DujmF9b3M5hb3-]] map[2531500101046315674:OperationContext{MaxAppliedCommandId: 39, LastReply: CommandReply{Err: OK, Value: }}]}} 13 1 false [] 0 0}
2025/01/04 13:02:59 {Node 1}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:hDkBVmoMPzPoMKboMGAyjkQB-WthLB1jhgGBn7Yn] 1:map[3:lTRsrzKTSNbgrDvvTs12QqlY14W0JwXxdgErl02V] 2:map[4:SmG0hqnvr0m9fTvNgiNjuZZIVtQbsmQVdg0KVtZH] 3:map[5:GBRQ0PPwRNzvGJyArS7LGG93Wj4Na9DdW0_XTkl0] 4:map[6:9pww-46uDSGU41aX7qX9IPG3k-DujmF9b3M5hb3-]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 39, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:59 {Node 1}{Group 101} Execute Command Command{commandType: InsertShards, Data: {OK 6 map[0:map[2:hDkBVmoMPzPoMKboMGAyjkQB-WthLB1jhgGBn7Yn] 1:map[3:lTRsrzKTSNbgrDvvTs12QqlY14W0JwXxdgErl02V] 2:map[4:SmG0hqnvr0m9fTvNgiNjuZZIVtQbsmQVdg0KVtZH] 3:map[5:GBRQ0PPwRNzvGJyArS7LGG93Wj4Na9DdW0_XTkl0] 4:map[6:9pww-46uDSGU41aX7qX9IPG3k-DujmF9b3M5hb3-]] map[2531500101046315674:OperationContext{MaxAppliedCommandId: 39, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:02:59 {Node 2}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 6 map[0:map[2:hDkBVmoMPzPoMKboMGAyjkQB-WthLB1jhgGBn7Yn] 1:map[3:lTRsrzKTSNbgrDvvTs12QqlY14W0JwXxdgErl02V] 2:map[4:SmG0hqnvr0m9fTvNgiNjuZZIVtQbsmQVdg0KVtZH] 3:map[5:GBRQ0PPwRNzvGJyArS7LGG93Wj4Na9DdW0_XTkl0] 4:map[6:9pww-46uDSGU41aX7qX9IPG3k-DujmF9b3M5hb3-]] map[2531500101046315674:OperationContext{MaxAppliedCommandId: 39, LastReply: CommandReply{Err: OK, Value: }}]}} 13 1 false [] 0 0}
2025/01/04 13:02:59 {Node 2}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:hDkBVmoMPzPoMKboMGAyjkQB-WthLB1jhgGBn7Yn] 1:map[3:lTRsrzKTSNbgrDvvTs12QqlY14W0JwXxdgErl02V] 2:map[4:SmG0hqnvr0m9fTvNgiNjuZZIVtQbsmQVdg0KVtZH] 3:map[5:GBRQ0PPwRNzvGJyArS7LGG93Wj4Na9DdW0_XTkl0] 4:map[6:9pww-46uDSGU41aX7qX9IPG3k-DujmF9b3M5hb3-]], LastOperations: map[2531500101046315674:OperationContext{MaxAppliedCommandId: 39, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:59 {Node 1}{Group 101} starts a GCTask to delete shards [3 4 0 1 2] from group 102 when config is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:59 {Node 2}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc00023a130 1:0xc00023a140 2:0xc00023a150 3:0xc00023a160 4:0xc00023a170 5:0xc00023a180 6:0xc00023a190 7:0xc00023a1a0 8:0xc00023a1b0 9:0xc00023a1c0] when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:59 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1  Get 2531500101046315674 42}} 38 2 false [] 0 0}
2025/01/04 13:02:59 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {1  Get 2531500101046315674 42}} with CommandReply CommandReply{Err: OK, Value: sAGMnjqGwTAmVgXyv2vpbdBVKozuRA9-rnAH0XlS}
2025/01/04 13:02:59 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1  Get 2531500101046315674 42}} 38 2 false [] 0 0}
2025/01/04 13:02:59 {Node 1}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0005251c0 1:0xc00023b820 2:0xc000487520 3:0xc00023b810 4:0xc000487530 5:0xc0001631a0 6:0xc0001631b0 7:0xc0001631c0 8:0xc0001631d0 9:0xc0001631e0] when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:59 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [3 4 0 1 2]}} 39 2 false [] 0 0}
2025/01/04 13:02:59 {Node 2}{Group 102}'s shards status are map[0:0xc00023a130 1:0xc00023a140 2:0xc00023a150 3:0xc00023a160 4:0xc00023a170 5:0xc00023a180 6:0xc00023a190 7:0xc00023a1a0 8:0xc00023a1b0 9:0xc00023a1c0] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [3 4 0 1 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:59 {Node 2}{Group 102}'s shards status are map[0:0xc0003139d0 1:0xc0003139e0 2:0xc0003139f0 3:0xc0003139b0 4:0xc0003139c0 5:0xc00023a180 6:0xc00023a190 7:0xc00023a1a0 8:0xc00023a1b0 9:0xc00023a1c0] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [3 4 0 1 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:59 {Node 2}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {6 [3 4 0 1 2]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:59 {Node 2}{Group 102} processes GCTaskRequest ShardOperationArgs{ConfigNum: 6, ShardIDs: [3 4 0 1 2]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:59 {Node 1}{Group 101} deletes shards [3 4 0 1 2] in remote group successfully when currentConfigNum is 6
2025/01/04 13:02:59 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [3 4 0 1 2]}} 39 2 false [] 0 0}
2025/01/04 13:02:59 {Node 1}{Group 102}'s shards status are map[0:0xc000163cc0 1:0xc000163cd0 2:0xc000163ce0 3:0xc000163cf0 4:0xc000163d00 5:0xc000163d10 6:0xc000163d20 7:0xc000163d30 8:0xc000163d40 9:0xc000163d50] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [3 4 0 1 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:59 {Node 1}{Group 102}'s shards status are map[0:0xc000313d60 1:0xc000313d70 2:0xc000313d80 3:0xc000313d40 4:0xc000313d50 5:0xc000163d10 6:0xc000163d20 7:0xc000163d30 8:0xc000163d40 9:0xc000163d50] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [3 4 0 1 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:59 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [3 4 0 1 2]}} 14 1 false [] 0 0}
2025/01/04 13:02:59 {Node 1}{Group 101}'s shards status are map[0:0xc0005251c0 1:0xc00023b820 2:0xc000487520 3:0xc00023b810 4:0xc000487530 5:0xc0001631a0 6:0xc0001631b0 7:0xc0001631c0 8:0xc0001631d0 9:0xc0001631e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [3 4 0 1 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:59 {Node 1}{Group 101}'s shards status are map[0:0xc0005251c0 1:0xc00023b820 2:0xc000487520 3:0xc00023b810 4:0xc000487530 5:0xc0001631a0 6:0xc0001631b0 7:0xc0001631c0 8:0xc0001631d0 9:0xc0001631e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [3 4 0 1 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:59 {Node 1}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {6 [3 4 0 1 2]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:59 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [3 4 0 1 2]}} 14 1 false [] 0 0}
2025/01/04 13:02:59 {Node 2}{Group 101}'s shards status are map[0:0xc000396940 1:0xc00023bc30 2:0xc0004878d0 3:0xc00023bc20 4:0xc0004878e0 5:0xc000163570 6:0xc000163580 7:0xc000163590 8:0xc0001635a0 9:0xc0001635b0] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [3 4 0 1 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:59 {Node 2}{Group 101}'s shards status are map[0:0xc000396940 1:0xc00023bc30 2:0xc0004878d0 3:0xc00023bc20 4:0xc0004878e0 5:0xc000163570 6:0xc000163580 7:0xc000163590 8:0xc0001635a0 9:0xc0001635b0] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [3 4 0 1 2]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:59 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1 PGZvLrSzsZkBk3VaSWLa Append 2531500101046315674 43}} 40 2 false [] 0 0}
2025/01/04 13:02:59 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {1 PGZvLrSzsZkBk3VaSWLa Append 2531500101046315674 43}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:59 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1 PGZvLrSzsZkBk3VaSWLa Append 2531500101046315674 43}} 40 2 false [] 0 0}
2025/01/04 13:02:59 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2  Get 2531500101046315674 44}} 15 1 false [] 0 0}
2025/01/04 13:02:59 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {2  Get 2531500101046315674 44}} with CommandReply CommandReply{Err: OK, Value: hDkBVmoMPzPoMKboMGAyjkQB-WthLB1jhgGBn7Yn}
2025/01/04 13:02:59 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2  Get 2531500101046315674 44}} 15 1 false [] 0 0}
2025/01/04 13:02:59 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2 QU8QSkW-UU5MxU36EN_S Append 2531500101046315674 45}} 16 1 false [] 0 0}
2025/01/04 13:02:59 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {2 QU8QSkW-UU5MxU36EN_S Append 2531500101046315674 45}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:59 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {2 QU8QSkW-UU5MxU36EN_S Append 2531500101046315674 45}} 16 1 false [] 0 0}
2025/01/04 13:02:59 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3  Get 2531500101046315674 46}} 17 1 false [] 0 0}
2025/01/04 13:02:59 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {3  Get 2531500101046315674 46}} with CommandReply CommandReply{Err: OK, Value: lTRsrzKTSNbgrDvvTs12QqlY14W0JwXxdgErl02V}
2025/01/04 13:02:59 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3  Get 2531500101046315674 46}} 17 1 false [] 0 0}
2025/01/04 13:02:59 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3 RYlK_yICQouWmfTeM1MU Append 2531500101046315674 47}} 18 1 false [] 0 0}
2025/01/04 13:02:59 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {3 RYlK_yICQouWmfTeM1MU Append 2531500101046315674 47}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:59 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3 RYlK_yICQouWmfTeM1MU Append 2531500101046315674 47}} 18 1 false [] 0 0}
2025/01/04 13:02:59 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 2531500101046315674 48}} 19 1 false [] 0 0}
2025/01/04 13:02:59 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {4  Get 2531500101046315674 48}} with CommandReply CommandReply{Err: OK, Value: SmG0hqnvr0m9fTvNgiNjuZZIVtQbsmQVdg0KVtZH}
2025/01/04 13:02:59 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 2531500101046315674 48}} 19 1 false [] 0 0}
2025/01/04 13:02:59 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4 DxDMb09KRZDZmEfWswpJ Append 2531500101046315674 49}} 20 1 false [] 0 0}
2025/01/04 13:02:59 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4 DxDMb09KRZDZmEfWswpJ Append 2531500101046315674 49}} 20 1 false [] 0 0}
2025/01/04 13:02:59 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {4 DxDMb09KRZDZmEfWswpJ Append 2531500101046315674 49}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:59 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5  Get 2531500101046315674 50}} 21 1 false [] 0 0}
2025/01/04 13:02:59 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {5  Get 2531500101046315674 50}} with CommandReply CommandReply{Err: OK, Value: GBRQ0PPwRNzvGJyArS7LGG93Wj4Na9DdW0_XTkl0}
2025/01/04 13:02:59 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5  Get 2531500101046315674 50}} 21 1 false [] 0 0}
2025/01/04 13:02:59 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 ERjX8gQmJ2UnXfnu7BTE Append 2531500101046315674 51}} 22 1 false [] 0 0}
2025/01/04 13:02:59 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {5 ERjX8gQmJ2UnXfnu7BTE Append 2531500101046315674 51}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:59 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 ERjX8gQmJ2UnXfnu7BTE Append 2531500101046315674 51}} 22 1 false [] 0 0}
2025/01/04 13:02:59 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 2531500101046315674 52}} 23 1 false [] 0 0}
2025/01/04 13:02:59 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {6  Get 2531500101046315674 52}} with CommandReply CommandReply{Err: OK, Value: 9pww-46uDSGU41aX7qX9IPG3k-DujmF9b3M5hb3-}
2025/01/04 13:02:59 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 2531500101046315674 52}} 23 1 false [] 0 0}
2025/01/04 13:03:00 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 X6zpA5QIiuCnUO9xrKvh Append 2531500101046315674 53}} 24 1 false [] 0 0}
2025/01/04 13:03:00 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 X6zpA5QIiuCnUO9xrKvh Append 2531500101046315674 53}} 24 1 false [] 0 0}
2025/01/04 13:03:00 {Node 1}{Group 101} Execute Command Command{commandType: Operation, Data: {6 X6zpA5QIiuCnUO9xrKvh Append 2531500101046315674 53}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:00 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 2531500101046315674 54}} 41 2 false [] 0 0}
2025/01/04 13:03:00 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {7  Get 2531500101046315674 54}} with CommandReply CommandReply{Err: OK, Value: Pos9rP7WslW4gZSvkUhwgZkjKP7n9mU2EX6altnP}
2025/01/04 13:03:00 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 2531500101046315674 54}} 41 2 false [] 0 0}
2025/01/04 13:03:00 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 rcSrhR1geHZIlFzV-238 Append 2531500101046315674 55}} 42 2 false [] 0 0}
2025/01/04 13:03:00 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {7 rcSrhR1geHZIlFzV-238 Append 2531500101046315674 55}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:00 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 rcSrhR1geHZIlFzV-238 Append 2531500101046315674 55}} 42 2 false [] 0 0}
2025/01/04 13:03:00 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 2531500101046315674 56}} 43 2 false [] 0 0}
2025/01/04 13:03:00 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {8  Get 2531500101046315674 56}} with CommandReply CommandReply{Err: OK, Value: IS9WhLgunxUHK5pRmJRcdHSLKudbdhegfJrkLqrk}
2025/01/04 13:03:00 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 2531500101046315674 56}} 43 2 false [] 0 0}
2025/01/04 13:03:00 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 yOi1E_Rsz89I0_Cstr3R Append 2531500101046315674 57}} 44 2 false [] 0 0}
2025/01/04 13:03:00 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {8 yOi1E_Rsz89I0_Cstr3R Append 2531500101046315674 57}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:00 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 yOi1E_Rsz89I0_Cstr3R Append 2531500101046315674 57}} 44 2 false [] 0 0}
2025/01/04 13:03:00 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 2531500101046315674 58}} 45 2 false [] 0 0}
2025/01/04 13:03:00 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {9  Get 2531500101046315674 58}} with CommandReply CommandReply{Err: OK, Value: octPQWI_LkJf0owi7Ho5fCQ5iorLzMC6Im8zCDjL}
2025/01/04 13:03:00 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 2531500101046315674 58}} 45 2 false [] 0 0}
2025/01/04 13:03:00 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 3qcQ8GeukEAY1fDGihhG Append 2531500101046315674 59}} 46 2 false [] 0 0}
2025/01/04 13:03:00 {Node 2}{Group 102} Execute Command Command{commandType: Operation, Data: {9 3qcQ8GeukEAY1fDGihhG Append 2531500101046315674 59}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:03:00 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 3qcQ8GeukEAY1fDGihhG Append 2531500101046315674 59}} 46 2 false [] 0 0}
2025/01/04 13:03:00 {Node 0}{Group 100} started
2025/01/04 13:03:00 {Node 0}{Group 101} started
2025/01/04 13:03:00 {Node 0}{Group 102} started
2025/01/04 13:03:00 {Node 0}{Group 100} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 255 155 255 138 1 6 1 10 255 204 255 202 255 202 255 202 255 202 255 204 255 204 255 200 255 200 255 200 1 3 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 0 113 255 138 1 8 1 10 255 204 255 200 255 204 255 200 255 204 255 204 255 204 255 200 255 200 255 200 1 2 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 0 15 255 165 4 1 2 255 166 0 1 4 1 255 162 0 0 31 255 161 3 1 2 255 162 0 1 2 1 2 75 86 1 255 164 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 163 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 164 0 1 12 1 12 0 0 255 163 255 166 0 10 4 1 0 0 12 1 0 0 14 1 1 1 57 20 111 99 116 80 81 87 73 95 76 107 74 102 48 111 119 105 55 72 111 53 0 18 1 1 1 49 20 115 65 71 77 110 106 113 71 119 84 65 109 86 103 88 121 118 50 118 112 0 16 1 1 1 48 20 53 108 85 122 119 49 100 113 50 49 117 74 84 72 79 118 73 98 52 84 0 0 1 0 0 2 1 1 1 51 20 108 84 82 115 114 122 75 84 83 78 98 103 114 68 118 118 84 115 49 50 1 3 0 6 1 1 1 53 20 71 66 82 81 48 80 80 119 82 78 122 118 71 74 121 65 114 83 55 76 1 3 0 8 1 0 0 10 1 0 0 15 255 169 4 1 2 255 170 0 1 4 1 255 168 0 0 51 255 167 3 1 2 255 168 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 160 0 0 0 44 255 159 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 160 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 22 255 170 0 1 248 70 67 99 219 223 118 85 52 1 18 1 1 2 79 75 0 0] 2 28}
2025/01/04 13:03:00 {Node 0}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [3 1]}} 29 2 false [] 0 0}
2025/01/04 13:03:00 {Node 0}{Group 100} discards outdated shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [3 1]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:03:00 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 30 2 false [] 0 0}
2025/01/04 13:03:00 {Node 0}{Group 100} discards outdated configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:03:00 {Node 0}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [8 9 3 7 1]}} 31 2 false [] 0 0}
2025/01/04 13:03:00 {Node 0}{Group 100} discards outdated shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [8 9 3 7 1]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:03:00 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 32 2 false [] 0 0}
2025/01/04 13:03:00 {Node 0}{Group 100} discards outdated configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:03:00 {Node 0}{Group 101} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 71 255 138 1 10 1 10 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 1 1 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 113 255 138 1 12 1 10 255 202 255 202 255 202 255 202 255 202 255 204 255 204 255 204 255 204 255 204 1 2 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 0 15 255 165 4 1 2 255 166 0 1 4 1 255 162 0 0 31 255 161 3 1 2 255 162 0 1 2 1 2 75 86 1 255 164 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 163 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 164 0 1 12 1 12 0 0 254 1 63 255 166 0 10 14 1 0 0 6 1 1 1 53 40 71 66 82 81 48 80 80 119 82 78 122 118 71 74 121 65 114 83 55 76 71 71 57 51 87 106 52 78 97 57 68 100 87 48 95 88 84 107 108 48 0 10 1 0 0 12 1 0 0 8 1 1 1 54 40 57 112 119 119 45 52 54 117 68 83 71 85 52 49 97 88 55 113 88 57 73 80 71 51 107 45 68 117 106 109 70 57 98 51 77 53 104 98 51 45 0 16 1 0 0 18 1 0 0 0 1 1 1 50 60 104 68 107 66 86 109 111 77 80 122 80 111 77 75 98 111 77 71 65 121 106 107 81 66 45 87 116 104 76 66 49 106 104 103 71 66 110 55 89 110 81 85 56 81 83 107 87 45 85 85 53 77 120 85 51 54 69 78 95 83 0 2 1 1 1 51 60 108 84 82 115 114 122 75 84 83 78 98 103 114 68 118 118 84 115 49 50 81 113 108 89 49 52 87 48 74 119 88 120 100 103 69 114 108 48 50 86 82 89 108 75 95 121 73 67 81 111 117 87 109 102 84 101 77 49 77 85 0 4 1 1 1 52 60 83 109 71 48 104 113 110 118 114 48 109 57 102 84 118 78 103 105 78 106 117 90 90 73 86 116 81 98 115 109 81 86 100 103 48 75 86 116 90 72 68 120 68 77 98 48 57 75 82 90 68 90 109 69 102 87 115 119 112 74 0 15 255 169 4 1 2 255 170 0 1 4 1 255 168 0 0 51 255 167 3 1 2 255 168 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 160 0 0 0 44 255 159 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 160 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 22 255 170 0 1 248 70 67 99 219 223 118 85 52 1 98 1 1 2 79 75 0 0] 1 21}
2025/01/04 13:03:00 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 ERjX8gQmJ2UnXfnu7BTE Append 2531500101046315674 51}} 22 1 false [] 0 0}
2025/01/04 13:03:00 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 2531500101046315674 52}} 23 1 false [] 0 0}
2025/01/04 13:03:00 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 X6zpA5QIiuCnUO9xrKvh Append 2531500101046315674 53}} 24 1 false [] 0 0}
2025/01/04 13:03:00 {Node 0}{Group 102} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 71 255 138 1 10 1 10 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 1 1 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 113 255 138 1 12 1 10 255 202 255 202 255 202 255 202 255 202 255 204 255 204 255 204 255 204 255 204 1 2 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 15 255 165 4 1 2 255 166 0 1 4 1 255 162 0 0 31 255 161 3 1 2 255 162 0 1 2 1 2 75 86 1 255 164 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 163 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 164 0 1 12 1 12 0 0 254 1 83 255 166 0 10 16 1 1 1 48 60 53 108 85 122 119 49 100 113 50 49 117 74 84 72 79 118 73 98 52 84 98 95 89 112 114 71 57 68 51 114 69 66 73 120 71 69 98 99 56 71 98 109 78 102 104 52 57 74 122 101 83 98 90 115 118 66 71 71 101 68 0 18 1 1 1 49 60 115 65 71 77 110 106 113 71 119 84 65 109 86 103 88 121 118 50 118 112 98 100 66 86 75 111 122 117 82 65 57 45 114 110 65 72 48 88 108 83 80 71 90 118 76 114 83 122 115 90 107 66 107 51 86 97 83 87 76 97 0 0 1 0 0 6 1 0 0 10 1 1 1 55 60 80 111 115 57 114 80 55 87 115 108 87 52 103 90 83 118 107 85 104 119 103 90 107 106 75 80 55 110 57 109 85 50 69 88 54 97 108 116 110 80 114 99 83 114 104 82 49 103 101 72 90 73 108 70 122 86 45 50 51 56 0 12 1 1 1 56 60 73 83 57 87 104 76 103 117 110 120 85 72 75 53 112 82 109 74 82 99 100 72 83 76 75 117 100 98 100 104 101 103 102 74 114 107 76 113 114 107 121 79 105 49 69 95 82 115 122 56 57 73 48 95 67 115 116 114 51 82 0 2 1 0 0 4 1 0 0 8 1 0 0 14 1 1 1 57 40 111 99 116 80 81 87 73 95 76 107 74 102 48 111 119 105 55 72 111 53 102 67 81 53 105 111 114 76 122 77 67 54 73 109 56 122 67 68 106 76 0 15 255 169 4 1 2 255 170 0 1 4 1 255 168 0 0 51 255 167 3 1 2 255 168 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 160 0 0 0 44 255 159 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 160 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 22 255 170 0 1 248 70 67 99 219 223 118 85 52 1 114 1 1 2 79 75 0 0] 2 45}
2025/01/04 13:03:00 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 3qcQ8GeukEAY1fDGihhG Append 2531500101046315674 59}} 46 2 false [] 0 0}
panic: test timed out after 30s
	running tests:
		TestMissChange5B (30s)

goroutine 17871 [running]:
testing.(*M).startAlarm.func1()
	/usr/local/go/src/testing/testing.go:2373 +0x385
created by time.goFunc
	/usr/local/go/src/time/sleep.go:215 +0x2d

goroutine 1 [chan receive]:
testing.(*T).Run(0xc00010eb60, {0x692c32?, 0x0?}, 0x6aa390)
	/usr/local/go/src/testing/testing.go:1751 +0x3ab
testing.runTests.func1(0xc00010eb60)
	/usr/local/go/src/testing/testing.go:2168 +0x37
testing.tRunner(0xc00010eb60, 0xc00012bc70)
	/usr/local/go/src/testing/testing.go:1690 +0xf4
testing.runTests(0xc000010408, {0x87a3c0, 0xe, 0xe}, {0x471ad0?, 0x47173a?, 0x87f260?})
	/usr/local/go/src/testing/testing.go:2166 +0x43d
testing.(*M).Run(0xc0001100a0)
	/usr/local/go/src/testing/testing.go:2034 +0x64a
main.main()
	_testmain.go:71 +0x9b

goroutine 6 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*Clerk).Command(0xc00016a510, 0xc00027c540)
	/home/ubuntu/my_6.5840/src/shardkv/client.go:106 +0xff
6.5840/shardkv.(*Clerk).Get(...)
	/home/ubuntu/my_6.5840/src/shardkv/client.go:73
6.5840/shardkv.check(0xc00010ed00, 0xc00016a510, {0x69a869, 0x1}, {0xc0001f92c0, 0x3c})
	/home/ubuntu/my_6.5840/src/shardkv/test_test.go:17 +0x95
6.5840/shardkv.TestMissChange5B(0xc00010ed00)
	/home/ubuntu/my_6.5840/src/shardkv/test_test.go:351 +0x7b5
testing.tRunner(0xc00010ed00, 0x6aa390)
	/usr/local/go/src/testing/testing.go:1690 +0xf4
created by testing.(*T).Run in goroutine 1
	/usr/local/go/src/testing/testing.go:1743 +0x390

goroutine 7 [select]:
6.5840/labrpc.MakeNetwork.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:160 +0xea
created by 6.5840/labrpc.MakeNetwork in goroutine 6
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:158 +0x196

goroutine 8 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0x0?, 0x30?, 0x477d32?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc000150120)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).ticker(0xc000150120)
	/home/ubuntu/my_6.5840/src/raft/raft.go:459 +0x5a
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 9 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0xc000038008?, 0xe0?, 0x475285?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc000150120)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(0xc000015750?)
	/usr/local/go/src/sync/mutex.go:92 +0x32
sync.(*Cond).Wait(0xc000150120?)
	/usr/local/go/src/sync/cond.go:72 +0x97
6.5840/raft.(*Raft).applyLog(0xc000150120)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 10 [chan receive]:
6.5840/shardctrler.(*ShardCtrler).applier(0xc00007c300)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:70 +0x87
created by 6.5840/shardctrler.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:62 +0x28a

goroutine 11 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc000150240)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 12 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000015c10, 0x1b3)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00007c240?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc000150240)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 13 [chan receive]:
6.5840/shardctrler.(*ShardCtrler).applier(0xc00007c780)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:70 +0x87
created by 6.5840/shardctrler.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:62 +0x28a

goroutine 14 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0x0?, 0x30?, 0x477d32?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc000150360)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).ticker(0xc000150360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:459 +0x5a
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 15 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0xc00003a508?, 0xe0?, 0x475285?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc000150360)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(0xc000015dd0?)
	/usr/local/go/src/sync/mutex.go:92 +0x32
sync.(*Cond).Wait(0xc000150360?)
	/usr/local/go/src/sync/cond.go:72 +0x97
6.5840/raft.(*Raft).applyLog(0xc000150360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 16 [chan receive]:
6.5840/shardctrler.(*ShardCtrler).applier(0xc00007c9c0)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:70 +0x87
created by 6.5840/shardctrler.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:62 +0x28a

goroutine 18 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000160150, 0x16)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000057e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc000150480)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 19 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc000166000)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 5790 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001ad600, 0xc0003960c0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 24 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0001507e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 25 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000160310, 0x20)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000173690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0001507e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 26 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc000166160)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 27 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166160, 0xc000162670, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 28 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166160, 0xc000162680, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 29 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166160, 0xc000162690, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 30 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166160, 0xc0001626a0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 31 [semacquire]:
6.5840/raft.(*Raft).makeAppendEntriesArgs(0xc000150a20, 0x1)
	/home/ubuntu/my_6.5840/src/raft/raft.go:816 +0x165
6.5840/raft.(*Raft).broadcastHeartBeat(0xc000150a20, 0x1)
	/home/ubuntu/my_6.5840/src/raft/raft.go:853 +0xa5
6.5840/raft.(*Raft).ticker(0xc000150a20)
	/home/ubuntu/my_6.5840/src/raft/raft.go:489 +0x229
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 32 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0001604d0, 0x20)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00016ee90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc000150a20)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 33 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0001662c0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 34 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001662c0, 0xc000162a60, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 35 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001662c0, 0xc000162a70, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 36 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001662c0, 0xc000162a80, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 37 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001662c0, 0xc000162a90, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 39 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000160690, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000214690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc000150c60)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 40 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc000166420)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 45 [semacquire]:
6.5840/raft.(*Raft).makeAppendEntriesArgs(0xc000150ea0, 0x2)
	/home/ubuntu/my_6.5840/src/raft/raft.go:816 +0x165
6.5840/raft.(*Raft).broadcastHeartBeat(0xc000150ea0, 0x1)
	/home/ubuntu/my_6.5840/src/raft/raft.go:853 +0xa5
6.5840/raft.(*Raft).ticker(0xc000150ea0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:489 +0x229
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 46 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000160850, 0x18)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00020fe90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc000150ea0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 47 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc000166580)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 48 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007ade0, {0x69423c?, 0xc0000e4be0?}, {0x638000, 0xc0000e4be0}, {0x64d140, 0xc000125ab0})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/shardctrler.(*Clerk).Command(0xc0002052f0, 0xc0000e4be0)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:73 +0xc5
6.5840/shardctrler.(*Clerk).Query(...)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:60
6.5840/shardkv.(*ShardKV).configurationAction(0xc000166580)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:341 +0x245
6.5840/shardkv.(*ShardKV).Monitor(0xc000166580, 0xc000163200, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:383 +0x5f
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 49 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166580, 0xc000163210, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 50 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166580, 0xc000163220, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 51 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166580, 0xc000163230, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 52 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc000151200)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 53 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000160a10, 0x18)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00021d690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc000151200)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 54 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0001666e0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 55 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001666e0, 0xc0001635d0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 56 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001666e0, 0xc0001635e0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 57 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001666e0, 0xc0001635f0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 58 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001666e0, 0xc000163600, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 60 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000160bd0, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000218e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc000151440)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 61 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc000166840)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 17890 [runnable]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007a340, {0x693bbf?, 0xc000236fd0?}, {0x638280, 0xc00027cd00}, {0x63c540, 0xc0003bacd8})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:92 +0xd0
6.5840/raft.(*Raft).sendAppendEntries(...)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1026
6.5840/raft.(*Raft).sendEntries(0xc000150240, 0x0, 0xc00027cd00)
	/home/ubuntu/my_6.5840/src/raft/raft.go:721 +0xc8
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 11
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 66 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc000151680)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 67 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000160d90, 0x2d)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000514e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc000151680)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 68 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0001669a0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 69 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001669a0, 0xc000163d70, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 70 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001669a0, 0xc000163d80, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 71 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001669a0, 0xc000163d90, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 72 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001669a0, 0xc000163da0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 73 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0001518c0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 74 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000160f50, 0x2d)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000239e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0001518c0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 75 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc000166b00)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 76 [semacquire]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007b4e0, {0x69423c?, 0xc0000e4c30?}, {0x638000, 0xc0000e4c30}, {0x64d140, 0xc0003c8380})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:92 +0xd0
6.5840/shardctrler.(*Clerk).Command(0xc00022eab0, 0xc0000e4c30)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:73 +0xc5
6.5840/shardctrler.(*Clerk).Query(...)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:60
6.5840/shardkv.(*ShardKV).configurationAction(0xc000166b00)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:341 +0x245
6.5840/shardkv.(*ShardKV).Monitor(0xc000166b00, 0xc00023a1e0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:383 +0x5f
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 77 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166b00, 0xc00023a1f0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 78 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166b00, 0xc00023a200, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 79 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166b00, 0xc00023a210, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 17882 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007a340, {0x693bbf?, 0xc0000567d0?}, {0x638280, 0xc00031f4c0}, {0x63c540, 0xc000358370})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/raft.(*Raft).sendAppendEntries(...)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1026
6.5840/raft.(*Raft).sendEntries(0xc000150240, 0x0, 0xc00031f4c0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:721 +0xc8
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 17847
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 17837 [select]:
6.5840/labrpc.(*Network).processReq(0xc00012e320, {{0x63de40, 0xc00002d9a0}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0001aa600, 0xcb, 0x100}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 5789 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0001ad600)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 5793 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001ad600, 0xc0003960f0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 17886 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007b460, {0x693bbf?, 0xc000056fd0?}, {0x638280, 0xc00027c180}, {0x63c540, 0xc0002b0a10})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/raft.(*Raft).sendAppendEntries(...)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1026
6.5840/raft.(*Raft).sendEntries(0xc0001518c0, 0x0, 0xc00027c180)
	/home/ubuntu/my_6.5840/src/raft/raft.go:721 +0xc8
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 73
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 5786 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001ad4a0, 0xc00019d9d0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 5758 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0003802d0, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0003202c0?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc0001d3440)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 5783 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001ad4a0, 0xc00019d9a0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 17888 [select]:
6.5840/labrpc.(*Network).processReq(0xc00012e320, {{0x63de40, 0xc000163e40}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0000b2600, 0xc7, 0x100}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 17803 [runnable]:
encoding/gob.encOpFor.func4(0x0?, 0xc0003d1380, {0x66a4c0?, 0xc00044efe8?, 0x199?})
	/usr/local/go/src/encoding/gob/encode.go:542 +0x92
encoding/gob.(*Encoder).encodeArray(0xc0003d1300?, 0xc0003b5d10?, {0x63c640?, 0xc0002fade0?, 0x1000046d537?}, 0xc000397ac0, 0x0, 0x337, 0x0)
	/usr/local/go/src/encoding/gob/encode.go:351 +0x4ba
encoding/gob.encOpFor.func1(0x63c640?, 0xc0003d1300, {0x63c640?, 0xc0002fade0?, 0xc0004d1980?})
	/usr/local/go/src/encoding/gob/encode.go:516 +0x139
encoding/gob.(*Encoder).encodeSingle(0xc0003c0fc0?, 0x0?, 0x6f8478?, {0x63c640?, 0xc0002fade0?, 0x407b0b?})
	/usr/local/go/src/encoding/gob/encode.go:301 +0x1f1
encoding/gob.(*Encoder).encode(0xc0002486e0, 0xc000248718, {0x63c640?, 0xc0002fade0?, 0xc0003c0fc0?}, 0xc0003c0fc0)
	/usr/local/go/src/encoding/gob/encode.go:668 +0x1c8
encoding/gob.(*Encoder).EncodeValue(0xc0002486e0, {0x63c640?, 0xc0002fade0?, 0x63c640?})
	/usr/local/go/src/encoding/gob/encoder.go:251 +0x405
encoding/gob.(*Encoder).Encode(0x63c640?, {0x63c640?, 0xc0002fade0?})
	/usr/local/go/src/encoding/gob/encoder.go:176 +0x74
6.5840/labgob.(*LabEncoder).Encode(0xc0003bacd0, {0x63c640, 0xc0002fade0})
	/home/ubuntu/my_6.5840/src/labgob/labgob.go:34 +0x3f
6.5840/raft.(*Raft).persist(0xc000150240)
	/home/ubuntu/my_6.5840/src/raft/raft.go:170 +0xce
6.5840/raft.(*Raft).Start(0xc000150240, {0x657600, 0xc0002719a0})
	/home/ubuntu/my_6.5840/src/raft/raft.go:420 +0x1c5
6.5840/shardctrler.(*ShardCtrler).Command(0xc00007c780, 0xc0002719a0, 0xc0000fb420)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:149 +0x10b
reflect.Value.call({0xc00012e3c0?, 0xc00005c7b0?, 0xc0000c3b18?}, {0x68fc67, 0x4}, {0xc0000c3d20, 0x3, 0xc0000c3b48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc00012e3c0?, 0xc00005c7b0?, 0xc0003bab70?}, {0xc0000c3d20?, 0x429640?, 0x429626?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015c40, {0x694248, 0x7}, {{0x63de40, 0xc000163000}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000ee1c0, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc0000109f0, {{0x63de40, 0xc000163000}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000ee1c0, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 17894
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 5782 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0001ad4a0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 5787 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00027b0e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 5788 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000381ed0, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000198e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00027b0e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 5779 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001ad340, 0xc00019d1b0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 5781 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000381890, 0x2)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0002cac60?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00027ad80)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 5757 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc0001d3440)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 5791 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001ad600, 0xc0003960d0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 5785 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001ad4a0, 0xc00019d9c0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 17849 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007a380, {0x693bbf?, 0xc0002327d0?}, {0x638280, 0xc00027d880}, {0x63c540, 0xc000358250})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/raft.(*Raft).sendAppendEntries(...)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1026
6.5840/raft.(*Raft).sendEntries(0xc000150240, 0x2, 0xc00027d880)
	/home/ubuntu/my_6.5840/src/raft/raft.go:721 +0xc8
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 11
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 5784 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001ad4a0, 0xc00019d9b0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 5760 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001ad340, 0xc00019d180, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 5780 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00027ad80)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 17905 [semacquire]:
6.5840/raft.(*Raft).sendEntries(0xc000150ea0, 0x0, 0xc0003d2c40)
	/home/ubuntu/my_6.5840/src/raft/raft.go:720 +0x45
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 45
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 5792 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001ad600, 0xc0003960e0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 17869 [semacquire]:
time.NewTimer(0x5f5e100)
	/usr/local/go/src/time/sleep.go:144 +0x28
time.After(...)
	/usr/local/go/src/time/sleep.go:203
6.5840/labrpc.(*Network).processReq(0xc00012e320, {{0x63de40, 0xc00002d9a0}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc000112800, 0x219, 0x400}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:261 +0x38a
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 17893 [semacquire]:
encoding/gob.(*encBuffer).WriteString(...)
	/usr/local/go/src/encoding/gob/encode.go:60
encoding/gob.(*Encoder).encodeInterface(0xc0001c48c0, 0xc0001c48f8, {0x649ba0?, 0xc0003d9eb8?, 0x5f0274?})
	/usr/local/go/src/encoding/gob/encode.go:409 +0x58b
encoding/gob.encOpFor.func5(0x66a4c0?, 0xc00027d2c0, {0x649ba0?, 0xc0003d9eb8?, 0x6f8478?})
	/usr/local/go/src/encoding/gob/encode.go:554 +0xcf
encoding/gob.(*Encoder).encodeStruct(0xc0001c48c0, 0xc0001c48f8, 0xc0003a0450, {0x66a4c0?, 0xc0003d9ea8?, 0x96?})
	/usr/local/go/src/encoding/gob/encode.go:328 +0x2be
encoding/gob.encOpFor.func4(0x63c640?, 0xc00027d280, {0x66a4c0?, 0xc0003d9ea8?, 0x0?})
	/usr/local/go/src/encoding/gob/encode.go:546 +0x6e
encoding/gob.(*Encoder).encodeArray(0xc00027d200?, 0xc0003b5d10?, {0x63c640?, 0xc000566f48?, 0x1000046d537?}, 0xc000397ac0, 0x0, 0x336, 0x0)
	/usr/local/go/src/encoding/gob/encode.go:351 +0x4ba
encoding/gob.encOpFor.func1(0x63c640?, 0xc00027d200, {0x63c640?, 0xc000566f48?, 0xc0004d1980?})
	/usr/local/go/src/encoding/gob/encode.go:516 +0x139
encoding/gob.(*Encoder).encodeSingle(0xc0003c0fc0?, 0x0?, 0x6f8478?, {0x63c640?, 0xc000566f48?, 0x407b0b?})
	/usr/local/go/src/encoding/gob/encode.go:301 +0x1f1
encoding/gob.(*Encoder).encode(0xc0001c48c0, 0xc0001c48f8, {0x63c640?, 0xc000566f48?, 0xc0003c0fc0?}, 0xc0003c0fc0)
	/usr/local/go/src/encoding/gob/encode.go:668 +0x1c8
encoding/gob.(*Encoder).EncodeValue(0xc0001c48c0, {0x63c640?, 0xc000566f48?, 0x63c640?})
	/usr/local/go/src/encoding/gob/encoder.go:251 +0x405
encoding/gob.(*Encoder).Encode(0x63c640?, {0x63c640?, 0xc000566f48?})
	/usr/local/go/src/encoding/gob/encoder.go:176 +0x74
6.5840/labgob.(*LabEncoder).Encode(0xc0002b0ce8, {0x63c640, 0xc000566f48})
	/home/ubuntu/my_6.5840/src/labgob/labgob.go:34 +0x3f
6.5840/raft.(*Raft).persist(0xc000150360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:170 +0xce
6.5840/raft.(*Raft).AppendEntries(0xc000150360, 0xc00027d140, 0xc00028bad0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1105 +0x4c5
reflect.Value.call({0xc00012e500?, 0xc00005c840?, 0xc000389b18?}, {0x68fc67, 0x4}, {0xc000389d20, 0x3, 0xc000389b48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc00012e500?, 0xc00005c840?, 0xc0002b0b98?}, {0xc000389d20?, 0x68a260?, 0xc000233438?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015e80, {0x693bc4, 0xd}, {{0x63de40, 0xc00002d9a0}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0000b2900, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc000010a38, {{0x63de40, 0xc00002d9a0}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0000b2900, 0xcb, 0x100}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 17892
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 5778 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001ad340, 0xc00019d1a0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 5777 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001ad340, 0xc00019d190, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 5759 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0001ad340)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 17891 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007a380, {0x693bbf?, 0xc000239748?}, {0x638280, 0xc00027cd40}, {0x63c540, 0xc0002b0b88})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/raft.(*Raft).sendAppendEntries(...)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1026
6.5840/raft.(*Raft).sendEntries(0xc000150240, 0x2, 0xc00027cd40)
	/home/ubuntu/my_6.5840/src/raft/raft.go:721 +0xc8
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 11
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 17872 [semacquire]:
6.5840/raft.(*Raft).sendEntries(0xc000150a20, 0x0, 0xc00027da00)
	/home/ubuntu/my_6.5840/src/raft/raft.go:720 +0x45
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 31
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 17892 [select]:
6.5840/labrpc.(*Network).processReq(0xc00012e320, {{0x63de40, 0xc00002d9a0}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0000b2900, 0xcb, 0x100}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 17870 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0x0?, 0x0?, 0x0?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc000150360)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).AppendEntries(0xc000150360, 0xc0003818c0, 0xc000152fc0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1052 +0x54
reflect.Value.call({0xc00012e500?, 0xc00005c840?, 0xc000349b18?}, {0x68fc67, 0x4}, {0xc000349d20, 0x3, 0xc000349b48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc00012e500?, 0xc00005c840?, 0xc0003ba938?}, {0xc000349d20?, 0x68a260?, 0xc000213c38?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015e80, {0x693bc4, 0xd}, {{0x63de40, 0xc00002d9a0}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc000112800, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc000010a38, {{0x63de40, 0xc00002d9a0}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc000112800, 0x219, 0x400}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 17869
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 17835 [select]:
6.5840/labrpc.(*Network).processReq(0xc00012e320, {{0x63de40, 0xc00002d920}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc000402400, 0x219, 0x400}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 17836 [semacquire]:
6.5840/raft.(*Raft).persist(0xc000150120)
	/home/ubuntu/my_6.5840/src/raft/raft.go:165 +0x25
6.5840/raft.(*Raft).AppendEntries(0xc000150120, 0xc000380fc0, 0xc000152a80)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1105 +0x4c5
reflect.Value.call({0xc00012e500?, 0xc00005c5f8?, 0xc00033bb18?}, {0x68fc67, 0x4}, {0xc00033bd20, 0x3, 0xc00033bb48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc00012e500?, 0xc00005c5f8?, 0xc000358380?}, {0xc00033bd20?, 0x68a260?, 0xc00016e438?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015a00, {0x693bc4, 0xd}, {{0x63de40, 0xc00002d920}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc000402400, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc0000109a8, {{0x63de40, 0xc00002d920}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc000402400, 0x219, 0x400}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 17835
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 17889 [semacquire]:
6.5840/labgob.NewEncoder({0x6f3920, 0xc000414db0})
	/home/ubuntu/my_6.5840/src/labgob/labgob.go:27 +0x28
6.5840/labrpc.(*Service).dispatch(0xc00027c480, {0x693bc4, 0xd}, {{0x63de40, 0xc000163e40}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0000b2600, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:518 +0x388
6.5840/labrpc.(*Server).dispatch(0xc0003a06a8, {{0x63de40, 0xc000163e40}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0000b2600, 0xc7, 0x100}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 17888
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 17894 [select]:
6.5840/labrpc.(*Network).processReq(0xc00012e320, {{0x63de40, 0xc000163000}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000ee1c0, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 17883 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007a380, {0x693bbf?, 0xc00005b7d0?}, {0x638280, 0xc00031f500}, {0x63c540, 0xc000358558})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/raft.(*Raft).sendAppendEntries(...)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1026
6.5840/raft.(*Raft).sendEntries(0xc000150240, 0x2, 0xc00031f500)
	/home/ubuntu/my_6.5840/src/raft/raft.go:721 +0xc8
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 17847
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 17838 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0x0?, 0x0?, 0x0?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc000150360)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).AppendEntries(0xc000150360, 0xc0003816c0, 0xc000152d80)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1052 +0x54
reflect.Value.call({0xc00012e500?, 0xc00005c840?, 0xc000337b18?}, {0x68fc67, 0x4}, {0xc000337d20, 0x3, 0xc000337b48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc00012e500?, 0xc00005c840?, 0xc000358568?}, {0xc000337d20?, 0x68a260?, 0xc00005b438?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015e80, {0x693bc4, 0xd}, {{0x63de40, 0xc00002d9a0}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0001aa600, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc000010a38, {{0x63de40, 0xc00002d9a0}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc0001aa600, 0xcb, 0x100}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 17837
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0
exit status 2
FAIL	6.5840/shardkv	30.251s
