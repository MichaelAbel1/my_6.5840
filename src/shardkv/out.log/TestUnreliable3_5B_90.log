Test (5B): unreliable 3...
2025/01/04 13:02:41 {Node 0}{Group 100} started
2025/01/04 13:02:41 {Node 1}{Group 100} started
2025/01/04 13:02:41 {Node 2}{Group 100} started
2025/01/04 13:02:41 {Node 0}{Group 101} started
2025/01/04 13:02:41 {Node 1}{Group 101} started
2025/01/04 13:02:41 {Node 2}{Group 101} started
2025/01/04 13:02:41 {Node 0}{Group 102} started
2025/01/04 13:02:41 {Node 1}{Group 102} started
2025/01/04 13:02:41 {Node 2}{Group 102} started
2025/01/04 13:02:41 {Node 0}{Group 102} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:41 {Node 0}{Group 102} Execute Command Command{commandType: EmptyShards, Data: <nil>} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:41 {Node 2}{Group 101} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:41 {Node 2}{Group 101} Execute Command Command{commandType: EmptyShards, Data: <nil>} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:41 {Node 0}{Group 100} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:41 {Node 0}{Group 100} Execute Command Command{commandType: EmptyShards, Data: <nil>} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:41 {Node 1}{Group 101} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:41 {Node 2}{Group 102} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:41 {Node 0}{Group 101} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:41 {Node 2}{Group 100} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:41 {Node 1}{Group 102} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:41 {Node 1}{Group 100} tries to apply message {true Command{commandType: EmptyShards, Data: <nil>} 1 1 false [] 0 0}
2025/01/04 13:02:41 {Node 2}{Group 101} fetches latest configuration {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} when currentConfigNum is 0
2025/01/04 13:02:41 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:41 {Node 2}{Group 101} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:41 {Node 2}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:41 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:41 {Node 1}{Group 101} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:41 {Node 0}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:41 {Node 0}{Group 101} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:41 {Node 0}{Group 100} fetches latest configuration {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} when currentConfigNum is 0
2025/01/04 13:02:42 {Node 0}{Group 102} fetches latest configuration {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} when currentConfigNum is 0
2025/01/04 13:02:42 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:42 {Node 0}{Group 100} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:42 {Node 0}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:42 {Node 0}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:42 {Node 0}{Group 102} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:42 {Node 0}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:42 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:42 {Node 1}{Group 102} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:42 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:42 {Node 1}{Group 100} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:42 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}} 2 1 false [] 0 0}
2025/01/04 13:02:42 {Node 2}{Group 102} updates currentConfig from {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]} to {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:42 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 mclha Put 2861075970978936653 0}} 3 1 false [] 0 0}
2025/01/04 13:02:42 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {0 mclha Put 2861075970978936653 0}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:42 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 mclha Put 2861075970978936653 0}} 3 1 false [] 0 0}
2025/01/04 13:02:42 {Node 2}{Group 100} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 17 255 138 2 10 0 0 0 0 0 0 0 0 0 0 1 0 0 71 255 138 1 2 1 10 255 200 255 200 255 200 255 200 255 200 255 200 255 200 255 200 255 200 255 200 1 1 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 0 15 255 161 4 1 2 255 162 0 1 4 1 255 158 0 0 31 255 157 3 1 2 255 158 0 1 2 1 2 75 86 1 255 160 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 159 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 160 0 1 12 1 12 0 0 44 255 162 0 10 2 1 0 0 4 1 0 0 8 1 0 0 10 1 0 0 14 1 0 0 16 1 0 0 0 1 0 0 12 1 0 0 18 1 0 0 6 1 0 0 15 255 167 4 1 2 255 168 0 1 4 1 255 164 0 0 51 255 163 3 1 2 255 164 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 166 0 0 0 44 255 165 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 166 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 4 255 168 0 0] 1 2}
2025/01/04 13:02:42 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 mclha Put 2861075970978936653 0}} 3 1 false [] 0 0}
2025/01/04 13:02:42 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 dTwqf Put 2861075970978936653 1}} 4 1 false [] 0 0}
2025/01/04 13:02:42 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {1 dTwqf Put 2861075970978936653 1}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:42 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 dTwqf Put 2861075970978936653 1}} 4 1 false [] 0 0}
2025/01/04 13:02:42 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 dTwqf Put 2861075970978936653 1}} 4 1 false [] 0 0}
2025/01/04 13:02:42 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 KpVln Put 2861075970978936653 2}} 5 1 false [] 0 0}
2025/01/04 13:02:42 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {2 KpVln Put 2861075970978936653 2}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:42 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 KpVln Put 2861075970978936653 2}} 5 1 false [] 0 0}
2025/01/04 13:02:42 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 KpVln Put 2861075970978936653 2}} 5 1 false [] 0 0}
2025/01/04 13:02:42 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 8cEpi Put 2861075970978936653 3}} 6 1 false [] 0 0}
2025/01/04 13:02:42 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {3 8cEpi Put 2861075970978936653 3}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:42 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 8cEpi Put 2861075970978936653 3}} 6 1 false [] 0 0}
2025/01/04 13:02:42 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 8cEpi Put 2861075970978936653 3}} 6 1 false [] 0 0}
2025/01/04 13:02:42 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4 z017X Put 2861075970978936653 4}} 7 1 false [] 0 0}
2025/01/04 13:02:42 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {4 z017X Put 2861075970978936653 4}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:42 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4 z017X Put 2861075970978936653 4}} 7 1 false [] 0 0}
2025/01/04 13:02:42 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {4 z017X Put 2861075970978936653 4}} 7 1 false [] 0 0}
2025/01/04 13:02:42 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5 p4Qdy Put 2861075970978936653 5}} 8 1 false [] 0 0}
2025/01/04 13:02:42 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {5 p4Qdy Put 2861075970978936653 5}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:42 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5 p4Qdy Put 2861075970978936653 5}} 8 1 false [] 0 0}
2025/01/04 13:02:42 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {5 p4Qdy Put 2861075970978936653 5}} 8 1 false [] 0 0}
2025/01/04 13:02:42 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6 TPyNW Put 2861075970978936653 6}} 9 1 false [] 0 0}
2025/01/04 13:02:42 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {6 TPyNW Put 2861075970978936653 6}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:42 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6 TPyNW Put 2861075970978936653 6}} 9 1 false [] 0 0}
2025/01/04 13:02:42 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {6 TPyNW Put 2861075970978936653 6}} 9 1 false [] 0 0}
2025/01/04 13:02:42 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 zVfYN Put 2861075970978936653 7}} 10 1 false [] 0 0}
2025/01/04 13:02:42 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {7 zVfYN Put 2861075970978936653 7}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:42 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 zVfYN Put 2861075970978936653 7}} 10 1 false [] 0 0}
2025/01/04 13:02:43 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 zVfYN Put 2861075970978936653 7}} 10 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8 RZv41 Put 2861075970978936653 8}} 11 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {8 RZv41 Put 2861075970978936653 8}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:43 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8 RZv41 Put 2861075970978936653 8}} 11 1 false [] 0 0}
2025/01/04 13:02:43 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8 RZv41 Put 2861075970978936653 8}} 11 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 YCMcG Put 2861075970978936653 9}} 12 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {9 YCMcG Put 2861075970978936653 9}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:43 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 YCMcG Put 2861075970978936653 9}} 12 1 false [] 0 0}
2025/01/04 13:02:43 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 YCMcG Put 2861075970978936653 9}} 12 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 LAVSN Put 223261431832303620 0}} 13 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {7 LAVSN Put 223261431832303620 0}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:43 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 LAVSN Put 223261431832303620 0}} 13 1 false [] 0 0}
2025/01/04 13:02:43 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 LAVSN Put 223261431832303620 0}} 13 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} fetches latest configuration {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} when currentConfigNum is 1
2025/01/04 13:02:43 {Node 0}{Group 102} fetches latest configuration {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} when currentConfigNum is 1
2025/01/04 13:02:43 {Node 0}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 102} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:43 {Node 0}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:43 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 14 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:43 {Node 0}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:43 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:02:43 {Node 2}{Group 102} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:43 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:02:43 {Node 1}{Group 102} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:43 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 14 1 false [] 0 0}
2025/01/04 13:02:43 {Node 1}{Group 100} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:43 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 14 1 false [] 0 0}
2025/01/04 13:02:43 {Node 2}{Group 100} discards outdated configuration {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} when currentConfig is {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]}
2025/01/04 13:02:43 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7  Get 223261431832303620 1}} 15 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 1470913102139600799 0}} 16 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {1  Get 1470913102139600799 0}} with CommandReply CommandReply{Err: OK, Value: dTwqf}
2025/01/04 13:02:43 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {7  Get 223261431832303620 1}} with CommandReply CommandReply{Err: OK, Value: LAVSN}
2025/01/04 13:02:43 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7  Get 223261431832303620 1}} 15 1 false [] 0 0}
2025/01/04 13:02:43 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 1470913102139600799 0}} 16 1 false [] 0 0}
2025/01/04 13:02:43 {Node 2}{Group 101} fetches latest configuration {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} when currentConfigNum is 1
2025/01/04 13:02:43 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:02:43 {Node 2}{Group 101} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:43 {Node 2}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:43 {Node 0}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc000162190 1:0xc0001621a0 2:0xc0001621b0 3:0xc0001621c0 4:0xc0001621d0 5:0xc0001621e0 6:0xc0001621f0 7:0xc000162200 8:0xc000162210 9:0xc000162220] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:43 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}} 3 1 false [] 0 0}
2025/01/04 13:02:43 {Node 1}{Group 101} updates currentConfig from {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]} to {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:43 {Node 2}{Group 101} starts a PullTask to get shards [1 2 3 0 4] from group 100 when config is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:43 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7  Get 223261431832303620 1}} 15 1 false [] 0 0}
2025/01/04 13:02:43 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 1470913102139600799 0}} 16 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 3549946918322293150 0}} 17 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {1  Get 3549946918322293150 0}} with CommandReply CommandReply{Err: OK, Value: dTwqf}
2025/01/04 13:02:43 {Node 0}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 2, ShardIDs: [1 2 3 0 4]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:KpVln] 1:map[3:8cEpi] 2:map[4:z017X] 3:map[5:p4Qdy] 4:map[6:TPyNW]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:43 {Node 2}{Group 101} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:KpVln] 1:map[3:8cEpi] 2:map[4:z017X] 3:map[5:p4Qdy] 4:map[6:TPyNW]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 2
2025/01/04 13:02:43 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 3549946918322293150 0}} 17 1 false [] 0 0}
2025/01/04 13:02:43 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 3549946918322293150 0}} 17 1 false [] 0 0}
2025/01/04 13:02:43 {Node 2}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 2 map[0:map[2:KpVln] 1:map[3:8cEpi] 2:map[4:z017X] 3:map[5:p4Qdy] 4:map[6:TPyNW]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 4 1 false [] 0 0}
2025/01/04 13:02:43 {Node 2}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:KpVln] 1:map[3:8cEpi] 2:map[4:z017X] 3:map[5:p4Qdy] 4:map[6:TPyNW]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:43 {Node 2}{Group 101} Execute Command Command{commandType: InsertShards, Data: {OK 2 map[0:map[2:KpVln] 1:map[3:8cEpi] 2:map[4:z017X] 3:map[5:p4Qdy] 4:map[6:TPyNW]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:02:43 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 dAceb Append 3549946918322293150 1}} 18 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {0 dAceb Append 3549946918322293150 1}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:43 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 dAceb Append 3549946918322293150 1}} 18 1 false [] 0 0}
2025/01/04 13:02:43 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc000163580 1:0xc000163590 2:0xc0001635a0 3:0xc0001635b0 4:0xc0001635c0 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000163600 9:0xc000163610] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:43 {Node 1}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 2 map[0:map[2:KpVln] 1:map[3:8cEpi] 2:map[4:z017X] 3:map[5:p4Qdy] 4:map[6:TPyNW]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]}} 4 1 false [] 0 0}
2025/01/04 13:02:43 {Node 1}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 2, Shards: map[0:map[2:KpVln] 1:map[3:8cEpi] 2:map[4:z017X] 3:map[5:p4Qdy] 4:map[6:TPyNW]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:43 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0 dAceb Append 3549946918322293150 1}} 18 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc000162190 1:0xc0001621a0 2:0xc0001621b0 3:0xc0001621c0 4:0xc0001621d0 5:0xc0001621e0 6:0xc0001621f0 7:0xc000162200 8:0xc000162210 9:0xc000162220] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:43 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 ITpfY Append 2744177573667576175 0}} 19 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {1 ITpfY Append 2744177573667576175 0}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:43 {Node 2}{Group 101} starts a GCTask to delete shards [4 0 1 2 3] from group 100 when config is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:43 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 ITpfY Append 2744177573667576175 0}} 19 1 false [] 0 0}
2025/01/04 13:02:43 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 ITpfY Append 2744177573667576175 0}} 19 1 false [] 0 0}
2025/01/04 13:02:43 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc000163580 1:0xc000163590 2:0xc0001635a0 3:0xc0001635b0 4:0xc0001635c0 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000163600 9:0xc000163610] when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:43 {Node 0}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [4 0 1 2 3]}} 20 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100}'s shards status are map[0:0xc000162190 1:0xc0001621a0 2:0xc0001621b0 3:0xc0001621c0 4:0xc0001621d0 5:0xc0001621e0 6:0xc0001621f0 7:0xc000162200 8:0xc000162210 9:0xc000162220] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [4 0 1 2 3]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:43 {Node 0}{Group 100}'s shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc0001621e0 6:0xc0001621f0 7:0xc000162200 8:0xc000162210 9:0xc000162220] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [4 0 1 2 3]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:43 {Node 0}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {2 [4 0 1 2 3]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:43 {Node 0}{Group 100} processes GCTaskRequest ShardOperationArgs{ConfigNum: 2, ShardIDs: [4 0 1 2 3]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:43 {Node 2}{Group 101} deletes shards [4 0 1 2 3] in remote group successfully when currentConfigNum is 2
2025/01/04 13:02:43 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [4 0 1 2 3]}} 20 1 false [] 0 0}
2025/01/04 13:02:43 {Node 2}{Group 100} discards outdated shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [4 0 1 2 3]} when currentConfig is {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]}
2025/01/04 13:02:43 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [4 0 1 2 3]}} 5 1 false [] 0 0}
2025/01/04 13:02:43 {Node 2}{Group 101}'s shards status are map[0:0xc000163580 1:0xc000163590 2:0xc0001635a0 3:0xc0001635b0 4:0xc0001635c0 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000163600 9:0xc000163610] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [4 0 1 2 3]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:43 {Node 2}{Group 101}'s shards status are map[0:0xc000163580 1:0xc000163590 2:0xc0001635a0 3:0xc0001635b0 4:0xc0001635c0 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000163600 9:0xc000163610] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [4 0 1 2 3]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:43 {Node 2}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {2 [4 0 1 2 3]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:43 {Node 0}{Group 101} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 71 255 138 1 2 1 10 255 200 255 200 255 200 255 200 255 200 255 200 255 200 255 200 255 200 255 200 1 1 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 0 113 255 138 1 4 1 10 255 202 255 202 255 202 255 202 255 202 255 200 255 200 255 200 255 200 255 200 1 2 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 0 15 255 161 4 1 2 255 162 0 1 4 1 255 158 0 0 31 255 157 3 1 2 255 158 0 1 2 1 2 75 86 1 255 160 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 159 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 160 0 1 12 1 12 0 0 94 255 162 0 10 18 1 0 0 0 1 1 1 50 5 75 112 86 108 110 1 3 0 2 1 1 1 51 5 56 99 69 112 105 1 3 0 4 1 1 1 52 5 122 48 49 55 88 1 3 0 6 1 1 1 53 5 112 52 81 100 121 1 3 0 16 1 0 0 8 1 1 1 54 5 84 80 121 78 87 1 3 0 10 1 0 0 12 1 0 0 14 1 0 0 15 255 167 4 1 2 255 168 0 1 4 1 255 164 0 0 51 255 163 3 1 2 255 164 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 166 0 0 0 44 255 165 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 166 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 38 255 168 0 2 248 6 50 94 45 192 209 176 8 2 1 2 79 75 0 0 248 79 105 42 223 187 53 238 154 1 18 1 1 2 79 75 0 0] 1 4}
2025/01/04 13:02:43 {Node 0}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [4 0 1 2 3]}} 5 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 101} discards outdated shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [4 0 1 2 3]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:43 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {2 [4 0 1 2 3]}} 5 1 false [] 0 0}
2025/01/04 13:02:43 {Node 1}{Group 101}'s shards status are map[0:0xc0001631b0 1:0xc0001631c0 2:0xc0001631d0 3:0xc0001631e0 4:0xc0001631f0 5:0xc000163200 6:0xc000163210 7:0xc000163220 8:0xc000163230 9:0xc000163240] before accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [4 0 1 2 3]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:43 {Node 1}{Group 101}'s shards status are map[0:0xc0001631b0 1:0xc0001631c0 2:0xc0001631d0 3:0xc0001631e0 4:0xc0001631f0 5:0xc000163200 6:0xc000163210 7:0xc000163220 8:0xc000163230 9:0xc000163240] after accepting shards deletion ShardOperationArgs{ConfigNum: 2, ShardIDs: [4 0 1 2 3]} when currentConfig is {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]}
2025/01/04 13:02:43 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 ApLzO Put 3549946918322293150 2}} 6 1 false [] 0 0}
2025/01/04 13:02:43 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {6 ApLzO Put 3549946918322293150 2}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:43 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 ApLzO Put 3549946918322293150 2}} 6 1 false [] 0 0}
2025/01/04 13:02:43 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 ApLzO Put 3549946918322293150 2}} 6 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 1151465535048432377 0}} 21 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {0  Get 1151465535048432377 0}} with CommandReply CommandReply{Err: OK, Value: mclhadAceb}
2025/01/04 13:02:43 {Node 1}{Group 100} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 71 255 138 1 2 1 10 255 200 255 200 255 200 255 200 255 200 255 200 255 200 255 200 255 200 255 200 1 1 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 0 113 255 138 1 4 1 10 255 202 255 202 255 202 255 202 255 202 255 200 255 200 255 200 255 200 255 200 1 2 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 0 15 255 161 4 1 2 255 162 0 1 4 1 255 158 0 0 31 255 157 3 1 2 255 158 0 1 2 1 2 75 86 1 255 160 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 159 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 160 0 1 12 1 12 0 0 94 255 162 0 10 8 1 0 0 10 1 1 1 55 5 76 65 86 83 78 0 14 1 1 1 57 5 89 67 77 99 71 0 16 1 1 1 48 10 109 99 108 104 97 100 65 99 101 98 0 0 1 0 0 2 1 0 0 4 1 0 0 6 1 0 0 12 1 1 1 56 5 82 90 118 52 49 0 18 1 1 1 49 10 100 84 119 113 102 73 84 112 102 89 0 15 255 167 4 1 2 255 168 0 1 4 1 255 164 0 0 51 255 163 3 1 2 255 164 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 166 0 0 0 44 255 165 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 166 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 72 255 168 0 4 248 79 105 42 223 187 53 238 154 1 18 1 1 2 79 75 0 0 248 6 50 94 45 192 209 176 8 2 1 2 79 75 0 0 248 98 135 227 211 220 47 147 60 1 2 1 1 2 79 75 0 0 248 76 42 141 237 142 25 50 222 2 1 2 79 75 0 0] 1 20}
2025/01/04 13:02:43 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 1151465535048432377 0}} 21 1 false [] 0 0}
2025/01/04 13:02:43 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {0  Get 1151465535048432377 0}} 21 1 false [] 0 0}
2025/01/04 13:02:43 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 wctwi Append 1470913102139600799 1}} 7 1 false [] 0 0}
2025/01/04 13:02:43 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {5 wctwi Append 1470913102139600799 1}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:43 {Node 0}{Group 100} fetches latest configuration {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 2
2025/01/04 13:02:43 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8  Get 1151465535048432377 1}} 22 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {8  Get 1151465535048432377 1}} with CommandReply CommandReply{Err: OK, Value: RZv41}
2025/01/04 13:02:43 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 wctwi Append 1470913102139600799 1}} 7 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 wctwi Append 1470913102139600799 1}} 7 1 false [] 0 0}
2025/01/04 13:02:43 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8  Get 1151465535048432377 1}} 22 1 false [] 0 0}
2025/01/04 13:02:43 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {8  Get 1151465535048432377 1}} 22 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 23 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:43 {Node 0}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:43 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 23 1 false [] 0 0}
2025/01/04 13:02:43 {Node 2}{Group 100} discards outdated configuration {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfig is {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]}
2025/01/04 13:02:43 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 23 1 false [] 0 0}
2025/01/04 13:02:43 {Node 1}{Group 100} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:43 {Node 0}{Group 102} fetches latest configuration {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 2
2025/01/04 13:02:43 {Node 2}{Group 101} fetches latest configuration {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 2
2025/01/04 13:02:43 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 H2UPv Append 1151465535048432377 2}} 24 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {1 H2UPv Append 1151465535048432377 2}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:43 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 H2UPv Append 1151465535048432377 2}} 24 1 false [] 0 0}
2025/01/04 13:02:43 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1 H2UPv Append 1151465535048432377 2}} 24 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 1151465535048432377 3}} 25 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {1  Get 1151465535048432377 3}} with CommandReply CommandReply{Err: OK, Value: dTwqfITpfYH2UPv}
2025/01/04 13:02:43 {Node 0}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 4 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 102} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:43 {Node 0}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:43 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 8 1 false [] 0 0}
2025/01/04 13:02:43 {Node 2}{Group 101} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:43 {Node 2}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:43 {Node 0}{Group 102} starts a PullTask to get shards [6 5] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:43 {Node 0}{Group 102} starts a PullTask to get shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:43 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {1  Get 1151465535048432377 3}} 25 1 false [] 0 0}
2025/01/04 13:02:43 {Node 0}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc0001621e0 6:0xc0001621f0 7:0xc000162200 8:0xc000162210 9:0xc000162220] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:43 {Node 0}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 8 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 101} discards outdated configuration {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:44 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 4 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 102} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 4 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 102} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 8 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 101} updates currentConfig from {Num:2,Shards:[101 101 101 101 101 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2]]} to {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [6 5]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:LAVSN] 6:map[8:RZv41]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:44 {Node 0}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:LAVSN] 6:map[8:RZv41]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 3
2025/01/04 13:02:44 {Node 0}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[5:map[7:LAVSN] 6:map[8:RZv41]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} 5 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:LAVSN] 6:map[8:RZv41]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 3 map[5:map[7:LAVSN] 6:map[8:RZv41]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:02:44 {Node 0}{Group 102} starts a GCTask to delete shards [5 6] from group 100 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[5:map[7:LAVSN] 6:map[8:RZv41]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} 5 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:LAVSN] 6:map[8:RZv41]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[5:map[7:LAVSN] 6:map[8:RZv41]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} 5 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[5:map[7:LAVSN] 6:map[8:RZv41]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc000163580 1:0xc000163590 2:0xc0001635a0 3:0xc0001635b0 4:0xc0001635c0 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000163600 9:0xc000163610] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc000163950 1:0xc000163960 2:0xc000163970 3:0xc000163980 4:0xc000163990 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc0001621e0 6:0xc0001621f0 7:0xc000162200 8:0xc000162210 9:0xc000162220] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 102} starts a PullTask to get shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 26 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 100}'s shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc0001621e0 6:0xc0001621f0 7:0xc000162200 8:0xc000162210 9:0xc000162220] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 100}'s shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc000200a00 6:0xc000200a10 7:0xc000162200 8:0xc000162210 9:0xc000162220] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {3 [5 6]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:44 {Node 0}{Group 100} processes GCTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:44 {Node 0}{Group 102} deletes shards [5 6] in remote group successfully when currentConfigNum is 3
2025/01/04 13:02:44 {Node 1}{Group 100} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 113 255 138 1 4 1 10 255 202 255 202 255 202 255 202 255 202 255 200 255 200 255 200 255 200 255 200 1 2 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 0 255 155 255 138 1 6 1 10 255 204 255 202 255 202 255 202 255 202 255 204 255 204 255 200 255 200 255 200 1 3 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 0 15 255 161 4 1 2 255 162 0 1 4 1 255 158 0 0 31 255 157 3 1 2 255 158 0 1 2 1 2 75 86 1 255 160 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 159 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 160 0 1 12 1 12 0 0 103 255 162 0 10 10 1 1 1 55 5 76 65 86 83 78 1 2 0 14 1 1 1 57 5 89 67 77 99 71 0 16 1 1 1 48 10 109 99 108 104 97 100 65 99 101 98 0 0 1 0 0 2 1 0 0 4 1 0 0 8 1 0 0 6 1 0 0 12 1 1 1 56 5 82 90 118 52 49 1 2 0 18 1 1 1 49 15 100 84 119 113 102 73 84 112 102 89 72 50 85 80 118 0 15 255 167 4 1 2 255 168 0 1 4 1 255 164 0 0 51 255 163 3 1 2 255 164 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 166 0 0 0 44 255 165 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 166 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 90 255 168 0 5 248 79 105 42 223 187 53 238 154 1 18 1 1 2 79 75 0 0 248 6 50 94 45 192 209 176 8 2 1 2 79 75 0 0 248 98 135 227 211 220 47 147 60 1 2 1 1 2 79 75 0 0 248 76 42 141 237 142 25 50 222 2 1 2 79 75 0 0 248 31 245 167 155 87 85 117 242 1 4 1 1 2 79 75 0 0] 1 25}
2025/01/04 13:02:44 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 26 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 100}'s shards status are map[0:0xc000162620 1:0xc000162630 2:0xc000162640 3:0xc000162650 4:0xc000162660 5:0xc000162670 6:0xc000162680 7:0xc000162690 8:0xc0001626a0 9:0xc0001626b0] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 1}{Group 100}'s shards status are map[0:0xc000162620 1:0xc000162630 2:0xc000162640 3:0xc000162650 4:0xc000162660 5:0xc0003ad180 6:0xc0003ad190 7:0xc000162690 8:0xc0001626a0 9:0xc0001626b0] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 26 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 100} discards outdated shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]}
2025/01/04 13:02:44 {Node 2}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:KpVln]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:44 {Node 0}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:KpVln]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 3
2025/01/04 13:02:44 {Node 0}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 6 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 6 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 102}'s shards status are map[0:0xc000163d20 1:0xc000163d30 2:0xc000163d40 3:0xc000163d50 4:0xc000163d60 5:0xc000163d70 6:0xc000163d80 7:0xc000163d90 8:0xc000163da0 9:0xc000163db0] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 1}{Group 102}'s shards status are map[0:0xc000163d20 1:0xc000163d30 2:0xc000163d40 3:0xc000163d50 4:0xc000163d60 5:0xc000163d70 6:0xc000163d80 7:0xc000163d90 8:0xc000163da0 9:0xc000163db0] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc000163950 1:0xc000163960 2:0xc000163970 3:0xc000163980 4:0xc000163990 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 102}'s shards status are map[0:0xc000163950 1:0xc000163960 2:0xc000163970 3:0xc000163980 4:0xc000163990 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 102}'s shards status are map[0:0xc000163950 1:0xc000163960 2:0xc000163970 3:0xc000163980 4:0xc000163990 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 965018916061572449 0}} 7 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {7  Get 965018916061572449 0}} with CommandReply CommandReply{Err: OK, Value: LAVSN}
2025/01/04 13:02:44 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc000163580 1:0xc000163590 2:0xc0001635a0 3:0xc0001635b0 4:0xc0001635c0 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000163600 9:0xc000163610] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [5 6]}} 6 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 102}'s shards status are map[0:0xc0001b2190 1:0xc0001b21a0 2:0xc0001b21b0 3:0xc0001b21c0 4:0xc0001b21d0 5:0xc0001b21e0 6:0xc0001b21f0 7:0xc0001b2200 8:0xc0001b2210 9:0xc0001b2220] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 102}'s shards status are map[0:0xc0001b2190 1:0xc0001b21a0 2:0xc0001b21b0 3:0xc0001b21c0 4:0xc0001b21d0 5:0xc0001b21e0 6:0xc0001b21f0 7:0xc0001b2200 8:0xc0001b2210 9:0xc0001b2220] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [5 6]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {3 [5 6]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:44 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 965018916061572449 0}} 7 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[0:map[2:KpVln]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }}]}} 8 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:KpVln]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 3 map[0:map[2:KpVln]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:02:44 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 965018916061572449 0}} 7 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 3651484034481482531 0}} 9 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 1151465535048432377 4}} 10 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {4  Get 1151465535048432377 4}} with CommandReply CommandReply{Err: OK, Value: z017X}
2025/01/04 13:02:44 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {4  Get 3651484034481482531 0}} with CommandReply CommandReply{Err: OK, Value: z017X}
2025/01/04 13:02:44 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 3651484034481482531 0}} 9 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 1151465535048432377 4}} 10 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[0:map[2:KpVln]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }}]}} 8 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:KpVln]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 3651484034481482531 0}} 9 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 1151465535048432377 4}} 10 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 jvuu2 Put 1208182982301578220 0}} 9 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 -dKkF Append 1151465535048432377 5}} 10 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {7 -dKkF Append 1151465535048432377 5}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:44 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {2 jvuu2 Put 1208182982301578220 0}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:44 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 jvuu2 Put 1208182982301578220 0}} 9 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 -dKkF Append 1151465535048432377 5}} 10 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 3 map[0:map[2:KpVln]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }}]}} 8 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 3, Shards: map[0:map[2:KpVln]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 jvuu2 Put 1208182982301578220 0}} 9 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 -dKkF Append 1151465535048432377 5}} 10 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 102} starts a GCTask to delete shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc000163580 1:0xc000163590 2:0xc0001635a0 3:0xc0001635b0 4:0xc0001635c0 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000163600 9:0xc000163610] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc000163950 1:0xc000163960 2:0xc000163970 3:0xc000163980 4:0xc000163990 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 1fVh- Append 2744177573667576175 1}} 11 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {2 1fVh- Append 2744177573667576175 1}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:44 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9  Get 1151465535048432377 6}} 27 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {9  Get 1151465535048432377 6}} with CommandReply CommandReply{Err: OK, Value: YCMcG}
2025/01/04 13:02:44 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9  Get 1151465535048432377 6}} 27 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 1fVh- Append 2744177573667576175 1}} 11 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 1fVh- Append 2744177573667576175 1}} 11 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 11 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 101}'s shards status are map[0:0xc000163580 1:0xc000163590 2:0xc0001635a0 3:0xc0001635b0 4:0xc0001635c0 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000163600 9:0xc000163610] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 101}'s shards status are map[0:0xc0001e9510 1:0xc000163590 2:0xc0001635a0 3:0xc0001635b0 4:0xc0001635c0 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000163600 9:0xc000163610] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {3 [0]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:44 {Node 2}{Group 101} processes GCTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:44 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 fNlUc Append 1151465535048432377 7}} 12 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {8 fNlUc Append 1151465535048432377 7}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:44 {Node 0}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc000163950 1:0xc000163960 2:0xc000163970 3:0xc000163980 4:0xc000163990 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 11 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 101}'s shards status are map[0:0xc0001631b0 1:0xc0001631c0 2:0xc0001631d0 3:0xc0001631e0 4:0xc0001631f0 5:0xc000163200 6:0xc000163210 7:0xc000163220 8:0xc000163230 9:0xc000163240] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 1}{Group 101}'s shards status are map[0:0xc000163c70 1:0xc0001631c0 2:0xc0001631d0 3:0xc0001631e0 4:0xc0001631f0 5:0xc000163200 6:0xc000163210 7:0xc000163220 8:0xc000163230 9:0xc000163240] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 fNlUc Append 1151465535048432377 7}} 12 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 fNlUc Append 1151465535048432377 7}} 12 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9  Get 2744177573667576175 2}} 28 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {9  Get 2744177573667576175 2}} with CommandReply CommandReply{Err: OK, Value: YCMcG}
2025/01/04 13:02:44 {Node 0}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 11 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 101} discards outdated shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:44 {Node 0}{Group 102} starts a GCTask to delete shards [0] from group 101 when config is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 1}{Group 100} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 113 255 138 1 4 1 10 255 202 255 202 255 202 255 202 255 202 255 200 255 200 255 200 255 200 255 200 1 2 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 0 255 155 255 138 1 6 1 10 255 204 255 202 255 202 255 202 255 202 255 204 255 204 255 200 255 200 255 200 1 3 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 15 255 161 4 1 2 255 162 0 1 4 1 255 158 0 0 31 255 157 3 1 2 255 158 0 1 2 1 2 75 86 1 255 160 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 159 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 160 0 1 12 1 12 0 0 83 255 162 0 10 2 1 0 0 4 1 0 0 8 1 0 0 10 1 0 0 14 1 1 1 57 5 89 67 77 99 71 0 16 1 1 1 48 10 109 99 108 104 97 100 65 99 101 98 0 0 1 0 0 12 1 0 0 18 1 1 1 49 15 100 84 119 113 102 73 84 112 102 89 72 50 85 80 118 0 6 1 0 0 15 255 167 4 1 2 255 168 0 1 4 1 255 164 0 0 51 255 163 3 1 2 255 164 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 166 0 0 0 44 255 165 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 166 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 90 255 168 0 5 248 79 105 42 223 187 53 238 154 1 18 1 1 2 79 75 0 0 248 6 50 94 45 192 209 176 8 2 1 2 79 75 0 0 248 98 135 227 211 220 47 147 60 1 2 1 1 2 79 75 0 0 248 76 42 141 237 142 25 50 222 2 1 2 79 75 0 0 248 31 245 167 155 87 85 117 242 1 4 1 1 2 79 75 0 0] 1 27}
2025/01/04 13:02:44 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9  Get 2744177573667576175 2}} 28 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 100} fetches latest configuration {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 3
2025/01/04 13:02:44 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9  Get 2744177573667576175 2}} 28 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 T-TZA Append 965018916061572449 1}} 13 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {2 T-TZA Append 965018916061572449 1}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:44 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 T-TZA Append 965018916061572449 1}} 13 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc000163950 1:0xc000163960 2:0xc000163970 3:0xc000163980 4:0xc000163990 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 T-TZA Append 965018916061572449 1}} 13 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5  Get 4254050673674675953 0}} 12 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {5  Get 4254050673674675953 0}} with CommandReply CommandReply{Err: OK, Value: p4Qdywctwi}
2025/01/04 13:02:44 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5  Get 4254050673674675953 0}} 12 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5  Get 4254050673674675953 0}} 12 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 13 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 101}'s shards status are map[0:0xc0001e9510 1:0xc000163590 2:0xc0001635a0 3:0xc0001635b0 4:0xc0001635c0 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000163600 9:0xc000163610] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 101} encounters duplicated shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 101}'s shards status are map[0:0xc0001e9510 1:0xc000163590 2:0xc0001635a0 3:0xc0001635b0 4:0xc0001635c0 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000163600 9:0xc000163610] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {3 [0]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:44 {Node 2}{Group 101} processes GCTaskRequest ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:44 {Node 0}{Group 102} deletes shards [0] in remote group successfully when currentConfigNum is 3
2025/01/04 13:02:44 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 Us1kd Append 965018916061572449 2}} 14 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {8 Us1kd Append 965018916061572449 2}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:44 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 12wiK Append 2744177573667576175 3}} 29 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 30 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 100} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:44 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {9 12wiK Append 2744177573667576175 3}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:44 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 Us1kd Append 965018916061572449 2}} 14 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 15 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 102}'s shards status are map[0:0xc000163950 1:0xc000163960 2:0xc000163970 3:0xc000163980 4:0xc000163990 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 102}'s shards status are map[0:0xc000163950 1:0xc000163960 2:0xc000163970 3:0xc000163980 4:0xc000163990 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {3 [0]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:44 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 13 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 101}'s shards status are map[0:0xc000163c70 1:0xc0001631c0 2:0xc0001631d0 3:0xc0001631e0 4:0xc0001631f0 5:0xc000163200 6:0xc000163210 7:0xc000163220 8:0xc000163230 9:0xc000163240] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 1}{Group 101} encounters duplicated shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 1}{Group 101}'s shards status are map[0:0xc000163c70 1:0xc0001631c0 2:0xc0001631d0 3:0xc0001631e0 4:0xc0001631f0 5:0xc000163200 6:0xc000163210 7:0xc000163220 8:0xc000163230 9:0xc000163240] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 12wiK Append 2744177573667576175 3}} 29 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 30 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 100} discards outdated configuration {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfig is {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]}
2025/01/04 13:02:44 {Node 0}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 13 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 101} discards outdated shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:44 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {3 [0]}} 15 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 102}'s shards status are map[0:0xc0001b2190 1:0xc0001b21a0 2:0xc0001b21b0 3:0xc0001b21c0 4:0xc0001b21d0 5:0xc0001b21e0 6:0xc0001b21f0 7:0xc0001b2200 8:0xc0001b2210 9:0xc0001b2220] before accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 102}'s shards status are map[0:0xc0001b2190 1:0xc0001b21a0 2:0xc0001b21b0 3:0xc0001b21c0 4:0xc0001b21d0 5:0xc0001b21e0 6:0xc0001b21f0 7:0xc0001b2200 8:0xc0001b2210 9:0xc0001b2220] after accepting shards deletion ShardOperationArgs{ConfigNum: 3, ShardIDs: [0]} when currentConfig is {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {9 12wiK Append 2744177573667576175 3}} 29 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 30 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 100} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 9hRNc Append 2744177573667576175 4}} 14 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {5 9hRNc Append 2744177573667576175 4}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:44 {Node 0}{Group 102} fetches latest configuration {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 3
2025/01/04 13:02:44 {Node 0}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc000200a00 6:0xc000200a10 7:0xc000162200 8:0xc000162210 9:0xc000162220] when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 9hRNc Append 2744177573667576175 4}} 14 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 1151465535048432377 8}} 15 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {4  Get 1151465535048432377 8}} with CommandReply CommandReply{Err: OK, Value: z017X}
2025/01/04 13:02:44 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 9hRNc Append 2744177573667576175 4}} 14 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 16 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 102} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:44 {Node 0}{Group 102} starts a PullTask to get shards [9 7] from group 100 when config is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 1151465535048432377 8}} 15 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 1151465535048432377 8}} 15 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 102} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 113 255 138 1 4 1 10 255 202 255 202 255 202 255 202 255 202 255 200 255 200 255 200 255 200 255 200 1 2 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 0 255 155 255 138 1 6 1 10 255 204 255 202 255 202 255 202 255 202 255 204 255 204 255 200 255 200 255 200 1 3 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 15 255 161 4 1 2 255 162 0 1 4 1 255 158 0 0 31 255 157 3 1 2 255 158 0 1 2 1 2 75 86 1 255 160 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 159 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 160 0 1 12 1 12 0 0 93 255 162 0 10 0 1 1 1 50 15 106 118 117 117 50 49 102 86 104 45 84 45 84 90 65 0 4 1 0 0 10 1 1 1 55 10 76 65 86 83 78 45 100 75 107 70 0 14 1 0 0 16 1 0 0 18 1 0 0 2 1 0 0 6 1 0 0 8 1 0 0 12 1 1 1 56 15 82 90 118 52 49 102 78 108 85 99 85 115 49 107 100 0 15 255 167 4 1 2 255 168 0 1 4 1 255 164 0 0 51 255 163 3 1 2 255 164 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 166 0 0 0 44 255 165 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 166 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 255 144 255 168 0 8 248 79 105 42 223 187 53 238 154 1 18 1 1 2 79 75 0 0 248 6 50 94 45 192 209 176 8 2 1 2 79 75 0 0 248 98 135 227 211 220 47 147 60 1 4 1 1 2 79 75 0 0 248 40 211 119 88 168 255 95 62 1 2 1 1 2 79 75 0 0 248 33 136 168 10 215 131 231 216 2 1 2 79 75 0 0 248 26 200 223 46 186 195 218 194 1 4 1 1 2 79 75 0 0 248 76 42 141 237 142 25 50 222 1 2 1 1 2 79 75 0 0 248 31 245 167 155 87 85 117 242 1 14 1 1 2 79 75 0 0] 1 15}
2025/01/04 13:02:44 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 16 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 102} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [9 7]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[7:map[9:YCMcG12wiK] 9:map[1:dTwqfITpfYH2UPv]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:44 {Node 0}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[7:map[9:YCMcG12wiK] 9:map[1:dTwqfITpfYH2UPv]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 4
2025/01/04 13:02:44 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 16 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 102} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[7:map[9:YCMcG12wiK] 9:map[1:dTwqfITpfYH2UPv]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} 17 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[7:map[9:YCMcG12wiK] 9:map[1:dTwqfITpfYH2UPv]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 4 map[7:map[9:YCMcG12wiK] 9:map[1:dTwqfITpfYH2UPv]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:02:44 {Node 2}{Group 101} fetches latest configuration {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 3
2025/01/04 13:02:44 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[7:map[9:YCMcG12wiK] 9:map[1:dTwqfITpfYH2UPv]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} 17 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[7:map[9:YCMcG12wiK] 9:map[1:dTwqfITpfYH2UPv]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[7:map[9:YCMcG12wiK] 9:map[1:dTwqfITpfYH2UPv]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} 17 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[7:map[9:YCMcG12wiK] 9:map[1:dTwqfITpfYH2UPv]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc000200a00 6:0xc000200a10 7:0xc000162200 8:0xc000162210 9:0xc000162220] when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 16 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 101} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:44 {Node 0}{Group 102} starts a GCTask to delete shards [7 9] from group 100 when config is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 16 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 101} discards outdated configuration {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:44 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 16 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 101} updates currentConfig from {Num:3,Shards:[102 101 101 101 101 102 102 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc000163950 1:0xc000163960 2:0xc000163970 3:0xc000163980 4:0xc000163990 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 101} starts a PullTask to get shards [8] from group 100 when config is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [7 9]}} 31 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 100}'s shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc000200a00 6:0xc000200a10 7:0xc000162200 8:0xc000162210 9:0xc000162220] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [7 9]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 100}'s shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc000200a00 6:0xc000200a10 7:0xc000280610 8:0xc000162210 9:0xc000280620] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [7 9]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {4 [7 9]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:44 {Node 0}{Group 100} processes GCTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [7 9]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:44 {Node 0}{Group 100} processes PullTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [8]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[8:map[0:mclhadAceb]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:44 {Node 2}{Group 101} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[8:map[0:mclhadAceb]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 4
2025/01/04 13:02:44 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [7 9]}} 31 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 100} discards outdated shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [7 9]} when currentConfig is {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]}
2025/01/04 13:02:44 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [7 9]}} 31 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 100}'s shards status are map[0:0xc000162620 1:0xc000162630 2:0xc000162640 3:0xc000162650 4:0xc000162660 5:0xc0003ad180 6:0xc0003ad190 7:0xc000162690 8:0xc0001626a0 9:0xc0001626b0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [7 9]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 1}{Group 100}'s shards status are map[0:0xc000162620 1:0xc000162630 2:0xc000162640 3:0xc000162650 4:0xc000162660 5:0xc0003ad180 6:0xc0003ad190 7:0xc000281c80 8:0xc0001626a0 9:0xc000281c90] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [7 9]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc000200a00 6:0xc000200a10 7:0xc000280610 8:0xc000162210 9:0xc000280620] when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[8:map[0:mclhadAceb]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} 17 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[8:map[0:mclhadAceb]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 101} Execute Command Command{commandType: InsertShards, Data: {OK 4 map[8:map[0:mclhadAceb]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:02:44 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0001e9510 1:0xc000163590 2:0xc0001635a0 3:0xc0001635b0 4:0xc0001635c0 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000163600 9:0xc000163610] when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[8:map[0:mclhadAceb]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} 17 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 101} discards outdated shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[8:map[0:mclhadAceb]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:44 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3  Get 223261431832303620 2}} 18 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 4 map[8:map[0:mclhadAceb]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} 17 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 4, Shards: map[8:map[0:mclhadAceb]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {3  Get 223261431832303620 2}} with CommandReply CommandReply{Err: OK, Value: 8cEpi}
2025/01/04 13:02:44 {Node 0}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc000163950 1:0xc000163960 2:0xc000163970 3:0xc000163980 4:0xc000163990 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 101} starts a GCTask to delete shards [8] from group 100 when config is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 102} starts a GCTask to delete shards [7 9] from group 100 when config is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3  Get 223261431832303620 2}} 18 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {3  Get 223261431832303620 2}} 18 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [7 9]}} 32 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 100}'s shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc000200a00 6:0xc000200a10 7:0xc000280610 8:0xc000162210 9:0xc000280620] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [7 9]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 100} encounters duplicated shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [7 9]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 100}'s shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc000200a00 6:0xc000200a10 7:0xc000280610 8:0xc000162210 9:0xc000280620] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [7 9]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {4 [7 9]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:44 {Node 0}{Group 100} processes GCTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [7 9]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:44 {Node 0}{Group 102} deletes shards [7 9] in remote group successfully when currentConfigNum is 4
2025/01/04 13:02:44 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [7 9]}} 32 1 false [] 0 0}
2025/01/04 13:02:44 {Node 1}{Group 100}'s shards status are map[0:0xc000162620 1:0xc000162630 2:0xc000162640 3:0xc000162650 4:0xc000162660 5:0xc0003ad180 6:0xc0003ad190 7:0xc000281c80 8:0xc0001626a0 9:0xc000281c90] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [7 9]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 1}{Group 100} encounters duplicated shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [7 9]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 1}{Group 100}'s shards status are map[0:0xc000162620 1:0xc000162630 2:0xc000162640 3:0xc000162650 4:0xc000162660 5:0xc0003ad180 6:0xc0003ad190 7:0xc000281c80 8:0xc0001626a0 9:0xc000281c90] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [7 9]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [7 9]}} 32 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 100} discards outdated shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [7 9]} when currentConfig is {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]}
2025/01/04 13:02:44 {Node 0}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc000200a00 6:0xc000200a10 7:0xc000280610 8:0xc000162210 9:0xc000280620] when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [8]}} 33 1 false [] 0 0}
2025/01/04 13:02:44 {Node 0}{Group 100}'s shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc000200a00 6:0xc000200a10 7:0xc000280610 8:0xc000162210 9:0xc000280620] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [8]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 100}'s shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc000200a00 6:0xc000200a10 7:0xc000280610 8:0xc000268050 9:0xc000280620] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [8]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 0}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {4 [8]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:44 {Node 0}{Group 100} processes GCTaskRequest ShardOperationArgs{ConfigNum: 4, ShardIDs: [8]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:44 {Node 2}{Group 101} deletes shards [8] in remote group successfully when currentConfigNum is 4
2025/01/04 13:02:44 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0001e9510 1:0xc000163590 2:0xc0001635a0 3:0xc0001635b0 4:0xc0001635c0 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000163600 9:0xc000163610] when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:44 {Node 2}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [8]}} 33 1 false [] 0 0}
2025/01/04 13:02:44 {Node 2}{Group 100} discards outdated shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [8]} when currentConfig is {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]}
2025/01/04 13:02:44 {Node 0}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc000163950 1:0xc000163960 2:0xc000163970 3:0xc000163980 4:0xc000163990 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [8]}} 19 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 101}'s shards status are map[0:0xc0001e9510 1:0xc000163590 2:0xc0001635a0 3:0xc0001635b0 4:0xc0001635c0 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000163600 9:0xc000163610] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [8]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 2}{Group 101}'s shards status are map[0:0xc0001e9510 1:0xc000163590 2:0xc0001635a0 3:0xc0001635b0 4:0xc0001635c0 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000163600 9:0xc000163610] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [8]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 2}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {4 [8]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:45 {Node 0}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [8]}} 19 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 101} discards outdated shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [8]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [7 9]}} 18 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102}'s shards status are map[0:0xc000163950 1:0xc000163960 2:0xc000163970 3:0xc000163980 4:0xc000163990 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [7 9]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 102}'s shards status are map[0:0xc000163950 1:0xc000163960 2:0xc000163970 3:0xc000163980 4:0xc000163990 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [7 9]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {4 [7 9]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:45 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [8]}} 33 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 100}'s shards status are map[0:0xc000162620 1:0xc000162630 2:0xc000162640 3:0xc000162650 4:0xc000162660 5:0xc0003ad180 6:0xc0003ad190 7:0xc000281c80 8:0xc0001626a0 9:0xc000281c90] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [8]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 1}{Group 100}'s shards status are map[0:0xc000162620 1:0xc000162630 2:0xc000162640 3:0xc000162650 4:0xc000162660 5:0xc0003ad180 6:0xc0003ad190 7:0xc000281c80 8:0xc0002fee80 9:0xc000281c90] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [8]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [7 9]}} 18 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 102}'s shards status are map[0:0xc0001b2190 1:0xc0001b21a0 2:0xc0001b21b0 3:0xc0001b21c0 4:0xc0001b21d0 5:0xc0001b21e0 6:0xc0001b21f0 7:0xc0001b2200 8:0xc0001b2210 9:0xc0001b2220] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [7 9]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 2}{Group 102}'s shards status are map[0:0xc0001b2190 1:0xc0001b21a0 2:0xc0001b21b0 3:0xc0001b21c0 4:0xc0001b21d0 5:0xc0001b21e0 6:0xc0001b21f0 7:0xc0001b2200 8:0xc0001b2210 9:0xc0001b2220] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [7 9]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [8]}} 19 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 101}'s shards status are map[0:0xc000163c70 1:0xc0001631c0 2:0xc0001631d0 3:0xc0001631e0 4:0xc0001631f0 5:0xc000163200 6:0xc000163210 7:0xc000163220 8:0xc000163230 9:0xc000163240] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [8]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 1}{Group 101}'s shards status are map[0:0xc000163c70 1:0xc0001631c0 2:0xc0001631d0 3:0xc0001631e0 4:0xc0001631f0 5:0xc000163200 6:0xc000163210 7:0xc000163220 8:0xc000163230 9:0xc000163240] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [8]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {4 [7 9]}} 18 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 102}'s shards status are map[0:0xc000163d20 1:0xc000163d30 2:0xc000163d40 3:0xc000163d50 4:0xc000163d60 5:0xc000163d70 6:0xc000163d80 7:0xc000163d90 8:0xc000163da0 9:0xc000163db0] before accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [7 9]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 1}{Group 102}'s shards status are map[0:0xc000163d20 1:0xc000163d30 2:0xc000163d40 3:0xc000163d50 4:0xc000163d60 5:0xc000163d70 6:0xc000163d80 7:0xc000163d90 8:0xc000163da0 9:0xc000163db0] after accepting shards deletion ShardOperationArgs{ConfigNum: 4, ShardIDs: [7 9]} when currentConfig is {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1  Get 1151465535048432377 9}} 19 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {1  Get 1151465535048432377 9}} with CommandReply CommandReply{Err: OK, Value: dTwqfITpfYH2UPv}
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1  Get 1151465535048432377 9}} 19 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1  Get 1151465535048432377 9}} 19 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 101} fetches latest configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 4
2025/01/04 13:02:45 {Node 0}{Group 100} fetches latest configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 4
2025/01/04 13:02:45 {Node 0}{Group 102} fetches latest configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 4
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 20 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} updates currentConfig from {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:45 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 34 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 100} updates currentConfig from {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:45 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 34 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 100} updates currentConfig from {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 20 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 102} updates currentConfig from {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 20 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 101} updates currentConfig from {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 2}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 20 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 102} updates currentConfig from {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 34 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 100} discards outdated configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfig is {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]}
2025/01/04 13:02:45 {Node 0}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 20 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 101} discards outdated configuration {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:45 {Node 0}{Group 102} starts a PullTask to get shards [2 3 4 8 1] from group 101 when config is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}} 20 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 101} updates currentConfig from {Num:4,Shards:[102 101 101 101 101 102 102 102 101 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc000163950 1:0xc000163960 2:0xc000163970 3:0xc000163980 4:0xc000163990 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 2}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 5, ShardIDs: [2 3 4 8 1]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:8cEpi] 2:map[4:z017X] 3:map[5:p4Qdywctwi9hRNc] 4:map[6:ApLzO] 8:map[0:mclhadAceb]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:45 {Node 0}{Group 102} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:8cEpi] 2:map[4:z017X] 3:map[5:p4Qdywctwi9hRNc] 4:map[6:ApLzO] 8:map[0:mclhadAceb]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 5
2025/01/04 13:02:45 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0001e9510 1:0xc000163590 2:0xc0001635a0 3:0xc0001635b0 4:0xc0001635c0 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000163600 9:0xc000163610] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 5 map[1:map[3:8cEpi] 2:map[4:z017X] 3:map[5:p4Qdywctwi9hRNc] 4:map[6:ApLzO] 8:map[0:mclhadAceb]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }}]}} 21 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:8cEpi] 2:map[4:z017X] 3:map[5:p4Qdywctwi9hRNc] 4:map[6:ApLzO] 8:map[0:mclhadAceb]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: InsertShards, Data: {OK 5 map[1:map[3:8cEpi] 2:map[4:z017X] 3:map[5:p4Qdywctwi9hRNc] 4:map[6:ApLzO] 8:map[0:mclhadAceb]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 5 map[1:map[3:8cEpi] 2:map[4:z017X] 3:map[5:p4Qdywctwi9hRNc] 4:map[6:ApLzO] 8:map[0:mclhadAceb]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }}]}} 21 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:8cEpi] 2:map[4:z017X] 3:map[5:p4Qdywctwi9hRNc] 4:map[6:ApLzO] 8:map[0:mclhadAceb]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: InsertShards, Data: {OK 5 map[1:map[3:8cEpi] 2:map[4:z017X] 3:map[5:p4Qdywctwi9hRNc] 4:map[6:ApLzO] 8:map[0:mclhadAceb]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }}]}} 21 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 102} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 5, Shards: map[1:map[3:8cEpi] 2:map[4:z017X] 3:map[5:p4Qdywctwi9hRNc] 4:map[6:ApLzO] 8:map[0:mclhadAceb]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 102} starts a GCTask to delete shards [2 1 3 4 8] from group 101 when config is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6  Get 2744177573667576175 5}} 22 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {6  Get 2744177573667576175 5}} with CommandReply CommandReply{Err: OK, Value: ApLzO}
2025/01/04 13:02:45 {Node 0}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc000163950 1:0xc000163960 2:0xc000163970 3:0xc000163980 4:0xc000163990 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6  Get 2744177573667576175 5}} 22 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0001e9510 1:0xc000163590 2:0xc0001635a0 3:0xc0001635b0 4:0xc0001635c0 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000163600 9:0xc000163610] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6  Get 4007492428103843265 0}} 23 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6  Get 2744177573667576175 6}} 24 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {6  Get 2744177573667576175 6}} with CommandReply CommandReply{Err: OK, Value: ApLzO}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {6  Get 4007492428103843265 0}} with CommandReply CommandReply{Err: OK, Value: ApLzO}
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 113 255 138 1 8 1 10 255 204 255 202 255 202 255 202 255 202 255 204 255 204 255 204 255 202 255 204 1 2 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 0 71 255 138 1 10 1 10 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 1 1 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 15 255 161 4 1 2 255 162 0 1 4 1 255 158 0 0 31 255 157 3 1 2 255 158 0 1 2 1 2 75 86 1 255 160 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 159 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 160 0 1 12 1 12 0 0 255 189 255 162 0 10 0 1 1 1 50 15 106 118 117 117 50 49 102 86 104 45 84 45 84 90 65 0 4 1 1 1 52 5 122 48 49 55 88 1 3 0 10 1 1 1 55 10 76 65 86 83 78 45 100 75 107 70 0 14 1 1 1 57 10 89 67 77 99 71 49 50 119 105 75 0 2 1 1 1 51 5 56 99 69 112 105 1 3 0 6 1 1 1 53 15 112 52 81 100 121 119 99 116 119 105 57 104 82 78 99 1 3 0 8 1 1 1 54 5 65 112 76 122 79 1 3 0 12 1 1 1 56 15 82 90 118 52 49 102 78 108 85 99 85 115 49 107 100 0 16 1 1 1 48 10 109 99 108 104 97 100 65 99 101 98 1 3 0 18 1 1 1 49 15 100 84 119 113 102 73 84 112 102 89 72 50 85 80 118 0 15 255 167 4 1 2 255 168 0 1 4 1 255 164 0 0 51 255 163 3 1 2 255 164 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 166 0 0 0 44 255 165 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 166 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 255 144 255 168 0 8 248 31 245 167 155 87 85 117 242 1 14 1 1 2 79 75 0 0 248 79 105 42 223 187 53 238 154 1 18 1 1 2 79 75 0 0 248 6 50 94 45 192 209 176 8 2 1 2 79 75 0 0 248 98 135 227 211 220 47 147 60 1 4 1 1 2 79 75 0 0 248 40 211 119 88 168 255 95 62 1 2 1 1 2 79 75 0 0 248 33 136 168 10 215 131 231 216 2 1 2 79 75 0 0 248 26 200 223 46 186 195 218 194 1 4 1 1 2 79 75 0 0 248 76 42 141 237 142 25 50 222 1 8 1 1 2 79 75 0 0] 1 22}
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6  Get 4007492428103843265 0}} 23 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6  Get 2744177573667576175 6}} 24 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 100} fetches latest configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 5
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6  Get 4007492428103843265 0}} 23 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {6  Get 2744177573667576175 6}} 24 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [2 1 3 4 8]}} 21 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 101}'s shards status are map[0:0xc0001e9510 1:0xc000163590 2:0xc0001635a0 3:0xc0001635b0 4:0xc0001635c0 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000163600 9:0xc000163610] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [2 1 3 4 8]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 2}{Group 101}'s shards status are map[0:0xc0001e9510 1:0xc000436200 2:0xc0004361f0 3:0xc000436210 4:0xc000436220 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000436270 9:0xc000163610] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [2 1 3 4 8]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 2}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {5 [2 1 3 4 8]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:45 {Node 2}{Group 101} processes GCTaskRequest ShardOperationArgs{ConfigNum: 5, ShardIDs: [2 1 3 4 8]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:45 {Node 0}{Group 102} deletes shards [2 1 3 4 8] in remote group successfully when currentConfigNum is 5
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 965018916061572449 3}} 25 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 FQh2T Append 2744177573667576175 7}} 26 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {9 FQh2T Append 2744177573667576175 7}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {0  Get 965018916061572449 3}} with CommandReply CommandReply{Err: OK, Value: mclhadAceb}
2025/01/04 13:02:45 {Node 0}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc000163950 1:0xc000163960 2:0xc000163970 3:0xc000163980 4:0xc000163990 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 35 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 100} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:45 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 35 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 100} discards outdated configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfig is {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]}
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 965018916061572449 3}} 25 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 FQh2T Append 2744177573667576175 7}} 26 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4 0iu9Q Append 223261431832303620 3}} 27 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4 cb4Xr Append 4254050673674675953 1}} 28 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {4 cb4Xr Append 4254050673674675953 1}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {4 0iu9Q Append 223261431832303620 3}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [2 1 3 4 8]}} 29 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102}'s shards status are map[0:0xc000163950 1:0xc000163960 2:0xc000163970 3:0xc000163980 4:0xc000163990 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [2 1 3 4 8]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [2 1 3 4 8]}} 21 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 101}'s shards status are map[0:0xc000163c70 1:0xc0001631c0 2:0xc0001631d0 3:0xc0001631e0 4:0xc0001631f0 5:0xc000163200 6:0xc000163210 7:0xc000163220 8:0xc000163230 9:0xc000163240] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [2 1 3 4 8]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 1}{Group 101}'s shards status are map[0:0xc000163c70 1:0xc000436ab0 2:0xc000436aa0 3:0xc000436ac0 4:0xc000436ad0 5:0xc000163200 6:0xc000163210 7:0xc000163220 8:0xc000436ae0 9:0xc000163240] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [2 1 3 4 8]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 102}'s shards status are map[0:0xc000163950 1:0xc000163960 2:0xc000163970 3:0xc000163980 4:0xc000163990 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [2 1 3 4 8]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 4007492428103843265 1}} 30 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {7  Get 4007492428103843265 1}} with CommandReply CommandReply{Err: OK, Value: LAVSN-dKkF}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {5 [2 1 3 4 8]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 965018916061572449 3}} 25 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 35 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 100} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 FQh2T Append 2744177573667576175 7}} 26 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4 0iu9Q Append 223261431832303620 3}} 27 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4 cb4Xr Append 4254050673674675953 1}} 28 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [2 1 3 4 8]}} 29 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 102}'s shards status are map[0:0xc000163d20 1:0xc000163d30 2:0xc000163d40 3:0xc000163d50 4:0xc000163d60 5:0xc000163d70 6:0xc000163d80 7:0xc000163d90 8:0xc000163da0 9:0xc000163db0] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [2 1 3 4 8]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 1}{Group 102}'s shards status are map[0:0xc000163d20 1:0xc000163d30 2:0xc000163d40 3:0xc000163d50 4:0xc000163d60 5:0xc000163d70 6:0xc000163d80 7:0xc000163d90 8:0xc000163da0 9:0xc000163db0] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [2 1 3 4 8]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 4007492428103843265 1}} 30 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 2744177573667576175 8}} 31 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {7  Get 2744177573667576175 8}} with CommandReply CommandReply{Err: OK, Value: LAVSN-dKkF}
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 2744177573667576175 8}} 31 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 4007492428103843265 2}} 32 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3  Get 965018916061572449 4}} 33 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {3  Get 965018916061572449 4}} with CommandReply CommandReply{Err: OK, Value: 8cEpi}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {0  Get 4007492428103843265 2}} with CommandReply CommandReply{Err: OK, Value: mclhadAceb}
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 223261431832303620 4}} 34 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {9  Get 223261431832303620 4}} with CommandReply CommandReply{Err: OK, Value: YCMcG12wiKFQh2T}
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4 0iu9Q Append 223261431832303620 3}} 27 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4 cb4Xr Append 4254050673674675953 1}} 28 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [2 1 3 4 8]}} 29 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 102}'s shards status are map[0:0xc0001b2190 1:0xc0001b21a0 2:0xc0001b21b0 3:0xc0001b21c0 4:0xc0001b21d0 5:0xc0001b21e0 6:0xc0001b21f0 7:0xc0001b2200 8:0xc0001b2210 9:0xc0001b2220] before accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [2 1 3 4 8]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 2}{Group 102}'s shards status are map[0:0xc0001b2190 1:0xc0001b21a0 2:0xc0001b21b0 3:0xc0001b21c0 4:0xc0001b21d0 5:0xc0001b21e0 6:0xc0001b21f0 7:0xc0001b2200 8:0xc0001b2210 9:0xc0001b2220] after accepting shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [2 1 3 4 8]} when currentConfig is {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 4007492428103843265 1}} 30 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 2744177573667576175 8}} 31 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {5 [2 1 3 4 8]}} 21 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 101} discards outdated shards deletion ShardOperationArgs{ConfigNum: 5, ShardIDs: [2 1 3 4 8]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 4007492428103843265 2}} 32 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {3  Get 965018916061572449 4}} 33 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 2744177573667576175 9}} 35 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {8  Get 2744177573667576175 9}} with CommandReply CommandReply{Err: OK, Value: RZv41fNlUcUs1kd}
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 223261431832303620 4}} 34 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8  Get 2744177573667576175 9}} 35 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 Oma6T Append 4007492428103843265 3}} 36 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {7 Oma6T Append 4007492428103843265 3}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4  Get 965018916061572449 5}} 37 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4  Get 223261431832303620 5}} 38 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {4  Get 223261431832303620 5}} with CommandReply CommandReply{Err: OK, Value: z017X0iu9Qcb4Xr}
2025/01/04 13:02:45 {Node 2}{Group 101} fetches latest configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 5
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {4  Get 965018916061572449 5}} with CommandReply CommandReply{Err: OK, Value: z017X0iu9Qcb4Xr}
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 PShAI Append 2744177573667576175 10}} 39 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 113 255 138 1 8 1 10 255 204 255 202 255 202 255 202 255 202 255 204 255 204 255 204 255 202 255 204 1 2 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 0 71 255 138 1 10 1 10 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 1 1 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 15 255 161 4 1 2 255 162 0 1 4 1 255 158 0 0 31 255 157 3 1 2 255 158 0 1 2 1 2 75 86 1 255 160 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 159 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 160 0 1 12 1 12 0 0 255 194 255 162 0 10 0 1 1 1 50 15 106 118 117 117 50 49 102 86 104 45 84 45 84 90 65 0 4 1 1 1 52 15 122 48 49 55 88 48 105 117 57 81 99 98 52 88 114 0 10 1 1 1 55 10 76 65 86 83 78 45 100 75 107 70 0 14 1 1 1 57 15 89 67 77 99 71 49 50 119 105 75 70 81 104 50 84 0 16 1 1 1 48 10 109 99 108 104 97 100 65 99 101 98 0 18 1 1 1 49 15 100 84 119 113 102 73 84 112 102 89 72 50 85 80 118 0 2 1 1 1 51 5 56 99 69 112 105 0 6 1 1 1 53 15 112 52 81 100 121 119 99 116 119 105 57 104 82 78 99 0 8 1 1 1 54 5 65 112 76 122 79 0 12 1 1 1 56 15 82 90 118 52 49 102 78 108 85 99 85 115 49 107 100 0 15 255 167 4 1 2 255 168 0 1 4 1 255 164 0 0 51 255 163 3 1 2 255 164 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 166 0 0 0 44 255 165 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 166 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 255 164 255 168 0 9 248 31 245 167 155 87 85 117 242 1 14 1 1 2 79 75 0 0 248 79 105 42 223 187 53 238 154 1 18 1 1 2 79 75 0 0 248 6 50 94 45 192 209 176 8 1 6 1 1 2 79 75 0 0 248 98 135 227 211 220 47 147 60 1 4 1 1 2 79 75 0 0 248 118 18 217 24 249 199 205 226 1 2 1 1 2 79 75 0 0 248 76 42 141 237 142 25 50 222 1 14 1 1 2 79 75 0 0 248 40 211 119 88 168 255 95 62 1 2 1 1 2 79 75 0 0 248 33 136 168 10 215 131 231 216 2 1 2 79 75 0 0 248 26 200 223 46 186 195 218 194 1 4 1 1 2 79 75 0 0] 1 35}
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7 Oma6T Append 4007492428103843265 3}} 36 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {9 PShAI Append 2744177573667576175 10}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4  Get 965018916061572449 5}} 37 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {4  Get 223261431832303620 5}} 38 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 22 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 101} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 2}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9 PShAI Append 2744177573667576175 10}} 39 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 100} fetches latest configuration {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 6
2025/01/04 13:02:45 {Node 0}{Group 102} fetches latest configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 5
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 wN-GG Put 2744177573667576175 11}} 40 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {8 wN-GG Put 2744177573667576175 11}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:45 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 22 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 101} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 E2fIn Append 965018916061572449 6}} 41 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 8oA-0 Append 4007492428103843265 4}} 42 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {2 8oA-0 Append 4007492428103843265 4}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {0 E2fIn Append 965018916061572449 6}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 43 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 113 255 138 1 8 1 10 255 204 255 202 255 202 255 202 255 202 255 204 255 204 255 204 255 202 255 204 1 2 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 71 255 138 1 10 1 10 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 255 204 1 1 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 15 255 161 4 1 2 255 162 0 1 4 1 255 158 0 0 31 255 157 3 1 2 255 158 0 1 2 1 2 75 86 1 255 160 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 159 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 160 0 1 12 1 12 0 0 255 204 255 162 0 10 2 1 1 1 51 5 56 99 69 112 105 0 6 1 1 1 53 15 112 52 81 100 121 119 99 116 119 105 57 104 82 78 99 0 8 1 1 1 54 5 65 112 76 122 79 0 12 1 1 1 56 15 82 90 118 52 49 102 78 108 85 99 85 115 49 107 100 0 16 1 1 1 48 10 109 99 108 104 97 100 65 99 101 98 0 18 1 1 1 49 15 100 84 119 113 102 73 84 112 102 89 72 50 85 80 118 0 0 1 1 1 50 15 106 118 117 117 50 49 102 86 104 45 84 45 84 90 65 0 4 1 1 1 52 15 122 48 49 55 88 48 105 117 57 81 99 98 52 88 114 0 10 1 1 1 55 15 76 65 86 83 78 45 100 75 107 70 79 109 97 54 84 0 14 1 1 1 57 20 89 67 77 99 71 49 50 119 105 75 70 81 104 50 84 80 83 104 65 73 0 15 255 167 4 1 2 255 168 0 1 4 1 255 164 0 0 51 255 163 3 1 2 255 164 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 166 0 0 0 44 255 165 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 166 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 255 182 255 168 0 10 248 6 50 94 45 192 209 176 8 1 6 1 1 2 79 75 0 0 248 98 135 227 211 220 47 147 60 1 4 1 1 2 79 75 0 0 248 31 245 167 155 87 85 117 242 1 14 1 1 2 79 75 0 0 248 79 105 42 223 187 53 238 154 1 18 1 1 2 79 75 0 0 248 33 136 168 10 215 131 231 216 2 1 2 79 75 0 0 248 26 200 223 46 186 195 218 194 1 4 1 1 2 79 75 0 0 248 118 18 217 24 249 199 205 226 1 2 1 1 2 79 75 0 0 248 111 58 242 66 242 100 251 130 1 6 1 1 2 79 75 0 0 248 76 42 141 237 142 25 50 222 1 20 1 1 2 79 75 0 0 248 40 211 119 88 168 255 95 62 1 2 1 1 2 79 75 0 0] 1 39}
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 wN-GG Put 2744177573667576175 11}} 40 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {8 wN-GG Put 2744177573667576175 11}} 40 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 22 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 101} discards outdated configuration {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:45 {Node 2}{Group 101} starts a PullTask to get shards [4 0 1 2 3] from group 102 when config is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 E2fIn Append 965018916061572449 6}} 41 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 36 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 100} updates currentConfig from {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 100} Execute Command Command{commandType: Configuration, Data: {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 8oA-0 Append 4007492428103843265 4}} 42 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 43 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 102} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 E2fIn Append 965018916061572449 6}} 41 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {2 8oA-0 Append 4007492428103843265 4}} 42 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 43 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 102} updates currentConfig from {Num:5,Shards:[102 102 102 102 102 102 102 102 102 102],Groups:map[102:[server-102-0 server-102-1 server-102-2]]} to {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 102} processes PullTaskRequest ShardOperationArgs{ConfigNum: 6, ShardIDs: [4 0 1 2 3]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:jvuu21fVh-T-TZA8oA-0] 1:map[3:8cEpi] 2:map[4:z017X0iu9Qcb4Xr] 3:map[5:p4Qdywctwi9hRNc] 4:map[6:ApLzO]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 6, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:45 {Node 2}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 36 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 100} discards outdated configuration {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfig is {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]}
2025/01/04 13:02:45 {Node 0}{Group 100} starts a PullTask to get shards [0 1] from group 101 when config is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 100} starts a PullTask to get shards [5] from group 102 when config is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 1}{Group 100} tries to apply message {true Command{commandType: Configuration, Data: {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 36 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 100} updates currentConfig from {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 102} processes PullTaskRequest ShardOperationArgs{ConfigNum: 7, ShardIDs: [5]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:45 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0001e9510 1:0xc000436200 2:0xc0004361f0 3:0xc000436210 4:0xc000436220 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000436270 9:0xc000163610] when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 2744177573667576175 12}} 44 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {7  Get 2744177573667576175 12}} with CommandReply CommandReply{Err: OK, Value: LAVSN-dKkFOma6T}
2025/01/04 13:02:45 {Node 2}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 7, ShardIDs: [0 1]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 2744177573667576175 12}} 44 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc000163950 1:0xc000163960 2:0xc000163970 3:0xc000163980 4:0xc000163990 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc000200a00 6:0xc000200a10 7:0xc000280610 8:0xc000268050 9:0xc000280620] when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 2}{Group 101} starts a PullTask to get shards [4 1 2 3 0] from group 102 when config is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 100} starts a PullTask to get shards [0 1] from group 101 when config is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 100} starts a PullTask to get shards [5] from group 102 when config is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {7  Get 2744177573667576175 12}} 44 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 2744177573667576175 13}} 45 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {0  Get 2744177573667576175 13}} with CommandReply CommandReply{Err: OK, Value: mclhadAcebE2fIn}
2025/01/04 13:02:45 {Node 0}{Group 102} processes PullTaskRequest ShardOperationArgs{ConfigNum: 6, ShardIDs: [4 1 2 3 0]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:jvuu21fVh-T-TZA8oA-0] 1:map[3:8cEpi] 2:map[4:z017X0iu9Qcb4Xr] 3:map[5:p4Qdywctwi9hRNc] 4:map[6:ApLzO]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 6, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:45 {Node 2}{Group 101} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:jvuu21fVh-T-TZA8oA-0] 1:map[3:8cEpi] 2:map[4:z017X0iu9Qcb4Xr] 3:map[5:p4Qdywctwi9hRNc] 4:map[6:ApLzO]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 6, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 6
2025/01/04 13:02:45 {Node 0}{Group 102} processes PullTaskRequest ShardOperationArgs{ConfigNum: 7, ShardIDs: [5]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 2744177573667576175 13}} 45 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 2744177573667576175 13}} 45 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0001e9510 1:0xc000436200 2:0xc0004361f0 3:0xc000436210 4:0xc000436220 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000436270 9:0xc000163610] when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 2}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 7, ShardIDs: [0 1]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:45 {Node 2}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 6 map[0:map[2:jvuu21fVh-T-TZA8oA-0] 1:map[3:8cEpi] 2:map[4:z017X0iu9Qcb4Xr] 3:map[5:p4Qdywctwi9hRNc] 4:map[6:ApLzO]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 6, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} 23 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:jvuu21fVh-T-TZA8oA-0] 1:map[3:8cEpi] 2:map[4:z017X0iu9Qcb4Xr] 3:map[5:p4Qdywctwi9hRNc] 4:map[6:ApLzO]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 6, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 2}{Group 101} Execute Command Command{commandType: InsertShards, Data: {OK 6 map[0:map[2:jvuu21fVh-T-TZA8oA-0] 1:map[3:8cEpi] 2:map[4:z017X0iu9Qcb4Xr] 3:map[5:p4Qdywctwi9hRNc] 4:map[6:ApLzO]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 6, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:02:45 {Node 1}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 6 map[0:map[2:jvuu21fVh-T-TZA8oA-0] 1:map[3:8cEpi] 2:map[4:z017X0iu9Qcb4Xr] 3:map[5:p4Qdywctwi9hRNc] 4:map[6:ApLzO]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 6, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} 23 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 101} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:jvuu21fVh-T-TZA8oA-0] 1:map[3:8cEpi] 2:map[4:z017X0iu9Qcb4Xr] 3:map[5:p4Qdywctwi9hRNc] 4:map[6:ApLzO]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 6, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc000163950 1:0xc000163960 2:0xc000163970 3:0xc000163980 4:0xc000163990 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 2}{Group 101} starts a GCTask to delete shards [4 0 1 2 3] from group 102 when config is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 101} tries to apply message {true Command{commandType: InsertShards, Data: {OK 6 map[0:map[2:jvuu21fVh-T-TZA8oA-0] 1:map[3:8cEpi] 2:map[4:z017X0iu9Qcb4Xr] 3:map[5:p4Qdywctwi9hRNc] 4:map[6:ApLzO]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 6, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} 23 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 101} discards outdated shards insertion ShardOperationReply{Err: OK, ConfigNum: 6, Shards: map[0:map[2:jvuu21fVh-T-TZA8oA-0] 1:map[3:8cEpi] 2:map[4:z017X0iu9Qcb4Xr] 3:map[5:p4Qdywctwi9hRNc] 4:map[6:ApLzO]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 6, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 2, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:45 {Node 0}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc000200a00 6:0xc000200a10 7:0xc000280610 8:0xc000268050 9:0xc000280620] when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 100} starts a PullTask to get shards [5] from group 102 when config is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 100} starts a PullTask to get shards [0 1] from group 101 when config is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 OxLAv Append 965018916061572449 7}} 24 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {6 OxLAv Append 965018916061572449 7}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:45 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0001e9510 1:0xc000436200 2:0xc0004361f0 3:0xc000436210 4:0xc000436220 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000436270 9:0xc000163610] when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 102} processes PullTaskRequest ShardOperationArgs{ConfigNum: 7, ShardIDs: [5]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:45 {Node 0}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [4 0 1 2 3]}} 46 1 false [] 0 0}
2025/01/04 13:02:45 {Node 0}{Group 102}'s shards status are map[0:0xc000163950 1:0xc000163960 2:0xc000163970 3:0xc000163980 4:0xc000163990 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [4 0 1 2 3]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 102}'s shards status are map[0:0xc0004de700 1:0xc0004de710 2:0xc0004de720 3:0xc0004de730 4:0xc0004de6f0 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [4 0 1 2 3]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {6 [4 0 1 2 3]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:45 {Node 0}{Group 102} processes GCTaskRequest ShardOperationArgs{ConfigNum: 6, ShardIDs: [4 0 1 2 3]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:45 {Node 2}{Group 101} deletes shards [4 0 1 2 3] in remote group successfully when currentConfigNum is 6
2025/01/04 13:02:45 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 OxLAv Append 965018916061572449 7}} 24 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [4 0 1 2 3]}} 46 1 false [] 0 0}
2025/01/04 13:02:45 {Node 2}{Group 102}'s shards status are map[0:0xc0001b2190 1:0xc0001b21a0 2:0xc0001b21b0 3:0xc0001b21c0 4:0xc0001b21d0 5:0xc0001b21e0 6:0xc0001b21f0 7:0xc0001b2200 8:0xc0001b2210 9:0xc0001b2220] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [4 0 1 2 3]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 2}{Group 102}'s shards status are map[0:0xc0002fe850 1:0xc0002fe860 2:0xc0002fe870 3:0xc0002fe880 4:0xc0002fe840 5:0xc0001b21e0 6:0xc0001b21f0 7:0xc0001b2200 8:0xc0001b2210 9:0xc0001b2220] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [4 0 1 2 3]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 OxLAv Append 965018916061572449 7}} 24 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [4 0 1 2 3]}} 46 1 false [] 0 0}
2025/01/04 13:02:45 {Node 1}{Group 102}'s shards status are map[0:0xc000163d20 1:0xc000163d30 2:0xc000163d40 3:0xc000163d50 4:0xc000163d60 5:0xc000163d70 6:0xc000163d80 7:0xc000163d90 8:0xc000163da0 9:0xc000163db0] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [4 0 1 2 3]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:45 {Node 1}{Group 102}'s shards status are map[0:0xc000200450 1:0xc0002004a0 2:0xc0002004b0 3:0xc0002004c0 4:0xc000200440 5:0xc000163d70 6:0xc000163d80 7:0xc000163d90 8:0xc000163da0 9:0xc000163db0] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [4 0 1 2 3]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc000200a00 6:0xc000200a10 7:0xc000280610 8:0xc000268050 9:0xc000280620] when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [4 0 1 2 3]}} 25 1 false [] 0 0}
2025/01/04 13:02:46 {Node 2}{Group 101}'s shards status are map[0:0xc0001e9510 1:0xc000436200 2:0xc0004361f0 3:0xc000436210 4:0xc000436220 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000436270 9:0xc000163610] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [4 0 1 2 3]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 2}{Group 101}'s shards status are map[0:0xc0001e9510 1:0xc000436200 2:0xc0004361f0 3:0xc000436210 4:0xc000436220 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000436270 9:0xc000163610] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [4 0 1 2 3]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4 WS4a_ Append 3549946918322293150 3}} 26 1 false [] 0 0}
2025/01/04 13:02:46 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {4 WS4a_ Append 3549946918322293150 3}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:46 {Node 0}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [4 0 1 2 3]}} 25 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 101} discards outdated shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [4 0 1 2 3]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:46 {Node 2}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {6 [4 0 1 2 3]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:46 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4 WS4a_ Append 3549946918322293150 3}} 26 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 102} fetches latest configuration {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 6
2025/01/04 13:02:46 {Node 0}{Group 100} starts a PullTask to get shards [1 0] from group 101 when config is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 100} starts a PullTask to get shards [5] from group 102 when config is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 47 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 102} updates currentConfig from {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 102} Execute Command Command{commandType: Configuration, Data: {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:46 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {6 [4 0 1 2 3]}} 25 1 false [] 0 0}
2025/01/04 13:02:46 {Node 1}{Group 101}'s shards status are map[0:0xc000163c70 1:0xc000436ab0 2:0xc000436aa0 3:0xc000436ac0 4:0xc000436ad0 5:0xc000163200 6:0xc000163210 7:0xc000163220 8:0xc000436ae0 9:0xc000163240] before accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [4 0 1 2 3]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 1}{Group 101}'s shards status are map[0:0xc000163c70 1:0xc000436ab0 2:0xc000436aa0 3:0xc000436ac0 4:0xc000436ad0 5:0xc000163200 6:0xc000163210 7:0xc000163220 8:0xc000436ae0 9:0xc000163240] after accepting shards deletion ShardOperationArgs{ConfigNum: 6, ShardIDs: [4 0 1 2 3]} when currentConfig is {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4 WS4a_ Append 3549946918322293150 3}} 26 1 false [] 0 0}
2025/01/04 13:02:46 {Node 1}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 47 1 false [] 0 0}
2025/01/04 13:02:46 {Node 1}{Group 102} updates currentConfig from {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 2}{Group 102} tries to apply message {true Command{commandType: Configuration, Data: {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 47 1 false [] 0 0}
2025/01/04 13:02:46 {Node 2}{Group 102} updates currentConfig from {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1 pp2al Append 3549946918322293150 4}} 48 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {1 pp2al Append 3549946918322293150 4}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:46 {Node 2}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 7, ShardIDs: [1 0]} with PullTaskReply ShardOperationReply{Err: ErrNotReady, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:46 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1 pp2al Append 3549946918322293150 4}} 48 1 false [] 0 0}
2025/01/04 13:02:46 {Node 2}{Group 101} fetches latest configuration {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfigNum is 6
2025/01/04 13:02:46 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1 pp2al Append 3549946918322293150 4}} 48 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc000200a00 6:0xc000200a10 7:0xc000280610 8:0xc000268050 9:0xc000280620] when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 2}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 27 1 false [] 0 0}
2025/01/04 13:02:46 {Node 2}{Group 101} updates currentConfig from {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 2}{Group 101} Execute Command Command{commandType: Configuration, Data: {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:46 {Node 0}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc0004de700 1:0xc0004de710 2:0xc0004de720 3:0xc0004de730 4:0xc0004de6f0 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 100} starts a PullTask to get shards [5] from group 102 when config is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 100} starts a PullTask to get shards [0 1] from group 101 when config is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 27 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 101} discards outdated configuration {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:46 {Node 1}{Group 101} tries to apply message {true Command{commandType: Configuration, Data: {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}} 27 1 false [] 0 0}
2025/01/04 13:02:46 {Node 1}{Group 101} updates currentConfig from {Num:6,Shards:[101 101 101 101 101 102 102 102 102 102],Groups:map[101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]} to {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 2}{Group 101} processes PullTaskRequest ShardOperationArgs{ConfigNum: 7, ShardIDs: [0 1]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 7, Shards: map[0:map[2:jvuu21fVh-T-TZA8oA-0] 1:map[3:8cEpi]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:46 {Node 0}{Group 100} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 7, Shards: map[0:map[2:jvuu21fVh-T-TZA8oA-0] 1:map[3:8cEpi]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 7
2025/01/04 13:02:46 {Node 0}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc000200a00 6:0xc000200a10 7:0xc000280610 8:0xc000268050 9:0xc000280620] when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0001e9510 1:0xc000436200 2:0xc0004361f0 3:0xc000436210 4:0xc000436220 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000436270 9:0xc000163610] when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc0004de700 1:0xc0004de710 2:0xc0004de720 3:0xc0004de730 4:0xc0004de6f0 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 100} tries to apply message {true Command{commandType: InsertShards, Data: {OK 7 map[0:map[2:jvuu21fVh-T-TZA8oA-0] 1:map[3:8cEpi]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} 37 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 7, Shards: map[0:map[2:jvuu21fVh-T-TZA8oA-0] 1:map[3:8cEpi]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 100} Execute Command Command{commandType: InsertShards, Data: {OK 7 map[0:map[2:jvuu21fVh-T-TZA8oA-0] 1:map[3:8cEpi]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:02:46 {Node 1}{Group 100} tries to apply message {true Command{commandType: InsertShards, Data: {OK 7 map[0:map[2:jvuu21fVh-T-TZA8oA-0] 1:map[3:8cEpi]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} 37 1 false [] 0 0}
2025/01/04 13:02:46 {Node 2}{Group 100} tries to apply message {true Command{commandType: InsertShards, Data: {OK 7 map[0:map[2:jvuu21fVh-T-TZA8oA-0] 1:map[3:8cEpi]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} 37 1 false [] 0 0}
2025/01/04 13:02:46 {Node 2}{Group 100} discards outdated shards insertion ShardOperationReply{Err: OK, ConfigNum: 7, Shards: map[0:map[2:jvuu21fVh-T-TZA8oA-0] 1:map[3:8cEpi]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]}
2025/01/04 13:02:46 {Node 1}{Group 100} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 7, Shards: map[0:map[2:jvuu21fVh-T-TZA8oA-0] 1:map[3:8cEpi]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 100} starts a GCTask to delete shards [0 1] from group 101 when config is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 100} starts a PullTask to get shards [5] from group 102 when config is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 102} processes PullTaskRequest ShardOperationArgs{ConfigNum: 7, ShardIDs: [5]} with PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 7, Shards: map[5:map[7:LAVSN-dKkFOma6T]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 6, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}
2025/01/04 13:02:46 {Node 0}{Group 100} gets a PullTaskReply ShardOperationReply{Err: OK, ConfigNum: 7, Shards: map[5:map[7:LAVSN-dKkFOma6T]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 6, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} and tries to commit it when currentConfigNum is 7
2025/01/04 13:02:46 {Node 0}{Group 100} tries to apply message {true Command{commandType: InsertShards, Data: {OK 7 map[5:map[7:LAVSN-dKkFOma6T]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 6, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} 38 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 7, Shards: map[5:map[7:LAVSN-dKkFOma6T]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 6, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 100} Execute Command Command{commandType: InsertShards, Data: {OK 7 map[5:map[7:LAVSN-dKkFOma6T]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 6, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} with CommandReply CommandReply{Err: , Value: }
2025/01/04 13:02:46 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 1151465535048432377 10}} 28 1 false [] 0 0}
2025/01/04 13:02:46 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {6  Get 1151465535048432377 10}} with CommandReply CommandReply{Err: OK, Value: ApLzOOxLAv}
2025/01/04 13:02:46 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 1151465535048432377 10}} 28 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc000200a00 6:0xc000200a10 7:0xc000280610 8:0xc000268050 9:0xc000280620] when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 2}{Group 100} tries to apply message {true Command{commandType: InsertShards, Data: {OK 7 map[5:map[7:LAVSN-dKkFOma6T]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 6, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} 38 1 false [] 0 0}
2025/01/04 13:02:46 {Node 2}{Group 100} discards outdated shards insertion ShardOperationReply{Err: OK, ConfigNum: 7, Shards: map[5:map[7:LAVSN-dKkFOma6T]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 6, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:0,Shards:[0 0 0 0 0 0 0 0 0 0],Groups:map[]}
2025/01/04 13:02:46 {Node 1}{Group 100} tries to apply message {true Command{commandType: InsertShards, Data: {OK 7 map[5:map[7:LAVSN-dKkFOma6T]] map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 6, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]}} 38 1 false [] 0 0}
2025/01/04 13:02:46 {Node 1}{Group 100} accepts shards insertion ShardOperationReply{Err: OK, ConfigNum: 7, Shards: map[5:map[7:LAVSN-dKkFOma6T]], LastOperations: map[223261431832303620:OperationContext{MaxAppliedCommandId: 3, LastReply: CommandReply{Err: OK, Value: }} 965018916061572449:OperationContext{MaxAppliedCommandId: 6, LastReply: CommandReply{Err: OK, Value: }} 1151465535048432377:OperationContext{MaxAppliedCommandId: 7, LastReply: CommandReply{Err: OK, Value: }} 1208182982301578220:OperationContext{MaxAppliedCommandId: 0, LastReply: CommandReply{Err: OK, Value: }} 1470913102139600799:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }} 2744177573667576175:OperationContext{MaxAppliedCommandId: 11, LastReply: CommandReply{Err: OK, Value: }} 2861075970978936653:OperationContext{MaxAppliedCommandId: 9, LastReply: CommandReply{Err: OK, Value: }} 3549946918322293150:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4007492428103843265:OperationContext{MaxAppliedCommandId: 4, LastReply: CommandReply{Err: OK, Value: }} 4254050673674675953:OperationContext{MaxAppliedCommandId: 1, LastReply: CommandReply{Err: OK, Value: }}]} when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 1151465535048432377 10}} 28 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc0004de700 1:0xc0004de710 2:0xc0004de720 3:0xc0004de730 4:0xc0004de6f0 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 2}{Group 101} will not try to fetch latest configuration because shards status are map[0:0xc0001e9510 1:0xc000436200 2:0xc0004361f0 3:0xc000436210 4:0xc000436220 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000436270 9:0xc000163610] when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 ZKb8z Append 3651484034481482531 1}} 39 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {3 ZKb8z Append 3651484034481482531 1}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:46 {Node 2}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {7 [0 1]}} 29 1 false [] 0 0}
2025/01/04 13:02:46 {Node 2}{Group 101}'s shards status are map[0:0xc0001e9510 1:0xc000436200 2:0xc0004361f0 3:0xc000436210 4:0xc000436220 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000436270 9:0xc000163610] before accepting shards deletion ShardOperationArgs{ConfigNum: 7, ShardIDs: [0 1]} when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 2}{Group 101}'s shards status are map[0:0xc0001b37d0 1:0xc0001b37e0 2:0xc0004361f0 3:0xc000436210 4:0xc000436220 5:0xc0001635d0 6:0xc0001635e0 7:0xc0001635f0 8:0xc000436270 9:0xc000163610] after accepting shards deletion ShardOperationArgs{ConfigNum: 7, ShardIDs: [0 1]} when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 2}{Group 101} Execute Command Command{commandType: DeleteShards, Data: {7 [0 1]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:46 {Node 2}{Group 101} processes GCTaskRequest ShardOperationArgs{ConfigNum: 7, ShardIDs: [0 1]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:46 {Node 0}{Group 100} deletes shards [0 1] in remote group successfully when currentConfigNum is 7
2025/01/04 13:02:46 {Node 0}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {7 [0 1]}} 29 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 101} discards outdated shards deletion ShardOperationArgs{ConfigNum: 7, ShardIDs: [0 1]} when currentConfig is {Num:1,Shards:[100 100 100 100 100 100 100 100 100 100],Groups:map[100:[server-100-0 server-100-1 server-100-2]]}
2025/01/04 13:02:46 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 ZKb8z Append 3651484034481482531 1}} 39 1 false [] 0 0}
2025/01/04 13:02:46 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 ZKb8z Append 3651484034481482531 1}} 39 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 HsyHs Put 3651484034481482531 2}} 40 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {3 HsyHs Put 3651484034481482531 2}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:46 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 HsyHs Put 3651484034481482531 2}} 40 1 false [] 0 0}
2025/01/04 13:02:46 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 HsyHs Put 3651484034481482531 2}} 40 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {7 [0 1]}} 41 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100}'s shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc000200a00 6:0xc000200a10 7:0xc000280610 8:0xc000268050 9:0xc000280620] before accepting shards deletion ShardOperationArgs{ConfigNum: 7, ShardIDs: [0 1]} when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 100}'s shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc000200a00 6:0xc000200a10 7:0xc000280610 8:0xc000268050 9:0xc000280620] after accepting shards deletion ShardOperationArgs{ConfigNum: 7, ShardIDs: [0 1]} when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {7 [0 1]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:46 {Node 1}{Group 101} tries to apply message {true Command{commandType: DeleteShards, Data: {7 [0 1]}} 29 1 false [] 0 0}
2025/01/04 13:02:46 {Node 1}{Group 101}'s shards status are map[0:0xc000163c70 1:0xc000436ab0 2:0xc000436aa0 3:0xc000436ac0 4:0xc000436ad0 5:0xc000163200 6:0xc000163210 7:0xc000163220 8:0xc000436ae0 9:0xc000163240] before accepting shards deletion ShardOperationArgs{ConfigNum: 7, ShardIDs: [0 1]} when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 1}{Group 101}'s shards status are map[0:0xc0004500f0 1:0xc000450100 2:0xc000436aa0 3:0xc000436ac0 4:0xc000436ad0 5:0xc000163200 6:0xc000163210 7:0xc000163220 8:0xc000436ae0 9:0xc000163240] after accepting shards deletion ShardOperationArgs{ConfigNum: 7, ShardIDs: [0 1]} when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 223261431832303620 5}} 30 1 false [] 0 0}
2025/01/04 13:02:46 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {4  Get 223261431832303620 5}} with CommandReply CommandReply{Err: OK, Value: z017X0iu9Qcb4XrWS4a_}
2025/01/04 13:02:46 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 223261431832303620 5}} 30 1 false [] 0 0}
2025/01/04 13:02:46 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {7 [0 1]}} 41 1 false [] 0 0}
2025/01/04 13:02:46 {Node 1}{Group 100}'s shards status are map[0:0xc000162620 1:0xc000162630 2:0xc000162640 3:0xc000162650 4:0xc000162660 5:0xc0003ad180 6:0xc0003ad190 7:0xc000281c80 8:0xc0002fee80 9:0xc000281c90] before accepting shards deletion ShardOperationArgs{ConfigNum: 7, ShardIDs: [0 1]} when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 1}{Group 100}'s shards status are map[0:0xc000162620 1:0xc000162630 2:0xc000162640 3:0xc000162650 4:0xc000162660 5:0xc0003ad180 6:0xc0003ad190 7:0xc000281c80 8:0xc0002fee80 9:0xc000281c90] after accepting shards deletion ShardOperationArgs{ConfigNum: 7, ShardIDs: [0 1]} when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc000200a00 6:0xc000200a10 7:0xc000280610 8:0xc000268050 9:0xc000280620] when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 223261431832303620 5}} 30 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} starts a GCTask to delete shards [5] from group 102 when config is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4 a-wAy Append 3651484034481482531 3}} 31 1 false [] 0 0}
2025/01/04 13:02:46 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {4 a-wAy Append 3651484034481482531 3}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:46 {Node 0}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc0004de700 1:0xc0004de710 2:0xc0004de720 3:0xc0004de730 4:0xc0004de6f0 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4 a-wAy Append 3651484034481482531 3}} 31 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 T9Pwr Append 1470913102139600799 2}} 42 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {3 T9Pwr Append 1470913102139600799 2}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:46 {Node 2}{Group 100} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 113 255 138 1 12 1 10 255 202 255 202 255 202 255 202 255 202 255 204 255 204 255 204 255 204 255 204 1 2 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 255 155 255 138 1 14 1 10 255 200 255 200 255 202 255 202 255 202 255 200 255 204 255 204 255 204 255 204 1 3 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 15 255 161 4 1 2 255 162 0 1 4 1 255 158 0 0 31 255 157 3 1 2 255 158 0 1 2 1 2 75 86 1 255 160 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 159 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 160 0 1 12 1 12 0 0 95 255 162 0 10 6 1 0 0 12 1 0 0 18 1 0 0 10 1 1 1 55 15 76 65 86 83 78 45 100 75 107 70 79 109 97 54 84 1 3 0 14 1 0 0 16 1 0 0 0 1 1 1 50 20 106 118 117 117 50 49 102 86 104 45 84 45 84 90 65 56 111 65 45 48 0 2 1 1 1 51 5 72 115 121 72 115 0 4 1 0 0 8 1 0 0 15 255 167 4 1 2 255 168 0 1 4 1 255 164 0 0 51 255 163 3 1 2 255 164 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 166 0 0 0 44 255 165 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 166 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 255 200 255 168 0 11 248 31 245 167 155 87 85 117 242 1 14 1 1 2 79 75 0 0 248 118 18 217 24 249 199 205 226 1 2 1 1 2 79 75 0 0 248 33 136 168 10 215 131 231 216 2 1 2 79 75 0 0 248 79 105 42 223 187 53 238 154 1 18 1 1 2 79 75 0 0 248 76 42 141 237 142 25 50 222 1 22 1 1 2 79 75 0 0 248 111 58 242 66 242 100 251 130 1 8 1 1 2 79 75 0 0 248 26 200 223 46 186 195 218 194 1 14 1 1 2 79 75 0 0 248 40 211 119 88 168 255 95 62 1 2 1 1 2 79 75 0 0 248 101 89 90 196 20 142 214 70 1 4 1 1 2 79 75 0 0 248 6 50 94 45 192 209 176 8 1 6 1 1 2 79 75 0 0 248 98 135 227 211 220 47 147 60 1 8 1 1 2 79 75 0 0] 1 41}
2025/01/04 13:02:46 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 T9Pwr Append 1470913102139600799 2}} 42 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 4fESu Append 965018916061572449 8}} 43 1 false [] 0 0}
2025/01/04 13:02:46 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 T9Pwr Append 1470913102139600799 2}} 42 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {3 4fESu Append 965018916061572449 8}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:46 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 4fESu Append 965018916061572449 8}} 43 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} starts a GCTask to delete shards [5] from group 102 when config is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 100} will not try to fetch latest configuration because shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc000200a00 6:0xc000200a10 7:0xc000280610 8:0xc000268050 9:0xc000280620] when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3  Get 4254050673674675953 2}} 44 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {3  Get 4254050673674675953 2}} with CommandReply CommandReply{Err: OK, Value: HsyHsT9Pwr4fESu}
2025/01/04 13:02:46 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3  Get 4254050673674675953 2}} 44 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 965018916061572449 9}} 45 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {2  Get 965018916061572449 9}} with CommandReply CommandReply{Err: OK, Value: jvuu21fVh-T-TZA8oA-0}
2025/01/04 13:02:46 {Node 0}{Group 102} will not try to fetch latest configuration because shards status are map[0:0xc0004de700 1:0xc0004de710 2:0xc0004de720 3:0xc0004de730 4:0xc0004de6f0 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1  Get 3651484034481482531 4}} 49 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 1470913102139600799 3}} 50 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {1  Get 3651484034481482531 4}} with CommandReply CommandReply{Err: OK, Value: dTwqfITpfYH2UPvpp2al}
2025/01/04 13:02:46 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {9  Get 1470913102139600799 3}} with CommandReply CommandReply{Err: OK, Value: YCMcG12wiKFQh2TPShAI}
2025/01/04 13:02:46 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1  Get 3651484034481482531 4}} 49 1 false [] 0 0}
2025/01/04 13:02:46 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 1470913102139600799 3}} 50 1 false [] 0 0}
2025/01/04 13:02:46 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1  Get 3651484034481482531 4}} 49 1 false [] 0 0}
2025/01/04 13:02:46 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 1470913102139600799 3}} 50 1 false [] 0 0}
2025/01/04 13:02:46 {Node 2}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {7 [5]}} 51 1 false [] 0 0}
2025/01/04 13:02:46 {Node 2}{Group 102}'s shards status are map[0:0xc0002fe850 1:0xc0002fe860 2:0xc0002fe870 3:0xc0002fe880 4:0xc0002fe840 5:0xc0001b21e0 6:0xc0001b21f0 7:0xc0001b2200 8:0xc0001b2210 9:0xc0001b2220] before accepting shards deletion ShardOperationArgs{ConfigNum: 7, ShardIDs: [5]} when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 2}{Group 102}'s shards status are map[0:0xc0002fe850 1:0xc0002fe860 2:0xc0002fe870 3:0xc0002fe880 4:0xc0002fe840 5:0xc0000aa110 6:0xc0001b21f0 7:0xc0001b2200 8:0xc0001b2210 9:0xc0001b2220] after accepting shards deletion ShardOperationArgs{ConfigNum: 7, ShardIDs: [5]} when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 965018916061572449 9}} 45 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {7 [5]}} 51 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 102}'s shards status are map[0:0xc0004de700 1:0xc0004de710 2:0xc0004de720 3:0xc0004de730 4:0xc0004de6f0 5:0xc0001639a0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] before accepting shards deletion ShardOperationArgs{ConfigNum: 7, ShardIDs: [5]} when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 1}{Group 102} tries to apply message {true Command{commandType: DeleteShards, Data: {7 [5]}} 51 1 false [] 0 0}
2025/01/04 13:02:46 {Node 1}{Group 102}'s shards status are map[0:0xc000200450 1:0xc0002004a0 2:0xc0002004b0 3:0xc0002004c0 4:0xc000200440 5:0xc000163d70 6:0xc000163d80 7:0xc000163d90 8:0xc000163da0 9:0xc000163db0] before accepting shards deletion ShardOperationArgs{ConfigNum: 7, ShardIDs: [5]} when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 1}{Group 102}'s shards status are map[0:0xc000200450 1:0xc0002004a0 2:0xc0002004b0 3:0xc0002004c0 4:0xc000200440 5:0xc0002fe7f0 6:0xc000163d80 7:0xc000163d90 8:0xc000163da0 9:0xc000163db0] after accepting shards deletion ShardOperationArgs{ConfigNum: 7, ShardIDs: [5]} when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 102}'s shards status are map[0:0xc0004de700 1:0xc0004de710 2:0xc0004de720 3:0xc0004de730 4:0xc0004de6f0 5:0xc000436cc0 6:0xc0001639b0 7:0xc0001639c0 8:0xc0001639d0 9:0xc0001639e0] after accepting shards deletion ShardOperationArgs{ConfigNum: 7, ShardIDs: [5]} when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 102} Execute Command Command{commandType: DeleteShards, Data: {7 [5]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:46 {Node 0}{Group 102} processes GCTaskRequest ShardOperationArgs{ConfigNum: 7, ShardIDs: [5]} with GCTaskReply ShardOperationReply{Err: OK, ConfigNum: 0, Shards: map[], LastOperations: map[]}
2025/01/04 13:02:46 {Node 0}{Group 100} deletes shards [5] in remote group successfully when currentConfigNum is 7
2025/01/04 13:02:46 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 IznBq Append 1470913102139600799 4}} 46 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {3 IznBq Append 1470913102139600799 4}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:46 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 IznBq Append 1470913102139600799 4}} 46 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 4254050673674675953 3}} 47 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {2  Get 4254050673674675953 3}} with CommandReply CommandReply{Err: OK, Value: jvuu21fVh-T-TZA8oA-0}
2025/01/04 13:02:46 {Node 2}{Group 100} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 113 255 138 1 12 1 10 255 202 255 202 255 202 255 202 255 202 255 204 255 204 255 204 255 204 255 204 1 2 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 0 255 155 255 138 1 14 1 10 255 200 255 200 255 202 255 202 255 202 255 200 255 204 255 204 255 204 255 204 1 3 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 0 15 255 161 4 1 2 255 162 0 1 4 1 255 158 0 0 31 255 157 3 1 2 255 158 0 1 2 1 2 75 86 1 255 160 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 159 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 160 0 1 12 1 12 0 0 105 255 162 0 10 6 1 0 0 12 1 0 0 18 1 0 0 14 1 0 0 16 1 0 0 0 1 1 1 50 20 106 118 117 117 50 49 102 86 104 45 84 45 84 90 65 56 111 65 45 48 0 2 1 1 1 51 15 72 115 121 72 115 84 57 80 119 114 52 102 69 83 117 0 4 1 0 0 8 1 0 0 10 1 1 1 55 15 76 65 86 83 78 45 100 75 107 70 79 109 97 54 84 1 3 0 15 255 167 4 1 2 255 168 0 1 4 1 255 164 0 0 51 255 163 3 1 2 255 164 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 166 0 0 0 44 255 165 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 166 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 255 200 255 168 0 11 248 33 136 168 10 215 131 231 216 2 1 2 79 75 0 0 248 79 105 42 223 187 53 238 154 1 18 1 1 2 79 75 0 0 248 76 42 141 237 142 25 50 222 1 22 1 1 2 79 75 0 0 248 31 245 167 155 87 85 117 242 1 14 1 1 2 79 75 0 0 248 118 18 217 24 249 199 205 226 1 2 1 1 2 79 75 0 0 248 40 211 119 88 168 255 95 62 1 4 1 1 2 79 75 0 0 248 101 89 90 196 20 142 214 70 1 4 1 1 2 79 75 0 0 248 6 50 94 45 192 209 176 8 1 6 1 1 2 79 75 0 0 248 98 135 227 211 220 47 147 60 1 8 1 1 2 79 75 0 0 248 111 58 242 66 242 100 251 130 1 8 1 1 2 79 75 0 0 248 26 200 223 46 186 195 218 194 1 16 1 1 2 79 75 0 0] 1 45}
2025/01/04 13:02:46 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 IznBq Append 1470913102139600799 4}} 46 1 false [] 0 0}
2025/01/04 13:02:46 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5  Get 2744177573667576175 14}} 32 1 false [] 0 0}
2025/01/04 13:02:46 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 2ePB6 Put 1151465535048432377 11}} 33 1 false [] 0 0}
2025/01/04 13:02:46 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {5 2ePB6 Put 1151465535048432377 11}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:46 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {5  Get 2744177573667576175 14}} with CommandReply CommandReply{Err: OK, Value: p4Qdywctwi9hRNc}
2025/01/04 13:02:46 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 4254050673674675953 3}} 47 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {7 [5]}} 48 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100}'s shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc000200a00 6:0xc000200a10 7:0xc000280610 8:0xc000268050 9:0xc000280620] before accepting shards deletion ShardOperationArgs{ConfigNum: 7, ShardIDs: [5]} when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 100}'s shards status are map[0:0xc0004370b0 1:0xc0004370c0 2:0xc0004370d0 3:0xc0004370e0 4:0xc0004370a0 5:0xc000200a00 6:0xc000200a10 7:0xc000280610 8:0xc000268050 9:0xc000280620] after accepting shards deletion ShardOperationArgs{ConfigNum: 7, ShardIDs: [5]} when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 0}{Group 100} Execute Command Command{commandType: DeleteShards, Data: {7 [5]}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:46 {Node 1}{Group 100} tries to apply message {true Command{commandType: DeleteShards, Data: {7 [5]}} 48 1 false [] 0 0}
2025/01/04 13:02:46 {Node 1}{Group 100}'s shards status are map[0:0xc000162620 1:0xc000162630 2:0xc000162640 3:0xc000162650 4:0xc000162660 5:0xc0003ad180 6:0xc0003ad190 7:0xc000281c80 8:0xc0002fee80 9:0xc000281c90] before accepting shards deletion ShardOperationArgs{ConfigNum: 7, ShardIDs: [5]} when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 1}{Group 100}'s shards status are map[0:0xc000162620 1:0xc000162630 2:0xc000162640 3:0xc000162650 4:0xc000162660 5:0xc0003ad180 6:0xc0003ad190 7:0xc000281c80 8:0xc0002fee80 9:0xc000281c90] after accepting shards deletion ShardOperationArgs{ConfigNum: 7, ShardIDs: [5]} when currentConfig is {Num:7,Shards:[100 100 101 101 101 100 102 102 102 102],Groups:map[100:[server-100-0 server-100-1 server-100-2] 101:[server-101-0 server-101-1 server-101-2] 102:[server-102-0 server-102-1 server-102-2]]}
2025/01/04 13:02:46 {Node 1}{Group 101} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 113 255 138 1 12 1 10 255 202 255 202 255 202 255 202 255 202 255 204 255 204 255 204 255 204 255 204 1 2 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 0 255 155 255 138 1 14 1 10 255 200 255 200 255 202 255 202 255 202 255 200 255 204 255 204 255 204 255 204 1 3 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 15 255 161 4 1 2 255 162 0 1 4 1 255 158 0 0 31 255 157 3 1 2 255 158 0 1 2 1 2 75 86 1 255 160 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 159 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 160 0 1 12 1 12 0 0 103 255 162 0 10 16 1 0 0 8 1 1 1 54 10 65 112 76 122 79 79 120 76 65 118 0 10 1 0 0 12 1 0 0 14 1 0 0 18 1 0 0 0 1 0 0 2 1 0 0 4 1 1 1 52 25 122 48 49 55 88 48 105 117 57 81 99 98 52 88 114 87 83 52 97 95 97 45 119 65 121 0 6 1 1 1 53 15 112 52 81 100 121 119 99 116 119 105 57 104 82 78 99 0 15 255 167 4 1 2 255 168 0 1 4 1 255 164 0 0 51 255 163 3 1 2 255 164 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 166 0 0 0 44 255 165 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 166 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 255 200 255 168 0 11 248 79 105 42 223 187 53 238 154 1 18 1 1 2 79 75 0 0 248 98 135 227 211 220 47 147 60 1 6 1 1 2 79 75 0 0 248 40 211 119 88 168 255 95 62 1 2 1 1 2 79 75 0 0 248 76 42 141 237 142 25 50 222 1 22 1 1 2 79 75 0 0 248 31 245 167 155 87 85 117 242 1 14 1 1 2 79 75 0 0 248 118 18 217 24 249 199 205 226 1 2 1 1 2 79 75 0 0 248 6 50 94 45 192 209 176 8 1 6 1 1 2 79 75 0 0 248 111 58 242 66 242 100 251 130 1 8 1 1 2 79 75 0 0 248 26 200 223 46 186 195 218 194 1 14 1 1 2 79 75 0 0 248 101 89 90 196 20 142 214 70 1 6 1 1 2 79 75 0 0 248 33 136 168 10 215 131 231 216 2 1 2 79 75 0 0] 1 31}
2025/01/04 13:02:46 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5  Get 2744177573667576175 14}} 32 1 false [] 0 0}
2025/01/04 13:02:46 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 2ePB6 Put 1151465535048432377 11}} 33 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5  Get 2744177573667576175 14}} 32 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 2ePB6 Put 1151465535048432377 11}} 33 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 782Sg Append 965018916061572449 10}} 52 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {0 782Sg Append 965018916061572449 10}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:46 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 782Sg Append 965018916061572449 10}} 52 1 false [] 0 0}
2025/01/04 13:02:46 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 782Sg Append 965018916061572449 10}} 52 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 3549946918322293150 5}} 49 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {2  Get 3549946918322293150 5}} with CommandReply CommandReply{Err: OK, Value: jvuu21fVh-T-TZA8oA-0}
2025/01/04 13:02:46 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 3549946918322293150 5}} 49 1 false [] 0 0}
2025/01/04 13:02:46 {Node 2}{Group 100} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 113 255 138 1 12 1 10 255 202 255 202 255 202 255 202 255 202 255 204 255 204 255 204 255 204 255 204 1 2 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 255 155 255 138 1 14 1 10 255 200 255 200 255 202 255 202 255 202 255 200 255 204 255 204 255 204 255 204 1 3 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 0 15 255 161 4 1 2 255 162 0 1 4 1 255 158 0 0 31 255 157 3 1 2 255 158 0 1 2 1 2 75 86 1 255 160 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 159 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 160 0 1 12 1 12 0 0 108 255 162 0 10 6 1 0 0 12 1 0 0 18 1 0 0 16 1 0 0 0 1 1 1 50 20 106 118 117 117 50 49 102 86 104 45 84 45 84 90 65 56 111 65 45 48 0 2 1 1 1 51 20 72 115 121 72 115 84 57 80 119 114 52 102 69 83 117 73 122 110 66 113 0 4 1 0 0 8 1 0 0 10 1 1 1 55 15 76 65 86 83 78 45 100 75 107 70 79 109 97 54 84 0 14 1 0 0 15 255 167 4 1 2 255 168 0 1 4 1 255 164 0 0 51 255 163 3 1 2 255 164 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 166 0 0 0 44 255 165 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 166 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 255 200 255 168 0 11 248 76 42 141 237 142 25 50 222 1 22 1 1 2 79 75 0 0 248 31 245 167 155 87 85 117 242 1 14 1 1 2 79 75 0 0 248 118 18 217 24 249 199 205 226 1 2 1 1 2 79 75 0 0 248 33 136 168 10 215 131 231 216 2 1 2 79 75 0 0 248 79 105 42 223 187 53 238 154 1 18 1 1 2 79 75 0 0 248 98 135 227 211 220 47 147 60 1 8 1 1 2 79 75 0 0 248 111 58 242 66 242 100 251 130 1 8 1 1 2 79 75 0 0 248 26 200 223 46 186 195 218 194 1 16 1 1 2 79 75 0 0 248 40 211 119 88 168 255 95 62 1 8 1 1 2 79 75 0 0 248 101 89 90 196 20 142 214 70 1 4 1 1 2 79 75 0 0 248 6 50 94 45 192 209 176 8 1 6 1 1 2 79 75 0 0] 1 48}
2025/01/04 13:02:46 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 3549946918322293150 5}} 49 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 4254050673674675953 3}} 50 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {2  Get 4254050673674675953 3}} with CommandReply CommandReply{Err: OK, Value: jvuu21fVh-T-TZA8oA-0}
2025/01/04 13:02:46 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 4254050673674675953 3}} 50 1 false [] 0 0}
2025/01/04 13:02:46 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 4254050673674675953 3}} 50 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 _USzT Append 3549946918322293150 6}} 51 1 false [] 0 0}
2025/01/04 13:02:46 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {3 _USzT Append 3549946918322293150 6}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:46 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 _USzT Append 3549946918322293150 6}} 51 1 false [] 0 0}
2025/01/04 13:02:46 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 1151465535048432377 12}} 34 1 false [] 0 0}
2025/01/04 13:02:46 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {6  Get 1151465535048432377 12}} with CommandReply CommandReply{Err: OK, Value: ApLzOOxLAv}
2025/01/04 13:02:46 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 _USzT Append 3549946918322293150 6}} 51 1 false [] 0 0}
2025/01/04 13:02:46 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 1151465535048432377 12}} 34 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4254050673674675953 4}} 53 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {9  Get 4254050673674675953 4}} with CommandReply CommandReply{Err: OK, Value: YCMcG12wiKFQh2TPShAI}
2025/01/04 13:02:47 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 1151465535048432377 12}} 34 1 false [] 0 0}
2025/01/04 13:02:47 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4254050673674675953 4}} 53 1 false [] 0 0}
2025/01/04 13:02:47 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4254050673674675953 4}} 53 1 false [] 0 0}
2025/01/04 13:02:47 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 1151465535048432377 13}} 35 1 false [] 0 0}
2025/01/04 13:02:47 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {6  Get 1151465535048432377 13}} with CommandReply CommandReply{Err: OK, Value: ApLzOOxLAv}
2025/01/04 13:02:47 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 1151465535048432377 13}} 35 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 4007492428103843265 5}} 52 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 5V80h Append 1151465535048432377 14}} 53 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {2 5V80h Append 1151465535048432377 14}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:47 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 4007492428103843265 5}} 52 1 false [] 0 0}
2025/01/04 13:02:47 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 5V80h Append 1151465535048432377 14}} 53 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {2  Get 4007492428103843265 5}} with CommandReply CommandReply{Err: OK, Value: jvuu21fVh-T-TZA8oA-0}
2025/01/04 13:02:47 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2  Get 4007492428103843265 5}} 52 1 false [] 0 0}
2025/01/04 13:02:47 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 5V80h Append 1151465535048432377 14}} 53 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6  Get 1151465535048432377 13}} 35 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 GHifG Append 1151465535048432377 15}} 54 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {2 GHifG Append 1151465535048432377 15}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:47 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 TM4zy Append 4007492428103843265 6}} 54 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {0 TM4zy Append 4007492428103843265 6}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:47 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 GHifG Append 1151465535048432377 15}} 54 1 false [] 0 0}
2025/01/04 13:02:47 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {2 GHifG Append 1151465535048432377 15}} 54 1 false [] 0 0}
2025/01/04 13:02:47 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 TM4zy Append 4007492428103843265 6}} 54 1 false [] 0 0}
2025/01/04 13:02:47 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 TM4zy Append 4007492428103843265 6}} 54 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 CP24S Append 1151465535048432377 16}} 55 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {7 CP24S Append 1151465535048432377 16}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:47 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 CP24S Append 1151465535048432377 16}} 55 1 false [] 0 0}
2025/01/04 13:02:47 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 evm1V Append 4007492428103843265 7}} 36 1 false [] 0 0}
2025/01/04 13:02:47 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {6 evm1V Append 4007492428103843265 7}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:47 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {7 CP24S Append 1151465535048432377 16}} 55 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 evm1V Append 4007492428103843265 7}} 36 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1 aUL2u Append 965018916061572449 11}} 55 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {1 aUL2u Append 965018916061572449 11}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:47 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 evm1V Append 4007492428103843265 7}} 36 1 false [] 0 0}
2025/01/04 13:02:47 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1 aUL2u Append 965018916061572449 11}} 55 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4254050673674675953 4}} 56 1 false [] 0 0}
2025/01/04 13:02:47 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1 aUL2u Append 965018916061572449 11}} 55 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {9  Get 4254050673674675953 4}} with CommandReply CommandReply{Err: OK, Value: YCMcG12wiKFQh2TPShAI}
2025/01/04 13:02:47 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4254050673674675953 4}} 56 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1 P9osp Append 4007492428103843265 8}} 57 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {1 P9osp Append 4007492428103843265 8}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:47 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1 P9osp Append 4007492428103843265 8}} 57 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1  Get 965018916061572449 12}} 58 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {1  Get 965018916061572449 12}} with CommandReply CommandReply{Err: OK, Value: dTwqfITpfYH2UPvpp2alaUL2uP9osp}
2025/01/04 13:02:47 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 kkR6H Append 1208182982301578220 1}} 37 1 false [] 0 0}
2025/01/04 13:02:47 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {6 kkR6H Append 1208182982301578220 1}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:47 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 IcgDn Append 2744177573667576175 15}} 38 1 false [] 0 0}
2025/01/04 13:02:47 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {5 IcgDn Append 2744177573667576175 15}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:47 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {1  Get 965018916061572449 12}} 58 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 965018916061572449 13}} 59 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {0  Get 965018916061572449 13}} with CommandReply CommandReply{Err: OK, Value: mclhadAcebE2fIn782SgTM4zy}
2025/01/04 13:02:47 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 1208182982301578220 2}} 60 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {0  Get 1208182982301578220 2}} with CommandReply CommandReply{Err: OK, Value: mclhadAcebE2fIn782SgTM4zy}
2025/01/04 13:02:47 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 kkR6H Append 1208182982301578220 1}} 37 1 false [] 0 0}
2025/01/04 13:02:47 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 IcgDn Append 2744177573667576175 15}} 38 1 false [] 0 0}
2025/01/04 13:02:47 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 965018916061572449 13}} 59 1 false [] 0 0}
2025/01/04 13:02:47 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 1208182982301578220 2}} 60 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 kkR6H Append 1208182982301578220 1}} 37 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {5 IcgDn Append 2744177573667576175 15}} 38 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4007492428103843265 9}} 61 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {9  Get 4007492428103843265 9}} with CommandReply CommandReply{Err: OK, Value: YCMcG12wiKFQh2TPShAI}
2025/01/04 13:02:47 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4007492428103843265 9}} 61 1 false [] 0 0}
2025/01/04 13:02:47 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 4254050673674675953 5}} 39 1 false [] 0 0}
2025/01/04 13:02:47 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {4  Get 4254050673674675953 5}} with CommandReply CommandReply{Err: OK, Value: z017X0iu9Qcb4XrWS4a_a-wAy}
2025/01/04 13:02:47 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 M-wgU Append 965018916061572449 14}} 62 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {0 M-wgU Append 965018916061572449 14}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:47 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 4254050673674675953 5}} 39 1 false [] 0 0}
2025/01/04 13:02:47 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {4  Get 4254050673674675953 5}} 39 1 false [] 0 0}
2025/01/04 13:02:47 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0 M-wgU Append 965018916061572449 14}} 62 1 false [] 0 0}
2025/01/04 13:02:47 {Node 2}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 L5l5e Append 1470913102139600799 5}} 40 1 false [] 0 0}
2025/01/04 13:02:47 {Node 2}{Group 101} Execute Command Command{commandType: Operation, Data: {6 L5l5e Append 1470913102139600799 5}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:47 {Node 1}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 L5l5e Append 1470913102139600799 5}} 40 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 101} tries to apply message {true Command{commandType: Operation, Data: {6 L5l5e Append 1470913102139600799 5}} 40 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 965018916061572449 15}} 63 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {0  Get 965018916061572449 15}} with CommandReply CommandReply{Err: OK, Value: mclhadAcebE2fIn782SgTM4zyM-wgU}
2025/01/04 13:02:47 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 965018916061572449 15}} 63 1 false [] 0 0}
2025/01/04 13:02:47 {Node 1}{Group 102} tries to apply message {false <nil> 0 0 true [52 255 137 3 1 1 6 67 111 110 102 105 103 1 255 138 0 1 3 1 3 78 117 109 1 4 0 1 6 83 104 97 114 100 115 1 255 140 0 1 6 71 114 111 117 112 115 1 255 132 0 0 0 23 255 139 1 1 1 7 91 49 48 93 105 110 116 1 255 140 0 1 4 1 20 0 0 33 255 131 4 1 1 16 109 97 112 91 105 110 116 93 91 93 115 116 114 105 110 103 1 255 132 0 1 4 1 255 130 0 0 12 255 129 2 1 2 255 130 0 1 12 0 0 113 255 138 1 12 1 10 255 202 255 202 255 202 255 202 255 202 255 204 255 204 255 204 255 204 255 204 1 2 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 0 255 155 255 138 1 14 1 10 255 200 255 200 255 202 255 202 255 202 255 200 255 204 255 204 255 204 255 204 1 3 255 204 3 12 115 101 114 118 101 114 45 49 48 50 45 48 12 115 101 114 118 101 114 45 49 48 50 45 49 12 115 101 114 118 101 114 45 49 48 50 45 50 255 202 3 12 115 101 114 118 101 114 45 49 48 49 45 48 12 115 101 114 118 101 114 45 49 48 49 45 49 12 115 101 114 118 101 114 45 49 48 49 45 50 255 200 3 12 115 101 114 118 101 114 45 49 48 48 45 48 12 115 101 114 118 101 114 45 49 48 48 45 49 12 115 101 114 118 101 114 45 49 48 48 45 50 0 15 255 161 4 1 2 255 162 0 1 4 1 255 158 0 0 31 255 157 3 1 2 255 158 0 1 2 1 2 75 86 1 255 160 0 1 6 83 116 97 116 117 115 1 6 0 0 0 33 255 159 4 1 1 17 109 97 112 91 115 116 114 105 110 103 93 115 116 114 105 110 103 1 255 160 0 1 12 1 12 0 0 255 141 255 162 0 10 0 1 0 0 4 1 0 0 10 1 0 0 14 1 1 1 57 20 89 67 77 99 71 49 50 119 105 75 70 81 104 50 84 80 83 104 65 73 0 2 1 0 0 6 1 0 0 8 1 0 0 12 1 1 1 56 5 119 78 45 71 71 0 16 1 1 1 48 30 109 99 108 104 97 100 65 99 101 98 69 50 102 73 110 55 56 50 83 103 84 77 52 122 121 77 45 119 103 85 0 18 1 1 1 49 30 100 84 119 113 102 73 84 112 102 89 72 50 85 80 118 112 112 50 97 108 97 85 76 50 117 80 57 111 115 112 0 15 255 167 4 1 2 255 168 0 1 4 1 255 164 0 0 51 255 163 3 1 2 255 164 0 1 2 1 19 77 97 120 65 112 112 108 105 101 100 67 111 109 109 97 110 100 73 100 1 4 0 1 9 76 97 115 116 82 101 112 108 121 1 255 166 0 0 0 44 255 165 3 1 1 12 67 111 109 109 97 110 100 82 101 112 108 121 1 255 166 0 1 2 1 3 69 114 114 1 12 0 1 5 86 97 108 117 101 1 12 0 0 0 255 182 255 168 0 10 248 76 42 141 237 142 25 50 222 1 22 1 1 2 79 75 0 0 248 40 211 119 88 168 255 95 62 1 2 1 1 2 79 75 0 0 248 33 136 168 10 215 131 231 216 2 1 2 79 75 0 0 248 26 200 223 46 186 195 218 194 1 28 1 1 2 79 75 0 0 248 118 18 217 24 249 199 205 226 1 2 1 1 2 79 75 0 0 248 111 58 242 66 242 100 251 130 1 16 1 1 2 79 75 0 0 248 31 245 167 155 87 85 117 242 1 14 1 1 2 79 75 0 0 248 79 105 42 223 187 53 238 154 1 18 1 1 2 79 75 0 0 248 6 50 94 45 192 209 176 8 1 6 1 1 2 79 75 0 0 248 98 135 227 211 220 47 147 60 1 8 1 1 2 79 75 0 0] 1 62}
2025/01/04 13:02:47 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 965018916061572449 15}} 63 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4007492428103843265 9}} 64 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {9  Get 4007492428103843265 9}} with CommandReply CommandReply{Err: OK, Value: YCMcG12wiKFQh2TPShAI}
2025/01/04 13:02:47 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4007492428103843265 9}} 64 1 false [] 0 0}
2025/01/04 13:02:47 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {9  Get 4007492428103843265 9}} 64 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 1208182982301578220 2}} 65 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 102} Execute Command Command{commandType: Operation, Data: {0  Get 1208182982301578220 2}} with CommandReply CommandReply{Err: OK, Value: mclhadAcebE2fIn782SgTM4zyM-wgU}
2025/01/04 13:02:47 {Node 2}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 1208182982301578220 2}} 65 1 false [] 0 0}
2025/01/04 13:02:47 {Node 1}{Group 102} tries to apply message {true Command{commandType: Operation, Data: {0  Get 1208182982301578220 2}} 65 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 vaeAe Append 4254050673674675953 6}} 56 1 false [] 0 0}
2025/01/04 13:02:47 {Node 0}{Group 100} Execute Command Command{commandType: Operation, Data: {3 vaeAe Append 4254050673674675953 6}} with CommandReply CommandReply{Err: OK, Value: }
2025/01/04 13:02:47 {Node 2}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 vaeAe Append 4254050673674675953 6}} 56 1 false [] 0 0}
2025/01/04 13:02:47 {Node 1}{Group 100} tries to apply message {true Command{commandType: Operation, Data: {3 vaeAe Append 4254050673674675953 6}} 56 1 false [] 0 0}
panic: test timed out after 30s
	running tests:
		TestUnreliable3_5B (30s)

goroutine 19581 [running]:
testing.(*M).startAlarm.func1()
	/usr/local/go/src/testing/testing.go:2373 +0x385
created by time.goFunc
	/usr/local/go/src/time/sleep.go:215 +0x2d

goroutine 1 [chan receive]:
testing.(*T).Run(0xc00010eb60, {0x6936e5?, 0x0?}, 0x6aa3c0)
	/usr/local/go/src/testing/testing.go:1751 +0x3ab
testing.runTests.func1(0xc00010eb60)
	/usr/local/go/src/testing/testing.go:2168 +0x37
testing.tRunner(0xc00010eb60, 0xc00012bc70)
	/usr/local/go/src/testing/testing.go:1690 +0xf4
testing.runTests(0xc000010408, {0x87a3c0, 0xe, 0xe}, {0x471ad0?, 0x47173a?, 0x87f260?})
	/usr/local/go/src/testing/testing.go:2166 +0x43d
testing.(*M).Run(0xc0001101e0)
	/usr/local/go/src/testing/testing.go:2034 +0x64a
main.main()
	_testmain.go:71 +0x9b

goroutine 6 [chan receive]:
6.5840/shardkv.TestUnreliable3_5B(0xc00010ed00)
	/home/ubuntu/my_6.5840/src/shardkv/test_test.go:788 +0x8c5
testing.tRunner(0xc00010ed00, 0x6aa3c0)
	/usr/local/go/src/testing/testing.go:1690 +0xf4
created by testing.(*T).Run in goroutine 1
	/usr/local/go/src/testing/testing.go:1743 +0x390

goroutine 7 [runnable]:
6.5840/labrpc.MakeNetwork.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:160 +0xea
created by 6.5840/labrpc.MakeNetwork in goroutine 6
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:158 +0x196

goroutine 8 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0x0?, 0x30?, 0x477d32?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc00012e240)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).ticker(0xc00012e240)
	/home/ubuntu/my_6.5840/src/raft/raft.go:459 +0x5a
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 9 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0xc00003ef08?, 0xe0?, 0x475285?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc00012e240)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(0xc000015750?)
	/usr/local/go/src/sync/mutex.go:92 +0x32
sync.(*Cond).Wait(0xc0001c22c0?)
	/usr/local/go/src/sync/cond.go:72 +0x97
6.5840/raft.(*Raft).applyLog(0xc00012e240)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 10 [chan receive]:
6.5840/shardctrler.(*ShardCtrler).applier(0xc00007c300)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:70 +0x87
created by 6.5840/shardctrler.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:62 +0x28a

goroutine 11 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0x0?, 0x30?, 0x477d32?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc00012e360)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).ticker(0xc00012e360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:459 +0x5a
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 12 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000015c10, 0x193)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00012e360?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00012e360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 13 [chan receive]:
6.5840/shardctrler.(*ShardCtrler).applier(0xc00007c780)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:70 +0x87
created by 6.5840/shardctrler.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:62 +0x28a

goroutine 14 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00012e480)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 15 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000015dd0, 0x1ab)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000225e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00012e480)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 16 [chan receive]:
6.5840/shardctrler.(*ShardCtrler).applier(0xc00007c9c0)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:70 +0x87
created by 6.5840/shardctrler.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:62 +0x28a

goroutine 17 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00012e5a0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 18 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000160150, 0x35)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000057e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00012e5a0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 19 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc000166000)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 20 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007a6e0, {0x69423c?, 0xc000413e00?}, {0x638000, 0xc000413e00}, {0x64d140, 0xc0001b40e0})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/shardctrler.(*Clerk).Command(0xc000109ad0, 0xc000413e00)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:73 +0xc5
6.5840/shardctrler.(*Clerk).Query(...)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:60
6.5840/shardkv.(*ShardKV).configurationAction(0xc000166000)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:341 +0x245
6.5840/shardkv.(*ShardKV).Monitor(0xc000166000, 0xc000162240, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:383 +0x5f
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 21 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166000, 0xc000162250, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 22 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166000, 0xc000162260, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 23 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166000, 0xc000162270, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 24 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00012e900)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 25 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000160310, 0x35)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000211e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00012e900)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 26 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc000166160)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 27 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166160, 0xc0001626d0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 28 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166160, 0xc0001626e0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 29 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166160, 0xc0001626f0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 30 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166160, 0xc000162700, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 31 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00012eb40)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 32 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc0001604d0, 0x34)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00016ee90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00012eb40)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 33 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0001662c0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 34 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001662c0, 0xc000162ac0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 35 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001662c0, 0xc000162ad0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 36 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001662c0, 0xc000162ae0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 37 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001662c0, 0xc000162af0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 38 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00012eea0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 39 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000160690, 0x23)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc00018c690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00012eea0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 40 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc000166420)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 41 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166420, 0xc000162e90, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 42 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166420, 0xc000162ea0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 43 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166420, 0xc000162eb0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 44 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166420, 0xc000162ec0, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 45 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00012f0e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 46 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000160850, 0x24)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000187e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00012f0e0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 47 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc000166580)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 48 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166580, 0xc000163260, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 49 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166580, 0xc000163270, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 50 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166580, 0xc000163280, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 51 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166580, 0xc000163290, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 52 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00012f440)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 53 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000160a10, 0x24)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000195690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00012f440)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 54 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0001666e0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 55 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007afc0, {0x69423c?, 0xc000413ef0?}, {0x638000, 0xc000413ef0}, {0x64d140, 0xc000390000})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/shardctrler.(*Clerk).Command(0xc00017d8c0, 0xc000413ef0)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:73 +0xc5
6.5840/shardctrler.(*Clerk).Query(...)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:60
6.5840/shardkv.(*ShardKV).configurationAction(0xc0001666e0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:341 +0x245
6.5840/shardkv.(*ShardKV).Monitor(0xc0001666e0, 0xc000163630, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:383 +0x5f
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 56 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001666e0, 0xc000163640, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 57 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001666e0, 0xc000163650, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 58 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001666e0, 0xc000163660, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 59 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00012f680)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 60 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000160bd0, 0x34)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc000662e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00012f680)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 61 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc000166840)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 62 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007b180, {0x69423c?, 0xc000413ea0?}, {0x638000, 0xc000413ea0}, {0x64d140, 0xc0001b4a10})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/shardctrler.(*Clerk).Command(0xc00017de90, 0xc000413ea0)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:73 +0xc5
6.5840/shardctrler.(*Clerk).Query(...)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:60
6.5840/shardkv.(*ShardKV).configurationAction(0xc000166840)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:341 +0x245
6.5840/shardkv.(*ShardKV).Monitor(0xc000166840, 0xc000163a00, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:383 +0x5f
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 63 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166840, 0xc000163a10, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 64 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166840, 0xc000163a20, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 65 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166840, 0xc000163a30, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 66 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00012f8c0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 67 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000160d90, 0x31)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0001ae690?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00012f8c0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 68 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc0001669a0)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 69 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001669a0, 0xc000163dd0, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 70 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001669a0, 0xc000163de0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 71 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001669a0, 0xc000163df0, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 72 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc0001669a0, 0xc000163e00, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 73 [sleep]:
time.Sleep(0x1c9c380)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/raft.(*Raft).ticker(0xc00012fb00)
	/home/ubuntu/my_6.5840/src/raft/raft.go:498 +0x26
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:556 +0x3c9

goroutine 74 [sync.Cond.Wait]:
sync.runtime_notifyListWait(0xc000160f50, 0x30)
	/usr/local/go/src/runtime/sema.go:587 +0x159
sync.(*Cond).Wait(0xc0001b1e90?)
	/usr/local/go/src/sync/cond.go:71 +0x85
6.5840/raft.(*Raft).applyLog(0xc00012fb00)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1149 +0x1ad
created by 6.5840/raft.Make in goroutine 6
	/home/ubuntu/my_6.5840/src/raft/raft.go:558 +0x405

goroutine 75 [chan receive]:
6.5840/shardkv.(*ShardKV).applier(0xc000166b00)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:393 +0x87
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:196 +0x4b8

goroutine 76 [sleep]:
time.Sleep(0x5f5e100)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166b00, 0xc0001b2240, 0x5f5e100)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:199 +0x547

goroutine 77 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166b00, 0xc0001b2250, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:200 +0x5d1

goroutine 78 [sleep]:
time.Sleep(0x2faf080)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166b00, 0xc0001b2260, 0x2faf080)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:201 +0x65b

goroutine 79 [sleep]:
time.Sleep(0xbebc200)
	/usr/local/go/src/runtime/time.go:300 +0xf2
6.5840/shardkv.(*ShardKV).Monitor(0xc000166b00, 0xc0001b2270, 0xbebc200)
	/home/ubuntu/my_6.5840/src/shardkv/server.go:385 +0x29
created by 6.5840/shardkv.StartServer in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/server.go:202 +0x6e7

goroutine 19577 [semacquire]:
6.5840/labrpc.(*Network).processReq(0xc000130320, {{0x63de40, 0xc00002de10}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc00022a400, 0xc5, 0x100}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:245 +0x118
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 19619 [select]:
6.5840/shardctrler.(*ShardCtrler).Command(0xc00007c9c0, 0xc000413e50, 0xc0001b49a0)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:158 +0x21c
reflect.Value.call({0xc0001303c0?, 0xc00005c828?, 0xc000365b18?}, {0x68fc67, 0x4}, {0xc000365d20, 0x3, 0xc000365b48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc0001303c0?, 0xc00005c828?, 0xc000216d90?}, {0xc000365d20?, 0x408c65?, 0x68?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015e00, {0x694248, 0x7}, {{0x63de40, 0xc00002df10}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000ea540, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc000010a38, {{0x63de40, 0xc00002df10}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000ea540, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 19618
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 19562 [runnable]:
encoding/gob.(*Encoder).newEncoderState(...)
	/usr/local/go/src/encoding/gob/encode.go:82
encoding/gob.(*Encoder).encodeStruct(0xc0000a81e0, 0xc0000a8218, 0xc000011350, {0x6636a0?, 0xc000232600?, 0x5efcba?})
	/usr/local/go/src/encoding/gob/encode.go:310 +0xc5
encoding/gob.encOpFor.func4(0x63d100?, 0xc000161680, {0x6636a0?, 0xc000232600?, 0x23?})
	/usr/local/go/src/encoding/gob/encode.go:546 +0x6e
encoding/gob.(*Encoder).encodeArray(0xc000161640?, 0xc000000570?, {0x63d100?, 0xc00026c078?, 0xc00020f818?}, 0xc0001b24b0, 0x0, 0x6, 0x0)
	/usr/local/go/src/encoding/gob/encode.go:351 +0x4ba
encoding/gob.encOpFor.func1(0x663740?, 0xc000161640, {0x63d100?, 0xc00026c078?, 0x470bf4?})
	/usr/local/go/src/encoding/gob/encode.go:516 +0x139
encoding/gob.(*Encoder).encodeStruct(0xc0000a81e0, 0xc0000a8218, 0xc000011338, {0x663740?, 0xc00026c060?, 0x665820?})
	/usr/local/go/src/encoding/gob/encode.go:328 +0x2be
encoding/gob.encOpFor.func4(0x663740?, 0xc000161600, {0x663740?, 0xc00026c060?, 0xc00020f9c0?})
	/usr/local/go/src/encoding/gob/encode.go:546 +0x6e
encoding/gob.(*Encoder).encodeStruct(0xc0000a81e0, 0xc0000a8218, 0xc0000112d8, {0x67d4e0?, 0xc0001615c0?, 0x3?})
	/usr/local/go/src/encoding/gob/encode.go:328 +0x2be
encoding/gob.(*Encoder).encode(0xc0000a81e0, 0xc0000a8218, {0x67d4e0?, 0xc0001615c0?, 0x500000c00020fb20?}, 0xc000014180)
	/usr/local/go/src/encoding/gob/encode.go:666 +0x1a5
encoding/gob.(*Encoder).sendActualType(0xc0000a81e0, {0x6f3920, 0xc00039e720}, 0xc000161580, 0xc000259200, {0x6f8478, 0x67b000})
	/usr/local/go/src/encoding/gob/encoder.go:106 +0x177
encoding/gob.(*Encoder).sendType(0xc0000a81e0, {0x6f3920, 0xc00039e720}, 0xc000161580, {0x6f8478?, 0x67b000?})
	/usr/local/go/src/encoding/gob/encoder.go:169 +0xf6
encoding/gob.(*Encoder).sendTypeDescriptor(0xc0000a81e0, {0x6f3920, 0xc00039e720}, 0xc000161580, 0xc000259180)
	/usr/local/go/src/encoding/gob/encoder.go:191 +0x9e
encoding/gob.(*Encoder).EncodeValue(0xc0000a81e0, {0x638280?, 0xc000161140?, 0x638280?})
	/usr/local/go/src/encoding/gob/encoder.go:244 +0x38c
encoding/gob.(*Encoder).Encode(0x638280?, {0x638280?, 0xc000161140?})
	/usr/local/go/src/encoding/gob/encoder.go:176 +0x74
6.5840/labgob.(*LabEncoder).Encode(0xc000360180, {0x638280, 0xc000161140})
	/home/ubuntu/my_6.5840/src/labgob/labgob.go:34 +0x3f
6.5840/labrpc.(*ClientEnd).Call(0xc00007af20, {0x693bbf?, 0xc0000c3fd0?}, {0x638280, 0xc000161140}, {0x63c540, 0xc000360178})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:96 +0x111
6.5840/raft.(*Raft).sendAppendEntries(...)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1026
6.5840/raft.(*Raft).sendEntries(0xc00012f440, 0x0, 0xc000161140)
	/home/ubuntu/my_6.5840/src/raft/raft.go:721 +0xc8
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 52
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 19560 [select]:
6.5840/labrpc.(*Network).processReq(0xc000130320, {{0x63de40, 0xc000163470}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc000122000, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 19592 [select]:
6.5840/labrpc.(*Network).processReq(0xc000130320, {{0x63de40, 0xc0001e8670}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000ea2a0, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 19593 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0x5f6fc5?, 0x80?, 0x63e000?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc00012e480)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).Start(0xc00012e480, {0x657600, 0xc000284dc0})
	/home/ubuntu/my_6.5840/src/raft/raft.go:411 +0x79
6.5840/shardctrler.(*ShardCtrler).Command(0xc00007c9c0, 0xc000284dc0, 0xc0001b5110)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:149 +0x10b
reflect.Value.call({0xc0001303c0?, 0xc00005c828?, 0xc000397b18?}, {0x68fc67, 0x4}, {0xc000397d20, 0x3, 0xc000397b48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc0001303c0?, 0xc00005c828?, 0xc00041c548?}, {0xc000397d20?, 0x68a260?, 0xc000172438?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015e00, {0x694248, 0x7}, {{0x63de40, 0xc0001e8670}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000ea2a0, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc000010a38, {{0x63de40, 0xc0001e8670}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000ea2a0, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 19592
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 19561 [semacquire]:
encoding/gob.(*encBuffer).Write(0xc0000de038, {0xc000202088, 0x14, 0xc0000de090?})
	/usr/local/go/src/encoding/gob/encode.go:55 +0x57
encoding/gob.(*Encoder).writeMessage(0xc0000de000, {0x6f3f40, 0xc0000de038}, 0xc0000ac000)
	/usr/local/go/src/encoding/gob/encoder.go:82 +0x3bf
encoding/gob.(*Encoder).encodeInterface(0xc0000de000, 0xc0000de038, {0x649ba0?, 0xc00078f4f0?, 0x5f0274?})
	/usr/local/go/src/encoding/gob/encode.go:424 +0x8be
encoding/gob.encOpFor.func5(0x66a4c0?, 0xc000015ec0, {0x649ba0?, 0xc00078f4f0?, 0x6f8478?})
	/usr/local/go/src/encoding/gob/encode.go:554 +0xcf
encoding/gob.(*Encoder).encodeStruct(0xc0000de000, 0xc0000de038, 0xc000290e10, {0x66a4c0?, 0xc00078f4e0?, 0x96?})
	/usr/local/go/src/encoding/gob/encode.go:328 +0x2be
encoding/gob.encOpFor.func4(0x63c640?, 0xc000015e40, {0x66a4c0?, 0xc00078f4e0?, 0x0?})
	/usr/local/go/src/encoding/gob/encode.go:546 +0x6e
encoding/gob.(*Encoder).encodeArray(0xc000015d00?, 0xc0002cc8a0?, {0x63c640?, 0xc000490018?, 0x46d537?}, 0xc000281550, 0x0, 0x53b, 0x0)
	/usr/local/go/src/encoding/gob/encode.go:351 +0x4ba
encoding/gob.encOpFor.func1(0x63c640?, 0xc000015d00, {0x63c640?, 0xc000490018?, 0xc0003be8a0?})
	/usr/local/go/src/encoding/gob/encode.go:516 +0x139
encoding/gob.(*Encoder).encodeSingle(0xc0002cb100?, 0x0?, 0x6f8478?, {0x63c640?, 0xc000490018?, 0x407b0b?})
	/usr/local/go/src/encoding/gob/encode.go:301 +0x1f1
encoding/gob.(*Encoder).encode(0xc0000de000, 0xc0000de038, {0x63c640?, 0xc000490018?, 0xc0002cb100?}, 0xc0002cb100)
	/usr/local/go/src/encoding/gob/encode.go:668 +0x1c8
encoding/gob.(*Encoder).EncodeValue(0xc0000de000, {0x63c640?, 0xc000490018?, 0x63c640?})
	/usr/local/go/src/encoding/gob/encoder.go:251 +0x405
encoding/gob.(*Encoder).Encode(0x63c640?, {0x63c640?, 0xc000490018?})
	/usr/local/go/src/encoding/gob/encoder.go:176 +0x74
6.5840/labgob.(*LabEncoder).Encode(0xc000296008, {0x63c640, 0xc000490018})
	/home/ubuntu/my_6.5840/src/labgob/labgob.go:34 +0x3f
6.5840/raft.(*Raft).persist(0xc00012e480)
	/home/ubuntu/my_6.5840/src/raft/raft.go:170 +0xce
6.5840/raft.(*Raft).Start(0xc00012e480, {0x657600, 0xc0001d6820})
	/home/ubuntu/my_6.5840/src/raft/raft.go:420 +0x1c5
6.5840/shardctrler.(*ShardCtrler).Command(0xc00007c9c0, 0xc0001d6820, 0xc000390bd0)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:149 +0x10b
reflect.Value.call({0xc0001303c0?, 0xc00005c828?, 0xc00009bb18?}, {0x68fc67, 0x4}, {0xc00009bd20, 0x3, 0xc00009bb48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc0001303c0?, 0xc00005c828?, 0xc000360010?}, {0xc00009bd20?, 0x68a260?, 0xc0000c3c38?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015e00, {0x694248, 0x7}, {{0x63de40, 0xc000163470}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc000122000, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc000010a38, {{0x63de40, 0xc000163470}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc000122000, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 19560
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 19622 [select]:
6.5840/labrpc.(*Network).processReq(0xc000130320, {{0x63de40, 0xc00002db50}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc000248e00, 0x1de, 0x200}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 19576 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007a4a0, {0x693bbf?, 0x0?}, {0x638280, 0xc0000157c0}, {0x63c540, 0xc0002961b0})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/raft.(*Raft).sendAppendEntries(...)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1026
6.5840/raft.(*Raft).sendEntries(0xc00012e480, 0x1, 0xc0000157c0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:721 +0xc8
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 14
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 19625 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007a660, {0x693bbf?, 0xc0001717d0?}, {0x638280, 0xc00049b040}, {0x63c540, 0xc00005cbc8})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/raft.(*Raft).sendAppendEntries(...)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1026
6.5840/raft.(*Raft).sendEntries(0xc00012e5a0, 0x1, 0xc00049b040)
	/home/ubuntu/my_6.5840/src/raft/raft.go:721 +0xc8
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 17
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 19589 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0x5f6fc5?, 0x80?, 0x63e000?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc00012e480)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).Start(0xc00012e480, {0x657600, 0xc00032af00})
	/home/ubuntu/my_6.5840/src/raft/raft.go:411 +0x79
6.5840/shardctrler.(*ShardCtrler).Command(0xc00007c9c0, 0xc00032af00, 0xc000205ab0)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:149 +0x10b
reflect.Value.call({0xc0001303c0?, 0xc00005c828?, 0xc000369b18?}, {0x68fc67, 0x4}, {0xc000369d20, 0x3, 0xc000369b48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc0001303c0?, 0xc00005c828?, 0xc00041c278?}, {0xc000369d20?, 0x68a260?, 0xc000370438?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015e00, {0x694248, 0x7}, {{0x63de40, 0xc00002d1c0}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000ea0e0, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc000010a38, {{0x63de40, 0xc00002d1c0}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000ea0e0, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 19588
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 19575 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007a480, {0x693bbf?, 0xc0001907d0?}, {0x638280, 0xc0000140c0}, {0x63c540, 0xc0002961a0})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/raft.(*Raft).sendAppendEntries(...)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1026
6.5840/raft.(*Raft).sendEntries(0xc00012e480, 0x0, 0xc0000140c0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:721 +0xc8
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 14
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 19617 [select]:
6.5840/shardctrler.(*ShardCtrler).Command(0xc00007c9c0, 0xc000413db0, 0xc0001b4070)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:158 +0x21c
reflect.Value.call({0xc0001303c0?, 0xc00005c828?, 0xc000369b18?}, {0x68fc67, 0x4}, {0xc000369d20, 0x3, 0xc000369b48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc0001303c0?, 0xc00005c828?, 0xc000216c18?}, {0xc000369d20?, 0x8?, 0xc0000bdbe0?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015e00, {0x694248, 0x7}, {{0x63de40, 0xc000378420}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000ea460, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc000010a38, {{0x63de40, 0xc000378420}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000ea460, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 19616
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 1114 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007b3a0, {0x69423c?, 0xc000413d60?}, {0x638000, 0xc000413d60}, {0x64d140, 0xc00032d650})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/shardctrler.(*Clerk).Command(0xc00037c960, 0xc000413d60)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:73 +0xc5
6.5840/shardctrler.(*Clerk).Query(...)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:60
6.5840/shardkv.(*Clerk).Command(0xc00016ae10, 0xc0002f2840)
	/home/ubuntu/my_6.5840/src/shardkv/client.go:108 +0x146
6.5840/shardkv.(*Clerk).Get(...)
	/home/ubuntu/my_6.5840/src/shardkv/client.go:73
6.5840/shardkv.TestUnreliable3_5B.func1(0x2)
	/home/ubuntu/my_6.5840/src/shardkv/test_test.go:755 +0x4ea
created by 6.5840/shardkv.TestUnreliable3_5B in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/test_test.go:768 +0x6ba

goroutine 1115 [semacquire]:
6.5840/shardctrler.(*Clerk).Query(...)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:59
6.5840/shardkv.(*Clerk).Command(0xc00016a630, 0xc0003af5c0)
	/home/ubuntu/my_6.5840/src/shardkv/client.go:108 +0x12a
6.5840/shardkv.(*Clerk).Append(...)
	/home/ubuntu/my_6.5840/src/shardkv/client.go:80
6.5840/shardkv.TestUnreliable3_5B.func1(0x3)
	/home/ubuntu/my_6.5840/src/shardkv/test_test.go:749 +0x28a
created by 6.5840/shardkv.TestUnreliable3_5B in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/test_test.go:768 +0x6ba

goroutine 19563 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007af40, {0x693bbf?, 0xc0000bff48?}, {0x638280, 0xc000161280}, {0x63c540, 0xc000360168})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/raft.(*Raft).sendAppendEntries(...)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1026
6.5840/raft.(*Raft).sendEntries(0xc00012f440, 0x1, 0xc000161280)
	/home/ubuntu/my_6.5840/src/raft/raft.go:721 +0xc8
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 52
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 1118 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc000278920, {0x69423c?, 0xc000413a40?}, {0x638000, 0xc000413a40}, {0x64d140, 0xc000205b20})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/shardctrler.(*Clerk).Command(0xc0004f53e0, 0xc000413a40)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:73 +0xc5
6.5840/shardctrler.(*Clerk).Query(...)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:60
6.5840/shardkv.(*Clerk).Command(0xc00031a2d0, 0xc0002f2d00)
	/home/ubuntu/my_6.5840/src/shardkv/client.go:108 +0x146
6.5840/shardkv.(*Clerk).Append(...)
	/home/ubuntu/my_6.5840/src/shardkv/client.go:80
6.5840/shardkv.TestUnreliable3_5B.func1(0x6)
	/home/ubuntu/my_6.5840/src/shardkv/test_test.go:749 +0x28a
created by 6.5840/shardkv.TestUnreliable3_5B in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/test_test.go:768 +0x6ba

goroutine 1119 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc000293a20, {0x69423c?, 0xc000413450?}, {0x638000, 0xc000413450}, {0x64d140, 0xc000204540})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/shardctrler.(*Clerk).Command(0xc00035fc80, 0xc000413450)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:73 +0xc5
6.5840/shardctrler.(*Clerk).Query(...)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:60
6.5840/shardkv.(*Clerk).Command(0xc00021b290, 0xc000595bc0)
	/home/ubuntu/my_6.5840/src/shardkv/client.go:108 +0x146
6.5840/shardkv.(*Clerk).Append(...)
	/home/ubuntu/my_6.5840/src/shardkv/client.go:80
6.5840/shardkv.TestUnreliable3_5B.func1(0x7)
	/home/ubuntu/my_6.5840/src/shardkv/test_test.go:749 +0x28a
created by 6.5840/shardkv.TestUnreliable3_5B in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/test_test.go:768 +0x6ba

goroutine 1121 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00043eba0, {0x69423c?, 0xc000284910?}, {0x638000, 0xc000284910}, {0x64d140, 0xc0001b4690})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/shardctrler.(*Clerk).Command(0xc0003306c0, 0xc000284910)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:73 +0xc5
6.5840/shardctrler.(*Clerk).Query(...)
	/home/ubuntu/my_6.5840/src/shardctrler/client.go:60
6.5840/shardkv.(*Clerk).Command(0xc00031a5a0, 0xc00049a040)
	/home/ubuntu/my_6.5840/src/shardkv/client.go:108 +0x146
6.5840/shardkv.(*Clerk).Append(...)
	/home/ubuntu/my_6.5840/src/shardkv/client.go:80
6.5840/shardkv.TestUnreliable3_5B.func1(0x9)
	/home/ubuntu/my_6.5840/src/shardkv/test_test.go:749 +0x28a
created by 6.5840/shardkv.TestUnreliable3_5B in goroutine 6
	/home/ubuntu/my_6.5840/src/shardkv/test_test.go:768 +0x6ba

goroutine 19588 [select]:
6.5840/labrpc.(*Network).processReq(0xc000130320, {{0x63de40, 0xc00002d1c0}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000ea0e0, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 19579 [select]:
6.5840/labrpc.(*Network).processReq(0xc000130320, {{0x63de40, 0xc00002db90}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc00022e800, 0x255, 0x400}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 19590 [select]:
6.5840/labrpc.(*Network).processReq(0xc000130320, {{0x63de40, 0xc0002fe9f0}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000ea1c0, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:258 +0x3e8
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 19616 [semacquire]:
time.NewTimer(0x5f5e100)
	/usr/local/go/src/time/sleep.go:144 +0x28
time.After(...)
	/usr/local/go/src/time/sleep.go:203
6.5840/labrpc.(*Network).processReq(0xc000130320, {{0x63de40, 0xc000378420}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000ea460, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:261 +0x38a
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 19591 [sync.Mutex.Lock]:
sync.runtime_SemacquireMutex(0x5f6fc5?, 0x80?, 0x63e000?)
	/usr/local/go/src/runtime/sema.go:95 +0x25
sync.(*Mutex).lockSlow(0xc00012e480)
	/usr/local/go/src/sync/mutex.go:173 +0x15d
sync.(*Mutex).Lock(...)
	/usr/local/go/src/sync/mutex.go:92
6.5840/raft.(*Raft).Start(0xc00012e480, {0x657600, 0xc000284730})
	/home/ubuntu/my_6.5840/src/raft/raft.go:411 +0x79
6.5840/shardctrler.(*ShardCtrler).Command(0xc00007c9c0, 0xc000284730, 0xc0001b4540)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:149 +0x10b
reflect.Value.call({0xc0001303c0?, 0xc00005c828?, 0xc00039bb18?}, {0x68fc67, 0x4}, {0xc00039bd20, 0x3, 0xc00039bb48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc0001303c0?, 0xc00005c828?, 0xc00041c3e8?}, {0xc00039bd20?, 0x68a260?, 0xc0000c2438?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015e00, {0x694248, 0x7}, {{0x63de40, 0xc0002fe9f0}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000ea1c0, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc000010a38, {{0x63de40, 0xc0002fe9f0}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000ea1c0, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 19590
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 19578 [semacquire]:
6.5840/labrpc.(*Network).processReq(0xc000130320, {{0x63de40, 0xc00002db50}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc00022e000, 0x255, 0x400}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:245 +0x118
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 19580 [runnable]:
sync.(*Map).Load(0x87f020, {0x68a260, 0x657600})
	/usr/local/go/src/sync/map.go:123 +0x197
encoding/gob.validUserType({0x6f8478, 0x657600})
	/usr/local/go/src/encoding/gob/type.go:45 +0x45
encoding/gob.userType({0x6f8478?, 0x657600?})
	/usr/local/go/src/encoding/gob/type.go:154 +0x1d
encoding/gob.(*Encoder).encodeInterface(0xc0000de320, 0xc0000de358, {0x649ba0?, 0xc000752870?, 0x5f0274?})
	/usr/local/go/src/encoding/gob/encode.go:400 +0x30a
encoding/gob.encOpFor.func5(0x66a4c0?, 0xc000475740, {0x649ba0?, 0xc000752870?, 0x6f8478?})
	/usr/local/go/src/encoding/gob/encode.go:554 +0xcf
encoding/gob.(*Encoder).encodeStruct(0xc0000de320, 0xc0000de358, 0xc000290e10, {0x66a4c0?, 0xc000752860?, 0x96?})
	/usr/local/go/src/encoding/gob/encode.go:328 +0x2be
encoding/gob.encOpFor.func4(0x63c640?, 0xc000475700, {0x66a4c0?, 0xc000752860?, 0x0?})
	/usr/local/go/src/encoding/gob/encode.go:546 +0x6e
encoding/gob.(*Encoder).encodeArray(0xc000475680?, 0xc0002cc8a0?, {0x63c640?, 0xc000490408?, 0x46d537?}, 0xc000281550, 0x0, 0x53a, 0x0)
	/usr/local/go/src/encoding/gob/encode.go:351 +0x4ba
encoding/gob.encOpFor.func1(0x63c640?, 0xc000475680, {0x63c640?, 0xc000490408?, 0xc0003be8a0?})
	/usr/local/go/src/encoding/gob/encode.go:516 +0x139
encoding/gob.(*Encoder).encodeSingle(0xc0002cb100?, 0x0?, 0x6f8478?, {0x63c640?, 0xc000490408?, 0x407b0b?})
	/usr/local/go/src/encoding/gob/encode.go:301 +0x1f1
encoding/gob.(*Encoder).encode(0xc0000de320, 0xc0000de358, {0x63c640?, 0xc000490408?, 0xc0002cb100?}, 0xc0002cb100)
	/usr/local/go/src/encoding/gob/encode.go:668 +0x1c8
encoding/gob.(*Encoder).EncodeValue(0xc0000de320, {0x63c640?, 0xc000490408?, 0x63c640?})
	/usr/local/go/src/encoding/gob/encoder.go:251 +0x405
encoding/gob.(*Encoder).Encode(0x63c640?, {0x63c640?, 0xc000490408?})
	/usr/local/go/src/encoding/gob/encoder.go:176 +0x74
6.5840/labgob.(*LabEncoder).Encode(0xc0002963a0, {0x63c640, 0xc000490408})
	/home/ubuntu/my_6.5840/src/labgob/labgob.go:34 +0x3f
6.5840/raft.(*Raft).persist(0xc00012e360)
	/home/ubuntu/my_6.5840/src/raft/raft.go:170 +0xce
6.5840/raft.(*Raft).AppendEntries(0xc00012e360, 0xc000475340, 0xc0003aa7b0)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1105 +0x4c5
reflect.Value.call({0xc000130500?, 0xc00005c7c8?, 0xc00059db18?}, {0x68fc67, 0x4}, {0xc00059dd20, 0x3, 0xc00059db48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc000130500?, 0xc00005c7c8?, 0xc0002961c0?}, {0xc00059dd20?, 0x47bc41?, 0xc000054be0?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015cc0, {0x693bc4, 0xd}, {{0x63de40, 0xc00002db90}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc00022e800, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc0000109f0, {{0x63de40, 0xc00002db90}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc00022e800, 0x255, 0x400}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 19579
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 19621 [select]:
6.5840/shardctrler.(*ShardCtrler).Command(0xc00007c9c0, 0xc0001d63c0, 0xc000390930)
	/home/ubuntu/my_6.5840/src/shardctrler/server.go:158 +0x21c
reflect.Value.call({0xc0001303c0?, 0xc00005c828?, 0xc0000e3b18?}, {0x68fc67, 0x4}, {0xc0000e3d20, 0x3, 0xc0000e3b48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc0001303c0?, 0xc00005c828?, 0xc00005c100?}, {0xc0000e3d20?, 0x68a260?, 0xc000288c38?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015e00, {0x694248, 0x7}, {{0x63de40, 0xc000163840}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000ea620, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc000010a38, {{0x63de40, 0xc000163840}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000ea620, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 19620
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 19586 [semacquire]:
6.5840/raft.clone(...)
	/home/ubuntu/my_6.5840/src/raft/persister.go:25
6.5840/raft.(*Persister).Save(0xc0000156c0, {0xc000708000, 0x12d9d, 0x486877?}, {0x89f360, 0x0, 0xc000015758?})
	/home/ubuntu/my_6.5840/src/raft/persister.go:58 +0x8c
6.5840/raft.(*Raft).persist(0xc00012e240)
	/home/ubuntu/my_6.5840/src/raft/raft.go:178 +0x189
6.5840/raft.(*Raft).AppendEntries(0xc00012e240, 0xc000258c80, 0xc0003aa420)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1105 +0x4c5
reflect.Value.call({0xc000130500?, 0xc00005c5f8?, 0xc0002edb18?}, {0x68fc67, 0x4}, {0xc0002edd20, 0x3, 0xc0002edb48?})
	/usr/local/go/src/reflect/value.go:581 +0xca6
reflect.Value.Call({0xc000130500?, 0xc00005c5f8?, 0xc000216000?}, {0xc0002edd20?, 0x68a260?, 0xc000173438?})
	/usr/local/go/src/reflect/value.go:365 +0xb9
6.5840/labrpc.(*Service).dispatch(0xc000015a00, {0x693bc4, 0xd}, {{0x63de40, 0xc00002db50}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc000248e00, ...}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:514 +0x365
6.5840/labrpc.(*Server).dispatch(0xc0000109a8, {{0x63de40, 0xc00002db50}, {0x693bbf, 0x12}, {0x6f8478, 0x638280}, {0xc000248e00, 0x1de, 0x200}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:438 +0x1e5
6.5840/labrpc.(*Network).processReq.func1()
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:247 +0x3f
created by 6.5840/labrpc.(*Network).processReq in goroutine 19622
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:246 +0x1d0

goroutine 19612 [chan receive]:
6.5840/labrpc.(*ClientEnd).Call(0xc00007a480, {0x693bbf?, 0xc00036d748?}, {0x638280, 0xc000393080}, {0x63c540, 0xc000216d78})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:119 +0x226
6.5840/raft.(*Raft).sendAppendEntries(...)
	/home/ubuntu/my_6.5840/src/raft/raft.go:1026
6.5840/raft.(*Raft).sendEntries(0xc00012e480, 0x0, 0xc000393080)
	/home/ubuntu/my_6.5840/src/raft/raft.go:721 +0xc8
created by 6.5840/raft.(*Raft).broadcastHeartBeat in goroutine 19609
	/home/ubuntu/my_6.5840/src/raft/raft.go:854 +0x105

goroutine 19618 [semacquire]:
time.NewTimer(0x5f5e100)
	/usr/local/go/src/time/sleep.go:144 +0x28
time.After(...)
	/usr/local/go/src/time/sleep.go:203
6.5840/labrpc.(*Network).processReq(0xc000130320, {{0x63de40, 0xc00002df10}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000ea540, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:261 +0x38a
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58

goroutine 19620 [semacquire]:
time.NewTimer(0x5f5e100)
	/usr/local/go/src/time/sleep.go:144 +0x28
time.After(...)
	/usr/local/go/src/time/sleep.go:203
6.5840/labrpc.(*Network).processReq(0xc000130320, {{0x63de40, 0xc000163840}, {0x69423c, 0x13}, {0x6f8478, 0x638000}, {0xc0000ea620, 0xc5, 0xe0}, ...})
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:261 +0x38a
created by 6.5840/labrpc.MakeNetwork.func1 in goroutine 7
	/home/ubuntu/my_6.5840/src/labrpc/labrpc.go:164 +0x58
exit status 2
FAIL	6.5840/shardkv	30.081s
